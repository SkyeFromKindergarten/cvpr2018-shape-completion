%!PS-Adobe-3.1 EPSF-3.0
%%Title: minerva-MPG-small.eps
%%Creator: Adobe Illustrator(R) X
%%AI8_CreatorVersion: 10.0%AI9_PrintingDataBegin%%For: Max-Planck-Institut fuer Informatik
%%CreationDate: 7/14/2005
%%BoundingBox: 0 0 136 74
%%HiResBoundingBox: 0 0 135.1836 73.4532
%%CropBox: 0 0 135.1836 73.4532
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI10"
%ADOEndClientInjection: DocumentHeader "AI10"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.13 0)
%%+ procset Adobe_CoolType_Core (2.12 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: (PANTONE 328)
%%CMYKCustomColor: 
%%RGBCustomColor: 0 .407837 .360779 (PANTONE 328)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%ADOBeginClientInjection: DocumentProlog Start "AI10"
%ADOEndClientInjection: DocumentProlog Start "AI10"
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 60 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
	
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup /Cyan eq{
						pop (_Cyan_)
					}{
						dup /Magenta eq{
							pop (_Magenta_)
						}{
							dup /Yellow eq{
								pop (_Yellow_)
							}{
								dup /Black eq{
									pop (_Black_)
								}{
									dup () cvn eq{
										pop (Process)
									}if
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	
	AGMUTIL_GSTATE_flt setflat
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/rdline
{
	currentfile AGMUTIL_str256 readline pop
} bdf
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/AGMUTIL_imagefile nd
/AGMUTIL_imbuf nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	dup /DataSource {AGMUTIL_imagefile AGMUTIL_imbuf readstring pop} put
	exch
	load exec
}def
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		Adobe_AGM_Utils/AGMUTIL_imbuf Width BitsPerComponent mul 7 add 8 idiv string ddf
		1 1 Height { 
			pop
			DataSource dup type /filetype eq{
				AGMUTIL_imbuf readstring pop
			}{
				exec
			} ifelse
			AGMUTIL_imagefile exch writestring
		}for
		true
	}ifelse
	end
}def
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
     2{/exec load}repeat
     3 1 roll
     [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
    currentdict 2 index known{
    	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
	    addprocs /TransferFunction xdf 
	    currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-1999 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 205 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_src256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_will_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/stkpath_clp_npth
{
	strokepath clip newpath
} def
/stk_n_clp_npth
{
	gsave stroke grestore clip newpath
} def
/npth_clp
{
	newpath clip
} def
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
			
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
		
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp exch put
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	
	/AGMCORE_will_host_separate xdf
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
		
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 8 def
											
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr exch put
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						currentpagedevice/OverrideSeparations known
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				true exch
					{
					convert_spot_to_process and
					}
				forall
				}{
				false exch
					{
					convert_spot_to_process or
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	AGMCORE_host_sep AGMCORE_will_host_separate not and {
		/AGMCORE_cur_err /AGMCORE_color_space_onhost_seps def
		AGMCORE_color_space_onhost_seps
	}if
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/clip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&clip /clip load put
			/clip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&clip
			}def
		}if
		/eoclip AGMCORE_key_known not{
			Adobe_AGM_Core/AGMCORE_&eoclip /eoclip load put
			/eoclip
			{
				current_spot_alias{
					currentdict/InksUsed known{
						[
						InksUsed{
							dup map_alias{
								/Name get exch pop
							}if
						}forall
						]
						/InksUsed xdf
					}if
				}if
				AGMCORE_&eoclip
			}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	}def
	
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
		
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
									
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 exch put
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 exch put
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				AGMCORE_&&&setcolorspace
			}def
		}if	
	}{
		
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		
		/n_color_components
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop 1
			}{
				/DeviceCMYK eq{
					4
				}{
					3
				}ifelse
			}ifelse
		} def
		
		/setcolor_devicecolor
		{
			dup type /arraytype eq{
				0 get
			}if
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
	
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/spclp /stkpath_clp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/s /stroke ldf
	/sclp /stk_n_clp_npth ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/current_ink
{
	dup length 0 eq{
		pop true
	}{
		Adobe_AGM_Core/ink_result false put
		{
			dup /ProcessCyan eq{
				AGMCORE_cyan_plate ink_result or Adobe_AGM_Core/ink_result xddf
			}{
				dup /ProcessMagenta eq{
					AGMCORE_magenta_plate ink_result or Adobe_AGM_Core/ink_result xddf
				}{
					dup /ProcessYellow eq{
						AGMCORE_yellow_plate ink_result or Adobe_AGM_Core/ink_result xddf
					}{
						dup /ProcessBlack eq{
							AGMCORE_black_plate ink_result or Adobe_AGM_Core/ink_result xddf
						}{
							dup /sep_colorspace_dict AGMCORE_gget dup null eq{
								pop false ink_result or Adobe_AGM_Core/ink_result xddf
							}{
								/Name get eq{
									1 setsepcolor
									currentgray 1 ne ink_result or Adobe_AGM_Core/ink_result xddf
								}{
									false ink_result or Adobe_AGM_Core/ink_result xddf
								}ifelse
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			pop 
		} forall
		ink_result
	}ifelse
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
							}{
								Name inRip_spot_has_ink not
							}ifelse
							{
		 						/pop cvx 1
							}if
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		/MappedCSA CSA map_csa def
		AGMCORE_host_sep level2 not and{
			0 0 0 0 setcmykcolor
		}{
			[/Indexed MappedCSA 
			level2 not has_color not and{
				dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
					pop [/DeviceGray]
				}if
				HiVal GrayLookup
			}{
				HiVal 
				currentdict/RangeArray known{
					{ 
						/indexed_colorspace_dict AGMCORE_gget begin
						Lookup exch 
						dup HiVal gt{
							pop HiVal
						}if
						NComponents mul NComponents getinterval {} forall
						NComponents 1 sub -1 0{
							RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
							NComponents 1 roll
						}for
						end
					} bind
				}{
					Lookup
				}ifelse
			}ifelse
			] setcolorspace_opt
			
			set_crd
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget/Lookup get 4 3 -1 roll map_index setcmykcolor
	}{
		setcolor
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave 
		dup begin
		1 setgray
		0 0 ImageMatrix itransform 
		Width Height ImageMatrix idtransform rectfill 
		end
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/get_csd_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		/AGMCORE_CSD_Name xdf
		AGMCORE_CSD_cache
		{
			dup /Name get AGMCORE_CSD_Name eq
			{
				exch pop exit
			}{
				pop
			}ifelse
			pop
		}forall
		end
	}if
}def
/cachepattern_level2
{
	4 dict begin
	/comparebuffer exch def
	/holdbuffer exch def
	/readbuffer 1024 string def
	/LZWFilter holdbuffer /LZWEncode filter def
	{
		currentfile readbuffer readline not
			{pop exit}
		if
		dup LZWFilter exch writestring
		LZWFilter (\n) writestring
		comparebuffer eq
			{exit}
		if
	}loop
	LZWFilter closefile
	end
}def
/cachepattern_level3
{
	3 dict begin
	/comparebuffer exch def
	/readbuffer 1024 string def
	/DoEOL false def
	{ 
		DoEOL
			{
			(\n)
			/DoEOL false def
			}
			{
			currentfile readbuffer readline not
				{pop ()}
				{
				dup length 0 eq
					{ pop(\n)}
					{
					dup comparebuffer eq
						{pop ()}
						{/DoEOL true def}
					ifelse
					}
				ifelse
				}
			ifelse
			}
		ifelse
	} /ReusableStreamDecode filter
	end
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
	}if
}def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
	makepattern
}def
/exec_file
	statusdict /currentfilenameextend known{
		{
			0 () /SubFileDecode filter cvx exec
		}
	}{
		
		{cvx exec}
	}ifelse
def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			false sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/AGMCORE_ctm_stack bdict
	/push_ctm {
		stack length size le{
			stack dup length 2 mul array 
			dup /stack exch def
			copy pop
		}if
		stack size 3 -1 roll put
		/size size 1 add def
	}
	/pop_ctm {
		/size size 1 sub def
		size 0 lt{ 
			/size 0 def
		}if
		stack size get
	}
	/stack 1 array
	/size 0 
edict 
def
/save_ctm
{
	matrix currentmatrix AGMCORE_ctm_stack begin 
		push_ctm 
	end
}def
/restore_ctm
{
	AGMCORE_ctm_stack begin
		pop_ctm 
	end
	setmatrix
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/rdcmntline {
	currentfile AGMCORE_str256 readline pop
	(%) anchorsearch {pop} if
} def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		
		dup /customcolor_tint exch AGMCORE_gput
		
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		fill grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		currentdict /lw_initializepage known not
			{
			/lw_initializepage /initializepage load def
			/initializepage
				{
				lw_initializepage
				/initializepage {} def
				}def
			}if
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
}def
/driver_check_media_override
{
	Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
	{
		Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
	}if
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.12 0
%%Copyright: Copyright 1997-2001 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.12 0
userdict/Adobe_CoolType_Core 60 dict dup begin put/Level2? systemdict
/languagelevel known dup{pop systemdict/languagelevel get 2 ge}if def Level2?
not{/currentglobal false def/setglobal/pop load def/gcheck{pop false}bind def
/currentpacking false def/setpacking/pop load def/SharedFontDirectory 0 dict
def}if currentpacking true setpacking/@_SaveStackLevels{Adobe_CoolType_Data
begin @opStackCountByLevel @opStackLevel 2 copy known not{2 copy 3 dict dup
/args 7 index 5 add array put put get}{get dup/args get dup length 3 index lt{
dup length 5 add array exch 1 index exch 0 exch putinterval 1 index exch/args
exch put}{pop}ifelse}ifelse begin count 2 sub 1 index lt{pop count 1 sub}if
dup/argCount exch def dup 0 gt{exch 1 index 2 add 1 roll args exch 0 exch
getinterval astore pop}{pop}ifelse count 1 sub/restCount exch def end
/@opStackLevel @opStackLevel 1 add def countdictstack 1 sub
@dictStackCountByLevel exch @dictStackLevel exch put/@dictStackLevel
@dictStackLevel 1 add def end}bind def/@_RestoreStackLevels{
Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub def
@opStackCountByLevel @opStackLevel get begin count restCount sub dup 0 gt{{pop
}repeat}{pop}ifelse args 0 argCount getinterval{}forall end/@dictStackLevel
@dictStackLevel 1 sub def @dictStackCountByLevel @dictStackLevel get end
countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bind def
/@_PopStackLevels{Adobe_CoolType_Data begin/@opStackLevel @opStackLevel 1 sub
def/@dictStackLevel @dictStackLevel 1 sub def end}bind def/@Raise{exch cvx
exch errordict exch get exec stop}bind def/@ReRaise{cvx $error/errorname get
errordict exch get exec stop}bind def/@Stopped{0 @#Stopped}bind def/@#Stopped{
@_SaveStackLevels stopped{@_RestoreStackLevels true}{@_PopStackLevels false}
ifelse}bind def/@Arg{Adobe_CoolType_Data begin @opStackCountByLevel
@opStackLevel 1 sub get/args get exch get end}bind def/doc_setup{
Adobe_CoolType_Core begin/mov/moveto load def/nfnt/newencodedfont load def
/mfnt/makefont load def/sfnt/setfont load def/ufnt/undefinefont load def/chp
/charpath load def/awsh/awidthshow load def/wsh/widthshow load def/ash/ashow
load def/sh/show load def end userdict/Adobe_CoolType_Data 6 dict dup begin
/AddWidths? false def/CC 0 def/charcode 2 string def/@opStackCountByLevel 32
dict def/@opStackLevel 0 def/@dictStackCountByLevel 32 dict def
/@dictStackLevel 0 def end put}bind def/doc_trailer{currentdict
Adobe_CoolType_Core eq{end}if}bind def/page_setup{Adobe_CoolType_Core begin}
bind def/page_trailer{end}bind def/unload{systemdict/languagelevel known{
systemdict/languagelevel get 2 ge{userdict/Adobe_CoolType_Core 2 copy known{
undef}{pop pop}ifelse}if}if}bind def/ndf{1 index where{pop pop pop}{dup xcheck
{bind}if def}ifelse}def/findfont dup systemdict begin userdict begin
/globaldict where{/globaldict get begin}if dup where pop exch get/globaldict
where{pop end}if end end def/systemfindfont/findfont load def/undefinefont{pop
}ndf/copyfont{currentglobal 3 1 roll 1 index gcheck setglobal dup null eq{0}{
dup length}ifelse 2 index length add 1 add dict begin exch{1 index/FID eq{pop
pop}{def}ifelse}forall dup null eq{pop}{{def}forall}ifelse currentdict end
exch setglobal}bind def/copyarray{currentglobal exch dup gcheck setglobal dup
length array copy exch setglobal}bind def/newencodedfont{currentglobal{
SharedFontDirectory 3 index known{SharedFontDirectory 3 index get
/FontReferenced known}{false}ifelse}{FontDirectory 3 index known{FontDirectory
3 index get/FontReferenced known}{SharedFontDirectory 3 index known{
SharedFontDirectory 3 index get/FontReferenced known}{false}ifelse}ifelse}
ifelse dup{3 index findfont/FontReferenced get 2 index findfont ne{pop false}
if}if{pop 1 index findfont/Encoding get exch 0 1 255{2 copy get 3 index 3 1
roll put}for pop pop pop}{findfont dup dup maxlength 2 add dict begin exch{1
index/FID ne{def}{pop pop}ifelse}forall/FontReferenced exch def/Encoding exch
dup length array copy def/FontName 1 index dup type/stringtype eq{cvn}if def
currentdict end definefont pop}ifelse}bind def/SetSubstituteStrategy{
$SubstituteFont begin dup type/dicttype ne{0 dict}if currentdict/$Strategies
known{exch $Strategies exch 2 copy known{get 2 copy maxlength exch maxlength
add dict begin{def}forall{def}forall currentdict dup/$Init known{dup/$Init get
exec}if end/$Strategy exch def}{pop pop pop}ifelse}{pop pop}ifelse end}bind
def/scff{$SubstituteFont begin dup type/stringtype eq{dup length exch}{null}
ifelse/$sname exch def/$slen exch def end{findfont}@Stopped{dup length dup 21
add string dup 4 3 roll 0 exch 128 string cvs putinterval exch 1 index exch
(_was-malformed-so-was)putinterval cvn{findfont}@Stopped{pop/Courier findfont}
if}if $SubstituteFont begin/$sname null def/$slen 0 def end}bind def
/isWidthsOnlyFont{dup/WidthsOnly known{pop pop true}{dup/FDepVector known{
/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}{dup/FDArray known{
/FDArray get{isWidthsOnlyFont dup{exit}if}forall}{pop}ifelse}ifelse}ifelse}
bind def/?set{$SubstituteFont begin/$substituteFound false def/$fontname 4
index def/$doSmartSub false def end 3 index findfont $SubstituteFont begin
$substituteFound{false}{dup/FontName known{dup/FontName get $fontname eq 1
index/DistillerFauxFont known not and/currentdistillerparams where{pop false 2
index isWidthsOnlyFont not and}if}{false}ifelse}ifelse exch pop/$doSmartSub
true def end{exch pop exch pop exch 2 dict dup/Found 3 index put exch findfont
exch}{exch exec exch findfont 2 dict dup/Downloaded 6 5 roll put}ifelse dup
/FontName 4 index put copyfont definefont pop}bind def/?str1 256 string def
/?str2 256 string def/?add{1 index type/integertype eq{exch true 4 2}{false 3
1}ifelse roll 1 index findfont dup/Widths known{Adobe_CoolType_Data/AddWidths?
true put gsave dup 1000 scalefont setfont}if/Downloaded known{exec exch{exch
?str2 cvs exch findfont/Downloaded get 1 dict begin/Downloaded 1 index def
?str1 cvs length ?str1 1 index 1 add 3 index putinterval exch length 1 add 1
index add ?str1 2 index(*)putinterval ?str1 0 2 index getinterval cvn findfont
?str1 3 index(+)putinterval 2 dict dup/FontName ?str1 0 6 index getinterval
cvn put dup/Downloaded Downloaded put end copyfont dup/FontName get exch
definefont pop pop pop}{pop}ifelse}{pop exch{findfont dup/Found get dup length
exch ?str1 cvs pop ?str1 1 index(+)putinterval ?str1 1 index 1 add 4 index
?str2 cvs putinterval ?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add
getinterval cvn 1 dict exch 1 index exch/FontName exch put copyfont dup
/FontName get exch definefont pop}{pop}ifelse}ifelse Adobe_CoolType_Data
/AddWidths? get{grestore Adobe_CoolType_Data/AddWidths? false put}if}bind def
/?sh{currentfont/Downloaded known{exch}if pop}bind def/?chp{currentfont
/Downloaded known{pop}{false chp}ifelse}bind def/?mv{currentfont/Downloaded
known{moveto pop pop}{pop pop moveto}ifelse}bind def setpacking userdict
/$SubstituteFont 25 dict put 1 dict begin/SubstituteFont dup $error exch 2
copy known{get}{pop pop{pop/Courier}bind}ifelse def/currentdistillerparams
where dup{pop pop currentdistillerparams/CannotEmbedFontPolicy 2 copy known{
get/Error eq}{pop pop false}ifelse}if not{countdictstack array dictstack 0 get
begin userdict begin $SubstituteFont begin/$str 128 string def/$fontpat 128
string def/$slen 0 def/$sname null def/$match false def/$fontname null def
/$substituteFound false def/$doSmartSub true def/$depth 0 def/$fontname null
def/$italicangle 26.5 def/$dstack null def/$Strategies 10 dict dup begin
/$Type3Underprint{currentglobal exch false setglobal 11 dict begin/UseFont
exch $WMode 0 ne{dup length dict copy dup/WMode $WMode put/UseFont exch
definefont}if def/FontName $fontname dup type/stringtype eq{cvn}if def
/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/Encoding 256 array dup 0 1
255{/.notdef put dup}for pop def/FontBBox[0 0 0 0]def/CCInfo 7 dict dup begin
/cc null def/x 0 def/y 0 def end def/BuildChar{exch begin CCInfo begin 1
string dup 0 3 index put exch pop/cc exch def UseFont 1000 scalefont setfont
cc stringwidth/y exch def/x exch def x y setcharwidth $SubstituteFont
/$Strategy get/$Underprint get exec 0 0 moveto cc show x y moveto end end}bind
def currentdict end exch setglobal}bind def/$GetaTint 2 dict dup begin
/$BuildFont{dup/WMode known{dup/WMode get}{0}ifelse/$WMode exch def $fontname
exch dup/FontName known{dup/FontName get dup type/stringtype eq{cvn}if}{
/unnamedfont}ifelse exch $deepcopyfont exch 1 index exch/FontBasedOn exch put
dup/FontName $fontname dup type/stringtype eq{cvn}if put definefont}bind def
/$Underprint{gsave x abs y abs gt{/y 1000 def}{/x -1000 def 500 120 translate}
ifelse Level2?{[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]setcolorspace}{0
setgray}ifelse 10 setlinewidth x .8 mul[7 3]{y mul 8 div 120 sub x 10 div exch
moveto 0 y 4 div neg rlineto dup 0 rlineto 0 y 4 div rlineto closepath gsave
Level2?{.2 setcolor}{.8 setgray}ifelse fill grestore stroke}forall pop
grestore}bind def end def/$Oblique 1 dict dup begin/$BuildFont{currentglobal
exch dup gcheck setglobal null copyfont begin/FontBasedOn currentdict/FontName
known{FontName dup type/stringtype eq{cvn}if}{/unnamedfont}ifelse def/FontName
$fontname dup type/stringtype eq{cvn}if def/currentdistillerparams where{pop}{
/FontInfo currentdict/FontInfo known{FontInfo null copyfont}{2 dict}ifelse dup
begin/ItalicAngle $italicangle def/FontMatrix FontMatrix[1 0 ItalicAngle dup
sin exch cos div 1 0 0]matrix concatmatrix readonly end 4 2 roll def def}
ifelse FontName currentdict end definefont exch setglobal}bind def end def
/$None 1 dict dup begin/$BuildFont{}bind def end def end def/$Oblique
SetSubstituteStrategy/$findfontByEnum{dup type/stringtype eq{cvn}if dup
/$fontname exch def $sname null eq{$str cvs dup length $slen sub $slen
getinterval}{pop $sname}ifelse $fontpat dup 0(fonts/*)putinterval exch 7 exch
putinterval/$match false def $SubstituteFont/$dstack countdictstack array
dictstack put mark{$fontpat 0 $slen 7 add getinterval{/$match exch def exit}
$str filenameforall}stopped{cleardictstack currentdict true $SubstituteFont
/$dstack get{exch{1 index eq{pop false}{true}ifelse}{begin false}ifelse}forall
pop}if cleartomark/$slen 0 def $match false ne{$match(fonts/)anchorsearch pop
pop cvn}{/Courier}ifelse}bind def/$ROS 1 dict dup begin/Adobe 4 dict dup begin
/Japan1[/Ryumin-Light/HeiseiMin-W3/GothicBBB-Medium/HeiseiKakuGo-W5
/HeiseiMaruGo-W4/Jun101-Light]def/Korea1[/HYSMyeongJo-Medium/HYGoThic-Medium]
def/GB1[/STSong-Light/STHeiti-Regular]def/CNS1[/MKai-Medium/MHei-Medium]def
end def end def/$cmapname null def/$deepcopyfont{dup/FontType get 0 eq{1 dict
dup/FontName/copied put copyfont begin/FDepVector FDepVector copyarray 0 1 2
index length 1 sub{2 copy get $deepcopyfont dup/FontName/copied put/copied
exch definefont 3 copy put pop pop}for def currentdict end}{$Strategies
/$Type3Underprint get exec}ifelse}bind def/$buildfontname{length $str 1 index
(-)putinterval 1 add $str 1 index $cmapname $fontpat cvs putinterval $cmapname
length add $str exch 0 exch getinterval cvn}bind def/$findfontByROS{/$fontname
exch def $ROS Registry 2 copy known{get Ordering 2 copy known{get}{pop pop[]}
ifelse}{pop pop[]}ifelse false exch{dup/CIDFont resourcestatus{pop pop save 1
index/CIDFont findresource dup/WidthsOnly known{dup/WidthsOnly get}{false}
ifelse exch pop exch restore{pop}{exch pop true exit}ifelse}{pop}ifelse}forall
{$str cvs $buildfontname}{false(*){save exch dup/CIDFont findresource dup
/WidthsOnly known{dup/WidthsOnly get not}{true}ifelse exch/CIDSystemInfo get
dup/Registry get Registry eq exch/Ordering get Ordering eq and and{exch
restore exch pop true exit}{pop restore}ifelse}$str/CIDFont resourceforall{
$buildfontname}{$fontname $findfontByEnum}ifelse}ifelse}bind def end end
currentdict/$error known currentdict/languagelevel known and dup{pop $error
/SubstituteFont known}if dup{$error}{Adobe_CoolType_Core}ifelse begin{
/SubstituteFont/CMap/Category resourcestatus{pop pop{$SubstituteFont begin
/$substituteFound true def dup length $slen gt $sname null ne or $slen 0 gt
and{$sname null eq{dup $str cvs dup length $slen sub $slen getinterval cvn}{
$sname}ifelse dup/CMap resourcestatus{pop pop dup/$cmapname exch def/CMap
findresource/CIDSystemInfo get{def}forall $findfontByROS}{128 string cvs dup
(-)search{3 1 roll search{3 1 roll pop{dup cvi}stopped{pop pop pop pop pop
$findfontByEnum}{4 2 roll pop pop exch length exch 2 index length 2 index sub
exch 1 sub -1 0{$str cvs dup length 4 index 0 4 index 4 3 roll add getinterval
exch 1 index exch 3 index exch putinterval dup/CMap resourcestatus{pop pop 4 1
roll pop pop pop dup/$cmapname exch def/CMap findresource/CIDSystemInfo get{
def}forall $findfontByROS true exit}{pop}ifelse}for dup type/booleantype eq{
pop}{pop pop $findfontByEnum}ifelse}ifelse}{pop pop pop $findfontByEnum}ifelse
}{pop pop $findfontByEnum}ifelse}ifelse}{//SubstituteFont exec}ifelse/$slen 0
def end}}{{$SubstituteFont begin/$substituteFound true def dup length $slen gt
$sname null ne or $slen 0 gt and{$findfontByEnum}{//SubstituteFont exec}ifelse
end}}ifelse bind readonly def Adobe_CoolType_Core/scfindfont/systemfindfont
load put}{/scfindfont{$SubstituteFont begin dup systemfindfont dup/FontName
known{dup/FontName get dup 3 index ne}{/noname true}ifelse dup{
/$origfontnamefound 2 index def/$origfontname 4 index def/$substituteFound
true def}if exch pop{$slen 0 gt $sname null ne 3 index length $slen gt or and{
pop dup $findfontByEnum findfont dup maxlength 1 add dict begin{1 index/FID eq
{pop pop}{def}ifelse}forall currentdict end definefont dup/FontName known{dup
/FontName get}{null}ifelse $origfontnamefound ne{$origfontname $str cvs print
( substitution revised, using )print dup/FontName known{dup/FontName get}{
(unspecified font)}ifelse $str cvs print(.
)print}if}{exch pop}ifelse}{exch pop}ifelse end}bind def}ifelse end end
Adobe_CoolType_Core/findfont{$SubstituteFont begin $depth 0 eq{/$fontname 1
index dup type/stringtype ne{$str cvs}if def/$substituteFound false def}if
/$depth $depth 1 add def end scfindfont $SubstituteFont begin/$depth $depth 1
sub def $substituteFound $depth 0 eq and $doSmartSub and{currentdict/$Strategy
known{$Strategy/$BuildFont get exec}if}if end}bind put}if end end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.13 0
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated.
%%Version: 1.13 0
systemdict/languagelevel known dup{currentglobal false setglobal}{false}ifelse
exch userdict/Adobe_CoolType_Utility 2 copy known{2 copy get dup maxlength 25
add dict copy}{25 dict}ifelse put Adobe_CoolType_Utility begin/ct_Level2? exch
def/ct_Clone? 1183615869 internaldict dup/CCRun known not exch/eCCRun known
not ct_Level2? and or def/ct_UseNativeCapability? systemdict/composefont known
def/ct_MakeOCF 35 dict def/ct_Vars 25 dict def/ct_GlyphDirProcs 6 dict def
/ct_BuildCharDict 15 dict dup begin/charcode 2 string def/dst_string 1500
string def/nullstring()def/usewidths? true def end def ct_Level2?{setglobal}{
pop}ifelse ct_GlyphDirProcs begin/GetGlyphDirectory{systemdict/languagelevel
known{pop/CIDFont findresource/GlyphDirectory get}{1 index/CIDFont
findresource/GlyphDirectory get dup type/dicttype eq{dup dup maxlength exch
length sub 2 index lt{dup length 2 index add dict copy 2 index/CIDFont
findresource/GlyphDirectory 2 index put}if}if exch pop exch pop}ifelse +}def/+
{systemdict/languagelevel known{currentglobal false setglobal 3 dict begin/vm
exch def}{1 dict begin}ifelse/$ exch def systemdict/languagelevel known{vm
setglobal/gvm currentglobal def $ gcheck setglobal}if ?{$ begin}if}def/?{$
type/dicttype eq}def/|{userdict/Adobe_CoolType_Data known{Adobe_CoolType_Data
/AddWidths? known{currentdict Adobe_CoolType_Data begin begin AddWidths?{
Adobe_CoolType_Data/CC 3 index put ?{def}{$ 3 1 roll put}ifelse CC charcode
exch 1 index 0 2 index 256 idiv put 1 index exch 1 exch 256 mod put
stringwidth 2 array astore currentfont/Widths get exch CC exch put}{?{def}{$ 3
1 roll put}ifelse}ifelse end end}{?{def}{$ 3 1 roll put}ifelse}ifelse}{?{def}{
$ 3 1 roll put}ifelse}ifelse}def/!{?{end}if systemdict/languagelevel known{gvm
setglobal}if end}def/:{string currentfile exch readstring pop}executeonly def
end ct_MakeOCF begin/ct_cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09
/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C
/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F
/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42
/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55
/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68
/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B
/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E
/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1
/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4
/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7
/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA
/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED
/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_CID_STR_SIZE 8000 def/ct_mkocfStr100 100 string def/ct_defaultFontMtx[.001
0 0 .001 0 0]def/ct_1000Mtx[1000 0 0 1000 0 0]def/ct_raise{exch cvx exch
errordict exch get exec stop}bind def/ct_reraise{cvx $error/errorname get
(Error: )print dup(                    )cvs print errordict exch get exec stop
}bind def/ct_cvnsi{1 index add 1 sub 1 exch 0 4 1 roll{2 index exch get exch 8
bitshift add}for exch pop}bind def/ct_GetInterval{Adobe_CoolType_Utility
/ct_BuildCharDict get begin/dst_index 0 def dup dst_string length gt{dup
string/dst_string exch def}if 1 index ct_CID_STR_SIZE idiv/arrayIndex exch def
2 index arrayIndex get 2 index arrayIndex ct_CID_STR_SIZE mul sub{dup 3 index
add 2 index length le{2 index getinterval dst_string dst_index 2 index
putinterval length dst_index add/dst_index exch def exit}{1 index length 1
index sub dup 4 1 roll getinterval dst_string dst_index 2 index putinterval
pop dup dst_index add/dst_index exch def sub/arrayIndex arrayIndex 1 add def 2
index dup length arrayIndex gt{arrayIndex get}{pop exit}ifelse 0}ifelse}loop
pop pop pop dst_string 0 dst_index getinterval end}bind def ct_Level2?{
/ct_resourcestatus currentglobal mark true setglobal{/unknowninstancename
/Category resourcestatus}stopped{cleartomark setglobal true}{cleartomark
currentglobal not exch setglobal}ifelse{{mark 3 1 roll/Category findresource
begin ct_Vars/vm currentglobal put({ResourceStatus} stopped)0()/SubFileDecode
filter cvx exec{cleartomark false}{{3 2 roll pop true}{cleartomark false}
ifelse}ifelse ct_Vars/vm get setglobal end}}{{resourcestatus}}ifelse bind def
/CIDFont/Category ct_resourcestatus{pop pop}{currentglobal true setglobal
/Generic/Category findresource dup length dict copy dup/InstanceType/dicttype
put/CIDFont exch/Category defineresource pop setglobal}ifelse
ct_UseNativeCapability?{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CIDSystemInfo 3 dict dup begin/Registry(Adobe)def/Ordering(Identity)
def/Supplement 0 def end def/CMapName/Identity-H def/CMapVersion 1 def
/CMapType 1 def 1 begincodespacerange<0000><ffff>endcodespacerange 1
begincidrange<0000><ffff>0 endcidrange endcmap CMapName currentdict/CMap
defineresource pop end end}if}{/ct_Category 2 dict begin/CIDFont 10 dict def
/ProcSet 2 dict def currentdict end def/defineresource{ct_Category 1 index 2
copy known{get dup dup maxlength exch length eq{dup length 10 add dict copy
ct_Category 2 index 2 index put}if 3 index 3 index put pop exch pop}{pop pop
/defineresource/undefined ct_raise}ifelse}bind def/findresource{ct_Category 1
index 2 copy known{get 2 index 2 copy known{get 3 1 roll pop pop}{pop pop
/findresource/undefinedresource ct_raise}ifelse}{pop pop/findresource
/undefined ct_raise}ifelse}bind def/resourcestatus{ct_Category 1 index 2 copy
known{get 2 index known exch pop exch pop{0 -1 true}{false}ifelse}{pop pop
/findresource/undefined ct_raise}ifelse}bind def/ct_resourcestatus
/resourcestatus load def}ifelse/ct_CIDInit 2 dict begin/ct_cidfont_stream_init
{{dup(Binary)eq{pop null currentfile ct_Level2?{{cid_BYTE_COUNT()
/SubFileDecode filter}stopped{pop pop pop}if}if/readstring load exit}if dup
(Hex)eq{pop currentfile ct_Level2?{{null exch/ASCIIHexDecode filter/readstring
}stopped{pop exch pop(>)exch/readhexstring}if}{(>)exch/readhexstring}ifelse
load exit}if/StartData/typecheck ct_raise}loop cid_BYTE_COUNT ct_CID_STR_SIZE
le{2 copy cid_BYTE_COUNT string exch exec pop 1 array dup 3 -1 roll 0 exch put
}{cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi dup array exch 2 sub 0 exch 1
exch{2 copy 5 index ct_CID_STR_SIZE string 6 index exec pop put pop}for 2
index cid_BYTE_COUNT ct_CID_STR_SIZE mod string 3 index exec pop 1 index exch
1 index length 1 sub exch put}ifelse cid_CIDFONT exch/GlyphData exch put 2
index null eq{pop pop pop}{pop/readstring load 1 string exch{3 copy exec pop
dup length 0 eq{pop pop pop pop pop true exit}if 4 index eq{pop pop pop pop
false exit}if}loop pop}ifelse}bind def/StartData{mark{currentdict dup/FDArray
get 0 get/FontMatrix get 0 get .001 eq{dup/CDevProc known not{/CDevProc
1183615869 internaldict/stdCDevProc 2 copy known{get}{pop pop{pop pop pop pop
pop 0 -1000 7 index 2 div 880}}ifelse def}if}{/CDevProc{pop pop pop pop pop 0
1 cid_temp/cid_CIDFONT get/FDArray get 0 get/FontMatrix get 0 get div 7 index
2 div 1 index .88 mul}def}ifelse/cid_temp 15 dict def cid_temp begin
/cid_CIDFONT exch def 3 copy pop dup/cid_BYTE_COUNT exch def 0 gt{
ct_cidfont_stream_init FDArray{/Private get dup/SubrMapOffset known{begin
/Subrs SubrCount array def Subrs SubrMapOffset SubrCount SDBytes ct_Level2?{
currentdict dup/SubrMapOffset undef dup/SubrCount undef/SDBytes undef}if end
/cid_SD_BYTES exch def/cid_SUBR_COUNT exch def/cid_SUBR_MAP_OFFSET exch def
/cid_SUBRS exch def cid_SUBR_COUNT 0 gt{GlyphData cid_SUBR_MAP_OFFSET
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi 0 1 cid_SUBR_COUNT 1 sub{
exch 1 index 1 add cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add GlyphData exch
cid_SD_BYTES ct_GetInterval 0 cid_SD_BYTES ct_cvnsi cid_SUBRS 4 2 roll
GlyphData exch 4 index 1 index sub ct_GetInterval dup length string copy put}
for pop}if}{pop}ifelse}forall}if cleartomark pop pop end CIDFontName
currentdict/CIDFont defineresource pop end end}stopped{cleartomark/StartData
ct_reraise}if}bind def currentdict end def/ct_saveCIDInit{/CIDInit/ProcSet
ct_resourcestatus{true}{/CIDInitC/ProcSet ct_resourcestatus}ifelse{pop pop
/CIDInit/ProcSet findresource ct_UseNativeCapability?{pop null}{/CIDInit
ct_CIDInit/ProcSet defineresource pop}ifelse}{/CIDInit ct_CIDInit/ProcSet
defineresource pop null}ifelse ct_Vars exch/ct_oldCIDInit exch put}bind def
/ct_restoreCIDInit{ct_Vars/ct_oldCIDInit get dup null ne{/CIDInit exch/ProcSet
defineresource pop}{pop}ifelse}bind def/ct_BuildCharSetUp{1 index begin
CIDFont begin Adobe_CoolType_Utility/ct_BuildCharDict get begin/ct_dfCharCode
exch def/ct_dfDict exch def CIDFirstByte ct_dfCharCode add dup CIDCount ge{pop
0}if/cid exch def{GlyphDirectory cid 2 copy known{get}{pop pop nullstring}
ifelse dup length FDBytes sub 0 gt{dup FDBytes 0 ne{0 FDBytes ct_cvnsi}{pop 0}
ifelse/fdIndex exch def dup length FDBytes sub FDBytes exch getinterval
/charstring exch def exit}{pop cid 0 eq{/charstring nullstring def exit}if/cid
0 def}ifelse}loop}def/ct_SetCacheDevice{0 0 moveto dup stringwidth 3 -1 roll
true charpath pathbbox 0 -1000 7 index 2 div 880 setcachedevice2 0 0 moveto}
def/ct_CloneSetCacheProc{1 eq{stringwidth pop -2 div -880 0 -1000 setcharwidth
moveto}{usewidths?{currentfont/Widths get cid 2 copy known{get exch pop aload
pop}{pop pop stringwidth}ifelse}{stringwidth}ifelse setcharwidth 0 0 moveto}
ifelse}def/ct_Type3ShowCharString{ct_FDDict fdIndex 2 copy known{get}{
currentglobal 3 1 roll 1 index gcheck setglobal ct_Type1FontTemplate dup
maxlength dict copy begin FDArray fdIndex get dup/FontMatrix 2 copy known{get}
{pop pop ct_defaultFontMtx}ifelse/FontMatrix exch dup length array copy def
/Private get/Private exch def/Widths rootfont/Widths get def/CharStrings 1
dict dup/.notdef<d841272cf18f54fc13>dup length string copy put def currentdict
end/ct_Type1Font exch definefont dup 5 1 roll put setglobal}ifelse dup
/CharStrings get 1 index/Encoding get ct_dfCharCode get charstring put
rootfont/WMode 2 copy known{get}{pop pop 0}ifelse exch 1000 scalefont setfont
ct_str1 0 ct_dfCharCode put ct_str1 exch ct_dfSetCacheProc ct_SyntheticBold{
currentpoint ct_str1 show newpath moveto ct_str1 true charpath ct_StrokeWidth
setlinewidth stroke}{ct_str1 show}ifelse}def/ct_Type4ShowCharString{ct_dfDict
ct_dfCharCode charstring FDArray fdIndex get dup/FontMatrix get dup
ct_defaultFontMtx ct_matrixeq not{ct_1000Mtx matrix concatmatrix concat}{pop}
ifelse/Private get Adobe_CoolType_Utility/ct_Level2? get not{ct_dfDict/Private
3 -1 roll{put}1183615869 internaldict/superexec get exec}if 1183615869
internaldict Adobe_CoolType_Utility/ct_Level2? get{1 index}{3 index/Private
get mark 6 1 roll}ifelse dup/RunInt known{/RunInt get}{pop/CCRun}ifelse get
exec Adobe_CoolType_Utility/ct_Level2? get not{cleartomark}if}bind def
/ct_BuildCharIncremental{{Adobe_CoolType_Utility/ct_MakeOCF get begin
ct_BuildCharSetUp ct_ShowCharString}stopped{stop}if end end end end}bind def
/BaseFontNameStr(BF00)def/ct_Type1FontTemplate 14 dict begin/FontType 1 def
/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def/Encoding
ct_cHexEncoding def/PaintType 0 def currentdict end def/BaseFontTemplate 11
dict begin/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-250 -250 1250 1250]def
/Encoding ct_cHexEncoding def/BuildChar/ct_BuildCharIncremental load def
ct_Clone?{/FontType 3 def/ct_ShowCharString/ct_Type3ShowCharString load def
/ct_dfSetCacheProc/ct_CloneSetCacheProc load def/ct_SyntheticBold false def
/ct_StrokeWidth 1 def}{/FontType 4 def/Private 1 dict dup/lenIV 4 put def
/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def/PaintType 0 def
/ct_ShowCharString/ct_Type4ShowCharString load def}ifelse/ct_str1 1 string def
currentdict end def/BaseFontDictSize BaseFontTemplate length 5 add def
/ct_matrixeq{true 0 1 5{dup 4 index exch get exch 3 index exch get eq and dup
not{exit}if}for exch pop exch pop}bind def/ct_makeocf{15 dict begin exch/WMode
exch def exch/FontName exch def/FontType 0 def/FMapType 2 def/FontMatrix
matrix def/bfCount 1 index/CIDCount get 256 idiv 1 add dup 256 gt{pop 256}if
def/Encoding 256 array 0 1 bfCount 1 sub{2 copy dup put pop}for bfCount 1 255{
2 copy bfCount put pop}for def/FDepVector bfCount dup 256 lt{1 add}if array
def BaseFontTemplate BaseFontDictSize dict copy begin/CIDFont exch def CIDFont
/FontBBox known{CIDFont/FontBBox get/FontBBox exch def}if CIDFont/CDevProc
known{CIDFont/CDevProc get/CDevProc exch def}if currentdict end
BaseFontNameStr 3(0)putinterval 0 1 bfCount dup 256 eq{1 sub}if{FDepVector
exch 2 index BaseFontDictSize dict copy begin dup/CIDFirstByte exch 256 mul
def FontType 3 eq{/ct_FDDict 2 dict def}if currentdict end 1 index 16
BaseFontNameStr 2 2 getinterval cvrs pop BaseFontNameStr exch definefont put}
for ct_Clone?{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
if FontName currentdict end definefont ct_Clone?{gsave dup 1000 scalefont
setfont ct_BuildCharDict begin/usewidths? false def currentfont/Widths get
begin exch/CIDFont get/GlyphDirectory get{pop dup charcode exch 1 index 0 2
index 256 idiv put 1 index exch 1 exch 256 mod put stringwidth 2 array astore
def}forall end/usewidths? true def end grestore}{exch pop}ifelse}bind def
/ct_ComposeFont{ct_UseNativeCapability?{2 index/CMap ct_resourcestatus{pop pop
exch pop}{/CIDInit/ProcSet findresource begin 12 dict begin begincmap/CMapName
3 index def/CMapVersion 1 def/CMapType 1 def exch/WMode exch def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{3 2 roll pop 0 get/CIDFont findresource ct_makeocf}ifelse}
bind def/ct_MakeIdentity{ct_UseNativeCapability?{1 index/CMap
ct_resourcestatus{pop pop}{/CIDInit/ProcSet findresource begin 12 dict begin
begincmap/CMapName 2 index def/CMapVersion 1 def/CMapType 1 def/CIDSystemInfo
3 dict dup begin/Registry(Adobe)def/Ordering CMapName ct_mkocfStr100 cvs
(Adobe-)search{pop pop(-)search{dup length string copy exch pop exch pop}{pop
(Identity)}ifelse}{pop(Identity)}ifelse def/Supplement 0 def end def 1
begincodespacerange<0000><ffff>endcodespacerange 1 begincidrange<0000><ffff>0
endcidrange endcmap CMapName currentdict/CMap defineresource pop end end}
ifelse composefont}{exch pop 0 get/CIDFont findresource ct_makeocf}ifelse}bind
def currentdict readonly pop end end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2000 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 65 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
%%don't initialize AGMIMG_&customcolorimage, it wrecks havoc in a nested environment
%%AGMIMG_ccimage_exists not {/AGMIMG_&customcolorimage nd} if 
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/idximg /indexed_imageormask ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				AGMIMG_&image
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get
		dup /DeviceGray eq{
			pop AGMCORE_black_plate not
		}{
			/DeviceCMYK eq{
				AGMCORE_is_cmyk_sep not
			}if
		}ifelse
	}{
		false
	}ifelse
}def
/imageormask
{
	begin
		SkipImageProc not{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					image
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					AGMCORE_host_sep{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
  	 						currentoverprint not{
  			 					1 AGMCORE_&setgray
  	 							knockout_image_samples
  			 					currentdict imageormask_sys
  			 				}{
  			 					currentdict ignoreimagedata
  			 				}ifelse
				 		}ifelse
					}{
						imagemask
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								MultipleDataSources{
									4 {pop} repeat
									/DataSource [
										DataSource 0 get /exec cvx
										DataSource 1 get /exec cvx
										DataSource 2 get /exec cvx
										DataSource 3 get /exec cvx
										/AGMCORE_get_ink_data cvx
									] cvx def
								}{
									/DataSource /DataSource load filter_cmyk 0 () /SubFileDecode filter def
								}ifelse
	
								/Decode [ Decode 0 get Decode 1 get ] def
								/MultipleDataSources false def
								/NComponents 1 def
								/Operator /image def
								AGMCORE_is_cmyk_sep{
									currentoverprint InksUsed current_ink not and{
										currentdict consumeimagedata
									}{
										invert_image_samples
						 				1 AGMCORE_&setgray
										currentdict imageormask_sys
									}ifelse
								}{
										currentdict ignoreimagedata
								}ifelse
							}{
									
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								image
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentoverprint InksUsed current_ink not and{
								}{
									currentcolorspace overprint_plate not{
										knockout_unitsq
									}if
								}ifelse
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc not{
		save mark 
	
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentoverprint InksUsed current_ink not and{
						}{
							currentdict/ImageMatrix get concat
							knockout_unitsq
						}ifelse
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
							currentdict consumeimagedata 
 							currentoverprint not Name (All) eq or{
								gsave 
								knockout_unitsq
								grestore
		 					}if
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}if
	end
	end
}def
/imageormask_l2_overprint
{
	
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
		
						mark exch
						dup	dup dup
		
						
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
		
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
							
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
	
 		currentdict
 		AGMCORE_host_sep{
 			
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget /CSA get map_csa overprint_plate not{
					knockout_unitsq
				}if
			}{
	 			AGMCORE_is_cmyk_sep{
					Operator /imagemask eq{
						imageormask_sys
					}{
						level2{
							indexed_image_lev2_sep
						}{
							indexed_image_lev1_sep
						}ifelse
					}ifelse
				}{
					currentoverprint not{
						knockout_image_samples
		 				imageormask_sys
		 			}{
		 				currentdict consumeimagedata
		 			}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				imageormask
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		
		currentcolorspace 
		dup 1 /DeviceGray put
		dup 3 [
			currentcolorspace 3 get 
			{
				exch 4 mul 4 getinterval {} forall
				AGMCORE_get_ink_data 255 div 1 exch sub
			} /exec cvx
		] cvx put
		setcolorspace
		
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			AGMIMG_&image
		}ifelse
			
	end end
}def
/OPIimage
{
	dup type /dicttype ne{
		10 dict begin
			/DataSource xdf
			/ImageMatrix xdf
			/BitsPerComponent xdf
			/Height xdf
			/Width xdf
			/ImageType 1 def
			/Decode [0 1 def]
			currentdict
		end
	}if
	dup begin
		/NComponents 1 cdndf
		/MultipleDataSources false cdndf
		/SkipImageProc {false} cdndf
		/HostSepColorImage false cdndf
		/Decode [
				0 
				currentcolorspace 0 get /Indexed eq{
					2 BitsPerComponent exp 1 sub
				}{
					1
				}ifelse
		] cdndf
		/Operator /image cdndf
	end
	/sep_colorspace_dict AGMCORE_gget null eq{
		imageormask
	}{
		gsave
		dup begin invert_image_samples end
		sep_imageormask
		grestore
	}ifelse
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/InksUsed [] def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
						
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
					
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 	   Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi       Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			
			currentdict imageormask_sys
				
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%ADOBeginClientInjection: DocumentProlog End "AI10"
%ADOEndClientInjection: DocumentProlog End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
%ADOBeginClientInjection: DocumentSetup Start "AI10"
%ADOEndClientInjection: DocumentSetup Start "AI10"
Adobe_AGM_Utils begin
2 2010 true Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
%ADOBeginClientInjection: DocumentSetup End "AI10"
%ADOEndClientInjection: DocumentSetup End "AI10"
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: minerva-MPG-klein.eps 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI10"
%ADOEndClientInjection: PageSetup Start "AI10"
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%ADOBeginClientInjection: PageSetup End "AI10"
%ADOEndClientInjection: PageSetup End "AI10"
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -73.4531 translate
[1 0 0 1 0 0 ]  concat
mark
/0 
[/DeviceGray] add_csa
/CSA /0 
/1 
[/DeviceCMYK] add_csa
/CSA /1 
/2 
[/DeviceRGB] add_csa
/CSA /2 
cleartomark
800 path_rez
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 73.4531 li
135.184 73.4531 li
135.184 0 li
clp
[1 0 0 1 0 0 ] concat
%ADOBeginClientInjection: BeginPageContent "AI10"
%ADOEndClientInjection: BeginPageContent "AI10"
38.0078 30.4331 mo
38.0078 14.1216 51.2783 .850586 67.5918 .850586 cv
83.9033 .850586 97.1758 14.1216 97.1758 30.4331 cv
97.1758 46.7471 83.9033 60.0186 67.5918 60.0186 cv
51.2783 60.0186 38.0078 46.7471 38.0078 30.4331 cv
cp
37.1563 30.4331 mo
37.1563 47.2158 50.8086 60.8682 67.5918 60.8682 cv
84.373 60.8682 98.0273 47.2158 98.0273 30.4331 cv
98.0273 13.6528 84.373 0 67.5918 0 cv
50.8086 0 37.1563 13.6528 37.1563 30.4331 cv
false sop
/0 
<<
/Name (PANTONE 328)
/CSA /2 
/TintMethod /Additive
/TintProc null
/MappedCSA null
/NComponents 3 
/ColorLookup [ 
[ 1 1 1 ] [ .996078 .997678 .997493 ]
[ .992157 .995356 .994986 ] [ .988235 .993033 .99248 ]
[ .984314 .990711 .989973 ] [ .980392 .988389 .987466 ]
[ .976471 .986067 .984959 ] [ .972549 .983745 .982453 ]
[ .968627 .981422 .979946 ] [ .964706 .9791 .977439 ]
[ .960784 .976778 .974932 ] [ .956863 .974456 .972426 ]
[ .952941 .972133 .969919 ] [ .94902 .969811 .967412 ]
[ .945098 .967489 .964906 ] [ .941176 .965167 .962399 ]
[ .937255 .962845 .959892 ] [ .933333 .960522 .957385 ]
[ .929412 .9582 .954878 ] [ .92549 .955878 .952372 ]
[ .921569 .953556 .949865 ] [ .917647 .951234 .947358 ]
[ .913725 .948911 .944851 ] [ .909804 .946589 .942345 ]
[ .905882 .944267 .939838 ] [ .901961 .941945 .937331 ]
[ .898039 .939623 .934824 ] [ .894118 .9373 .932318 ]
[ .890196 .934978 .929811 ] [ .886274 .932656 .927304 ]
[ .882353 .930334 .924797 ] [ .878431 .928012 .922291 ]
[ .87451 .925689 .919784 ] [ .870588 .923367 .917277 ]
[ .866667 .921045 .91477 ] [ .862745 .918723 .912264 ]
[ .858823 .9164 .909757 ] [ .854902 .914078 .90725 ]
[ .85098 .911756 .904743 ] [ .847059 .909434 .902237 ]
[ .843137 .907112 .89973 ] [ .839216 .904789 .897223 ]
[ .835294 .902467 .894717 ] [ .831372 .900145 .89221 ]
[ .827451 .897823 .889703 ] [ .823529 .895501 .887196 ]
[ .819608 .893178 .884689 ] [ .815686 .890856 .882183 ]
[ .811765 .888534 .879676 ] [ .807843 .886212 .877169 ]
[ .803922 .88389 .874662 ] [ .8 .881567 .872156 ]
[ .796078 .879245 .869649 ] [ .792157 .876923 .867142 ]
[ .788235 .874601 .864635 ] [ .784314 .872279 .862129 ]
[ .780392 .869956 .859622 ] [ .776471 .867634 .857115 ]
[ .772549 .865312 .854608 ] [ .768627 .86299 .852102 ]
[ .764706 .860667 .849595 ] [ .760784 .858345 .847088 ]
[ .756863 .856023 .844581 ] [ .752941 .853701 .842075 ]
[ .74902 .851379 .839568 ] [ .745098 .849056 .837061 ]
[ .741176 .846734 .834554 ] [ .737255 .844412 .832048 ]
[ .733333 .84209 .829541 ] [ .729412 .839768 .827034 ]
[ .72549 .837445 .824528 ] [ .721569 .835123 .822021 ]
[ .717647 .832801 .819514 ] [ .713725 .830479 .817007 ]
[ .709804 .828157 .8145 ] [ .705882 .825834 .811994 ]
[ .701961 .823512 .809487 ] [ .698039 .82119 .80698 ]
[ .694118 .818868 .804473 ] [ .690196 .816546 .801967 ]
[ .686274 .814223 .79946 ] [ .682353 .811901 .796953 ]
[ .678431 .809579 .794446 ] [ .67451 .807257 .79194 ]
[ .670588 .804935 .789433 ] [ .666667 .802612 .786926 ]
[ .662745 .80029 .784419 ] [ .658823 .797968 .781913 ]
[ .654902 .795646 .779406 ] [ .65098 .793323 .776899 ]
[ .647059 .791001 .774392 ] [ .643137 .788679 .771886 ]
[ .639216 .786357 .769379 ] [ .635294 .784035 .766872 ]
[ .631373 .781712 .764365 ] [ .627451 .77939 .761859 ]
[ .623529 .777068 .759352 ] [ .619608 .774746 .756845 ]
[ .615686 .772424 .754339 ] [ .611765 .770101 .751832 ]
[ .607843 .767779 .749325 ] [ .603922 .765457 .746818 ]
[ .6 .763135 .744312 ] [ .596078 .760813 .741805 ]
[ .592157 .75849 .739298 ] [ .588235 .756168 .736791 ]
[ .584314 .753846 .734285 ] [ .580392 .751524 .731778 ]
[ .576471 .749201 .729271 ] [ .572549 .746879 .726764 ]
[ .568627 .744557 .724257 ] [ .564706 .742235 .721751 ]
[ .560784 .739913 .719244 ] [ .556863 .73759 .716737 ]
[ .552941 .735268 .71423 ] [ .54902 .732946 .711724 ]
[ .545098 .730624 .709217 ] [ .541176 .728302 .70671 ]
[ .537255 .725979 .704203 ] [ .533333 .723657 .701697 ]
[ .529412 .721335 .69919 ] [ .52549 .719013 .696683 ]
[ .521569 .716691 .694176 ] [ .517647 .714368 .69167 ]
[ .513725 .712046 .689163 ] [ .509804 .709724 .686656 ]
[ .505882 .707402 .68415 ] [ .501961 .70508 .681643 ]
[ .498039 .702757 .679136 ] [ .494118 .700435 .676629 ]
[ .490196 .698113 .674122 ] [ .486274 .695791 .671616 ]
[ .482353 .693468 .669109 ] [ .478431 .691146 .666602 ]
[ .47451 .688824 .664095 ] [ .470588 .686502 .661589 ]
[ .466667 .68418 .659082 ] [ .462745 .681857 .656575 ]
[ .458824 .679535 .654068 ] [ .454902 .677213 .651562 ]
[ .45098 .674891 .649055 ] [ .447059 .672569 .646548 ]
[ .443137 .670246 .644041 ] [ .439216 .667924 .641535 ]
[ .435294 .665602 .639028 ] [ .431373 .66328 .636521 ]
[ .427451 .660958 .634014 ] [ .423529 .658635 .631508 ]
[ .419608 .656313 .629001 ] [ .415686 .653991 .626494 ]
[ .411765 .651669 .623987 ] [ .407843 .649347 .621481 ]
[ .403922 .647024 .618974 ] [ .4 .644702 .616467 ]
[ .396078 .64238 .613961 ] [ .392157 .640058 .611454 ]
[ .388235 .637735 .608947 ] [ .384314 .635413 .60644 ]
[ .380392 .633091 .603934 ] [ .376471 .630769 .601427 ]
[ .372549 .628447 .59892 ] [ .368627 .626124 .596413 ]
[ .364706 .623802 .593907 ] [ .360784 .62148 .5914 ]
[ .356863 .619158 .588893 ] [ .352941 .616836 .586386 ]
[ .34902 .614513 .583879 ] [ .345098 .612191 .581373 ]
[ .341176 .609869 .578866 ] [ .337255 .607547 .576359 ]
[ .333333 .605225 .573852 ] [ .329412 .602902 .571346 ]
[ .32549 .60058 .568839 ] [ .321569 .598258 .566332 ]
[ .317647 .595936 .563825 ] [ .313725 .593614 .561319 ]
[ .309804 .591291 .558812 ] [ .305882 .588969 .556305 ]
[ .301961 .586647 .553798 ] [ .298039 .584325 .551292 ]
[ .294118 .582002 .548785 ] [ .290196 .57968 .546278 ]
[ .286274 .577358 .543772 ] [ .282353 .575036 .541265 ]
[ .278431 .572714 .538758 ] [ .27451 .570391 .536251 ]
[ .270588 .568069 .533745 ] [ .266667 .565747 .531238 ]
[ .262745 .563425 .528731 ] [ .258824 .561103 .526224 ]
[ .254902 .55878 .523718 ] [ .25098 .556458 .521211 ]
[ .247059 .554136 .518704 ] [ .243137 .551814 .516197 ]
[ .239216 .549492 .513691 ] [ .235294 .547169 .511184 ]
[ .231373 .544847 .508677 ] [ .227451 .542525 .50617 ]
[ .223529 .540203 .503663 ] [ .219608 .537881 .501157 ]
[ .215686 .535558 .49865 ] [ .211765 .533236 .496143 ]
[ .207843 .530914 .493636 ] [ .203922 .528592 .49113 ]
[ .2 .526269 .488623 ] [ .196078 .523947 .486116 ]
[ .192157 .521625 .483609 ] [ .188235 .519303 .481103 ]
[ .184314 .516981 .478596 ] [ .180392 .514658 .476089 ]
[ .176471 .512336 .473583 ] [ .172549 .510014 .471076 ]
[ .168627 .507692 .468569 ] [ .164706 .50537 .466062 ]
[ .160784 .503047 .463556 ] [ .156863 .500725 .461049 ]
[ .152941 .498403 .458542 ] [ .14902 .496081 .456035 ]
[ .145098 .493759 .453529 ] [ .141176 .491436 .451022 ]
[ .137255 .489114 .448515 ] [ .133333 .486792 .446008 ]
[ .129412 .48447 .443502 ] [ .12549 .482148 .440995 ]
[ .121569 .479825 .438488 ] [ .117647 .477503 .435981 ]
[ .113725 .475181 .433475 ] [ .109804 .472859 .430968 ]
[ .105882 .470537 .428461 ] [ .101961 .468214 .425954 ]
[ .0980392 .465892 .423447 ] [ .0941176 .46357 .420941 ]
[ .0901961 .461248 .418434 ] [ .0862745 .458925 .415927 ]
[ .0823529 .456603 .41342 ] [ .0784314 .454281 .410914 ]
[ .0745098 .451959 .408407 ] [ .0705882 .449637 .4059 ]
[ .0666667 .447314 .403394 ] [ .0627451 .444992 .400887 ]
[ .0588235 .44267 .39838 ] [ .054902 .440348 .395873 ]
[ .0509804 .438026 .393367 ] [ .0470588 .435703 .39086 ]
[ .0431373 .433381 .388353 ] [ .0392157 .431059 .385846 ]
[ .0352941 .428737 .38334 ] [ .0313725 .426415 .380833 ]
[ .027451 .424092 .378326 ] [ .0235294 .42177 .375819 ]
[ .0196078 .419448 .373313 ] [ .0156863 .417126 .370806 ]
[ .0117647 .414804 .368299 ] [ .00784314 .412481 .365792 ]
[ .00392157 .410159 .363286 ] [ 0 .407837 .360779 ]
] 
>>
add_csd
1 /0 get_csd
sepcs
1 sep
f
87.5879 35.3848 mo
86.7588 36.1548 85.5859 36.167 84.6348 36.793 cv
84.1992 37.2285 84.3096 37.7241 84.4873 38.2729 cv
84.8389 38.9683 84.7061 38.8965 84.2148 39.0601 cv
83.0684 39.4429 83.0801 40.6973 81.7002 40.4873 cv
81.6211 40.5107 81.2998 40.3496 81.4902 40.5811 cv
81.6387 40.7568 81.7002 40.6504 81.9922 40.6855 cv
82.4844 40.71 82.668 40.5068 83.0117 40.2725 cv
83.5039 39.8579 83.4453 39.7026 84.0508 39.4116 cv
84.1973 39.3774 84.5537 39.271 84.752 39.3413 cv
84.8877 39.4648 84.8906 39.4688 84.9121 39.5796 cv
84.834 39.916 84.3438 40.1943 84.1563 40.3115 cv
84.4141 40.501 84.8965 40.8193 84.8184 41.0869 cv
84.707 41.2627 84.7129 41.293 84.5186 41.3867 cv
84.2461 41.5205 83.6992 41.5 83.1855 41.1182 cv
83.1074 41.1426 83.0215 40.9658 82.8008 41.1748 cv
83.3027 41.6904 84.0029 41.5752 84.1094 41.6797 cv
84.2148 41.7842 83.7344 42.4072 83.7129 42.542 cv
83.377 43.4365 83.7891 44.2588 83.6094 45.1885 cv
83.498 45.915 83.2813 46.2607 82.6445 46.7188 cv
81.4785 47.5264 80.6582 47.7607 79.3496 47.9717 cv
75.916 48.2051 73.748 47.0283 71.2764 45.1807 cv
68.8027 43.333 67.8584 42.3516 67.085 41.3115 cv
67.0732 40.8867 67.3857 40.5635 67.1191 40.104 cv
66.8945 40.1816 66.918 40.4727 66.7832 40.6416 cv
66.5928 40.9111 66.1338 41.1104 65.8096 41.0771 cv
64.792 40.7295 64.7354 39.5347 64.0996 38.8511 cv
62.7344 37.5088 62.3535 35.5737 63.082 33.9526 cv
63.3379 33.4492 63.7959 32.9683 64.3125 32.79 cv
64.9482 32.6885 65.6982 32.6885 66.1133 33.3042 cv
66.6025 33.7729 66.9063 34.5342 67.0283 35.2046 cv
67.2305 35.5298 66.9844 35.8989 67.3193 36.167 cv
67.9014 36.2222 68.4033 36.3672 68.9639 36.0107 cv
69.3779 36.0659 69.4346 36.5259 69.748 36.7256 cv
70.3066 37.0615 li
70.8984 37.3071 71.6621 37.3071 72.1641 36.8706 cv
73.1035 35.9097 72.8984 34.9199 73.2217 33.8594 cv
74.1172 33.0649 74.7129 31.9282 74.7031 30.8203 cv
74.6455 30.1377 74.4004 29.4336 73.998 28.751 cv
74.0654 28.3481 74.2891 28.0474 74.4219 27.689 cv
74.5352 27.6221 74.6797 27.6221 74.8027 27.6001 cv
75.7988 27.3877 76.7051 26.4805 77.0957 25.5298 cv
77.1855 25.4409 li
78.3262 25.3618 79.7461 24.959 80.4063 23.7622 cv
80.541 23.248 81.1221 23.6274 81.4805 23.5059 cv
82.084 23.4722 82.6895 23.1367 83.1465 22.7451 cv
83.2813 22.6997 83.3809 22.8467 83.4609 22.9116 cv
83.7285 23.8076 84.2207 24.668 84.5 25.5752 cv
84.8467 26.2568 84.9717 26.9053 84.8467 27.6001 cv
84.9922 28.6616 85.5977 29.6567 86.0215 30.731 cv
86.4473 31.8608 87.1055 33.0024 87.5879 34.1646 cv
87.6777 34.6338 87.8789 35.0049 87.5879 35.3848 cv
cp
87.8213 33.4321 mo
87.0156 31.5742 86.1104 29.9756 85.4492 28.1074 cv
84.9805 27.437 85.249 26.7217 85.1914 26.0049 cv
84.8916 24.8862 84.4199 24.0249 83.9727 22.9399 cv
83.8496 22.6274 84.1973 22.5366 84.3213 22.3154 cv
84.5215 21.7661 84.377 21.1499 84.1299 20.6245 cv
84.0303 20.3237 84.3887 20.1104 84.3213 19.7979 cv
84.3086 19.3164 83.8848 18.9912 83.5488 18.7349 cv
83.0449 18.0088 82.8105 17.6265 82.1836 16.9678 cv
82.1836 16.8428 li
82.4961 16.5654 82.7539 16.0835 82.7441 15.6704 cv
82.6191 15.2007 82.5195 14.7646 82.0713 14.4395 cv
81.3555 14.0366 80.6289 14.6631 80.0596 14.9878 cv
79.9014 15.0986 79.8232 15.2114 79.5996 15.1904 cv
79.4551 15.1382 79.3047 15.0845 79.1523 15.0298 cv
79.0078 15.1963 78.8252 15.373 78.6035 15.5483 cv
79.2979 15.8306 li
79.3232 15.8491 79.332 15.8628 79.332 15.8877 cv
79.332 15.8994 79.3271 15.9214 79.3252 15.9404 cv
79.2764 15.9819 77.7168 17.3496 77.7168 17.3496 cv
77.7119 17.353 74.9043 20.1274 74.9043 20.1274 cv
74.9043 20.1294 74.0996 20.9453 74.0996 20.9453 cv
74.0938 20.9497 71.5996 23.8242 71.5996 23.8242 cv
70.2949 25.3379 68.3662 27.8218 67.207 29.6392 cv
66.6025 30.4707 66.001 31.396 65.4404 32.269 cv
65.3799 32.3657 65.2656 32.3584 65.084 32.3364 cv
64.9609 32.3223 64.834 32.3096 64.7197 32.3481 cv
64.7217 32.3481 64.7246 32.3481 64.7246 32.3481 cv
64.6992 32.355 li
64.7051 32.3535 64.7139 32.3516 64.7197 32.3481 cv
64.085 32.4185 63.624 32.6304 63.1299 33.0771 cv
62.4893 33.8325 62.168 34.7466 62.168 35.7329 cv
62.168 36.4121 62.3213 37.126 62.6328 37.8438 cv
62.502 38.228 62.2002 38.5664 61.9297 38.8672 cv
61.7793 39.0361 li
61.5869 39.2256 li
61.4629 39.3438 61.3193 39.478 61.2168 39.6104 cv
61.207 39.6221 li
61.2012 39.6382 li
61.1875 39.6792 61.1826 39.7593 61.3057 39.8184 cv
61.335 39.8345 li
61.3691 39.8271 li
61.96 39.686 62.3311 39.2427 62.6924 38.8125 cv
62.6924 38.8125 62.9189 38.5508 62.9521 38.5122 cv
63.0049 38.5034 63.0498 38.5332 63.127 38.5986 cv
63.168 38.6323 63.2139 38.6655 63.2676 38.6904 cv
63.2676 38.7031 63.2676 38.7197 63.2676 38.7197 cv
63.2676 38.7197 63.2598 38.9111 63.2578 38.9546 cv
61.8594 40.3369 60.7197 41.1162 59.2295 41.9912 cv
58.9814 42.1377 li
59.2695 42.167 li
59.8506 42.2246 60.4023 41.8975 60.9355 41.583 cv
61.5762 41.2295 li
62.1689 40.9248 62.7178 40.4639 63.251 40.0166 cv
63.251 40.0166 63.7314 39.6162 63.7832 39.5732 cv
63.834 39.5815 63.8896 39.6455 63.9326 39.6973 cv
63.9326 39.6973 63.9648 39.7314 63.9854 39.7534 cv
63.9941 39.771 64.4316 40.6367 64.459 40.6885 cv
64.3584 41.0986 64.3154 41.5107 64.3154 41.9219 cv
64.3154 42.8174 64.5088 43.708 64.6992 44.5801 cv
64.8867 45.4404 65.0811 46.3291 65.0811 47.2002 cv
65.0811 47.2588 65.0801 47.3154 65.0781 47.3721 cv
65.0781 47.6416 64.7822 47.999 64.5361 48.1123 cv
63.9775 48.2061 63.3018 48.2139 62.5859 48.2197 cv
61.709 48.2275 60.8008 48.2354 60.1035 48.4248 cv
59.8789 48.4502 59.6191 48.5244 59.3682 48.5947 cv
59.1201 48.6631 58.8652 48.7354 58.6279 48.7676 cv
58.6055 48.7715 li
58.5781 48.792 li
58.4922 48.8516 li
58.4121 48.9014 58.3145 48.9629 58.29 49.0791 cv
58.2891 49.0889 58.2871 49.0996 58.2871 49.1104 cv
58.2871 49.1768 58.3184 49.251 58.3691 49.3027 cv
58.416 49.3525 58.4775 49.376 58.541 49.3701 cv
58.752 49.3701 58.9873 49.2842 59.2168 49.2012 cv
59.377 49.1436 59.5439 49.0811 59.6973 49.0557 cv
61.1543 48.8066 62.752 48.8574 63.834 48.9443 cv
64.3682 48.9365 65.2451 48.9189 65.5605 48.1592 cv
65.6748 47.8516 65.7139 47.5654 65.7139 47.291 cv
65.7139 46.9873 65.667 46.6953 65.6191 46.3955 cv
65.5225 45.6572 li
65.459 45.208 65.3643 44.7588 65.2715 44.3232 cv
65.1074 43.5518 64.9385 42.7588 64.9385 41.9541 cv
64.9385 41.791 64.9482 41.6279 64.9619 41.4639 cv
64.9775 41.4434 64.9951 41.4189 65.0156 41.415 cv
65.0625 41.4092 65.1455 41.4746 65.2109 41.5264 cv
65.2861 41.585 65.3623 41.6416 65.4473 41.6641 cv
65.5439 41.7373 65.6533 41.7568 65.7529 41.7705 cv
65.8916 41.7881 65.9678 41.8057 66.0107 41.9141 cv
66.0732 42.6201 66.3174 43.3506 66.5537 44.0566 cv
66.7168 44.543 66.8857 45.0459 66.9922 45.5371 cv
67.1855 46.3965 67.3789 47.2686 67.3789 48.1299 cv
67.3789 48.6406 67.3096 49.1484 67.1299 49.6465 cv
66.7568 50.3271 65.9385 50.3291 65.1504 50.333 cv
64.9141 50.333 li
62.9785 50.2158 li
61.3184 50.0947 59.6016 49.9717 57.8428 50.2559 cv
57.8545 50.2549 57.4473 50.2979 57.4473 50.2979 cv
57.2305 50.3311 57.0254 50.3574 56.8057 50.3066 cv
56.7236 50.2402 56.6582 50.127 56.6582 50.0068 cv
56.6582 49.9697 56.665 49.9307 56.6807 49.8936 cv
56.9941 49.2002 57.1523 48.5732 57.1523 48.0186 cv
57.1523 47.5674 57.0498 47.166 56.8428 46.8125 cv
56.3877 45.9404 55.8877 45.335 55.2705 44.9131 cv
54.5146 44.1572 53.8691 43.4873 53.2949 42.834 cv
52.959 42.792 52.7529 42.7246 52.7305 42.7178 cv
52.6553 42.6924 li
52.3193 43.1064 li
52.7549 43.5205 53.1582 43.9346 53.6514 44.3818 cv
54.4004 44.7842 55.0039 45.5127 55.541 46.0049 cv
56.1895 46.7646 56.3457 47.5693 56.2109 48.4648 cv
56.1221 49.5264 55.1504 49.9854 54.4893 50.6904 cv
54.2217 51.1943 54.0527 51.7979 54.4209 52.2676 cv
54.6582 52.8936 55.6631 52.7803 55.7861 53.2979 cv
56.0635 54.4326 58.0352 55.0889 58.4189 55.1162 cv
58.8018 55.1416 59.1982 55.5664 59.1982 55.5664 cv
59.9814 56.1377 61.0107 55.999 61.5518 55.917 cv
62.0908 55.835 63.0566 56.2715 63.6621 56.1826 cv
64.5664 55.8252 65.3057 55.9912 66.2451 55.9131 cv
69.1982 55.959 72.5527 55.8916 75.5732 56.2715 cv
76.1328 56.2041 76.8037 56.6406 77.3301 56.374 cv
77.4648 56.1475 77.3633 55.959 77.3301 55.7686 cv
75.8867 53.499 75.6719 50.9502 76.4902 48.4766 cv
77.0332 48.5088 li
78.9932 48.7217 80.7754 48.4678 82.7656 47.3174 cv
83.7598 46.7676 84.2832 45.4854 84.2363 44.5566 cv
84.2051 43.9541 83.9961 43.2412 84.0977 42.6035 cv
84.1318 42.3184 84.3213 41.8857 84.5664 41.751 cv
84.6699 41.6904 85.0371 41.4424 85.1523 41.124 cv
85.3408 40.6074 84.9355 40.3623 84.8184 40.292 cv
85.1348 40.1631 85.4404 39.5176 85.1504 39.0142 cv
84.9629 38.8145 84.7461 38.0293 84.7227 37.772 cv
84.6543 37.4019 84.6436 37.0225 84.9912 36.7861 cv
85.7744 36.374 86.5117 36.2725 87.3281 35.9141 cv
87.8887 35.6797 88.1777 35.0981 88.1563 34.5732 cv
87.8213 33.4321 li
cp
55.8438 51.874 mo
55.7441 52.0537 55.7578 52.1738 55.7129 52.3896 cv
55.6582 52.4883 55.3779 52.3555 55.2891 52.3008 cv
54.9424 52.1133 54.9658 52.208 54.8652 51.8857 cv
54.8086 51.6709 54.8154 51.418 55.1729 51.2314 cv
55.3965 51.1035 55.8438 50.9521 55.9893 51.2314 cv
56.0352 51.418 55.8105 51.6602 55.8438 51.874 cv
cp
57.7529 54.29 mo
57.2949 54.3018 56.9727 54.0518 56.7607 53.5107 cv
56.5459 52.8232 56.4736 52.2158 56.6221 51.5068 cv
56.6699 51.418 56.7715 51.3604 56.8369 51.3896 cv
57.4756 51.1719 li
57.6904 51.085 57.8662 51.0547 58.0703 51.1035 cv
58.2002 51.2324 li
58.1904 51.6055 58.0986 51.8799 58.0889 52.2256 cv
58.0518 53.0908 57.9785 53.3506 58.2275 54.1748 cv
58.1357 54.3926 57.9512 54.2871 57.7529 54.29 cv
cp
84.0381 22.1177 mo
83.9746 22.1841 83.8965 22.2642 83.792 22.2368 cv
83.5537 22.0703 83.6455 21.8589 83.6582 21.6597 cv
83.708 21.6113 83.7158 21.5835 83.792 21.5835 cv
83.9043 21.5635 83.9668 21.647 84.0098 21.7065 cv
84.0801 21.8369 84.0889 21.9839 84.0381 22.1177 cv
cp
65.8877 32.5923 mo
67.4541 29.7852 69.3564 27.3462 71.3916 24.8413 cv
74.2441 21.5986 li
76.2793 19.4272 78.5273 17.2017 81.0215 15.4805 cv
81.335 15.3013 81.4736 14.9331 81.7949 15.1914 cv
82.0898 15.4614 li
82.2871 15.6855 82.1162 16.3198 81.9141 16.498 cv
81.752 16.6294 81.5957 16.7588 81.4414 16.8877 cv
81.9277 17.3691 82.6289 18.2842 83.207 18.8779 cv
83.459 19.1382 83.3809 19.4087 83.834 19.6196 cv
84.0605 19.7266 84.125 19.9736 83.9902 20.1855 cv
83.5889 20.7007 82.9189 20.6216 82.3916 20.7559 cv
80.4336 21.1924 78.8535 21.7524 76.6875 22.8022 cv
74.9541 23.7202 73.5684 24.7373 72.3135 26.3149 cv
71.834 26.9077 71.2969 27.356 70.8945 28.0698 cv
69.7539 29.5361 68.8477 30.9121 67.9395 32.4224 cv
67.6162 32.897 67.5107 33.1338 67.0566 33.563 cv
66.8359 33.7729 66.6396 33.3354 66.502 33.1836 cv
66.4863 33.1665 66.4766 33.147 66.4658 33.1304 cv
66.4189 33.1372 66.3701 33.1279 66.3232 33.0957 cv
66.2012 32.939 65.8203 32.8721 65.8877 32.5923 cv
cp
83.1396 21.7471 mo
83.1104 22.29 82.3867 22.7383 81.7832 22.9058 cv
81.5234 22.9458 81.2871 22.9307 81.0586 22.9307 cv
80.999 22.8892 80.9297 22.8384 80.9395 22.7808 cv
80.9785 22.522 81.0195 22.3721 81.0391 22.1392 cv
81.1875 22.0298 li
81.7227 21.9219 82.377 21.8071 82.9131 21.6641 cv
82.9922 21.6816 83.0898 21.6738 83.1396 21.7471 cv
cp
77.5195 23.1592 mo
77.6152 23.0356 li
78.0547 22.8271 78.4609 22.666 78.9473 22.5254 cv
79.5303 22.374 li
79.6855 22.2339 79.957 22.1196 80.1143 22.3184 cv
80.123 23.0723 79.5596 23.98 78.7246 24.3276 cv
78.4609 24.4419 78.1113 24.4795 77.8008 24.5557 cv
77.7227 24.4897 77.4688 24.6309 77.3926 24.4419 cv
77.4414 24.064 77.5859 23.4976 77.5195 23.1592 cv
cp
71.5469 36.5435 mo
71.3916 36.6333 70.0391 36.1172 70.1973 36.2603 cv
69.877 35.9141 70.4004 35.7974 69.207 35.3496 cv
68.9189 35.3794 li
68.8809 35.4141 68.7754 35.4673 68.6689 35.3184 cv
68.6582 35.1396 68.8936 35.165 68.9688 34.9419 cv
69.3955 33.9805 69.1602 33.2363 69.1182 32.2407 cv
69.4346 31.4253 li
70.0332 30.7031 70.0313 30.6001 70.4375 30.208 cv
70.8438 29.6362 70.9297 29.5928 71.4727 29.1235 cv
71.5625 29.0464 71.7266 28.9868 71.832 29.0762 cv
72.0889 29.2769 72.1025 29.4082 72.1777 29.6646 cv
72.3057 30.6162 71.7305 31.2686 71.0371 31.7832 cv
70.5449 32.208 70.0762 32.8672 70.1826 33.5166 cv
70.2246 33.5601 li
70.4492 33.3706 70.7314 33.2598 70.8271 33.0259 cv
71.2021 32.1875 72.2119 31.8066 72.7773 31.0786 cv
73.0234 30.6431 72.874 29.8872 72.7773 29.3838 cv
72.7754 29.3979 73.5195 29.0313 73.3174 29.1631 cv
73.6709 29.3081 73.627 29.562 73.7979 29.8848 cv
74.1289 30.7241 74.1006 31.4824 73.5879 32.2095 cv
72.1777 33.9678 li
72.1563 34.8643 72.4023 36.0171 71.5469 36.5435 cv
cp
73.4082 28.0327 mo
73.0684 28.1895 72.7207 28.2236 72.3457 28.0498 cv
72.25 27.9204 71.9404 27.8154 72.0625 27.625 cv
72.334 27.1841 72.7949 26.8203 73.0781 26.3872 cv
73.209 26.3164 li
73.7832 25.624 74.6875 25.0439 75.543 24.5229 cv
76.0605 24.2979 li
76.1738 24.186 76.4375 23.9512 76.54 24.1938 cv
76.5596 25.0952 76.1777 26.0596 75.3184 26.6978 cv
74.7969 27.084 74.5723 27.0093 74.1074 27.0371 cv
73.8682 27.4697 li
73.8115 27.686 73.623 27.9028 73.4082 28.0327 cv
cp
68.6621 33.1797 mo
68.6387 33.8179 li
68.5811 34.4004 68.3115 35.0703 67.7646 35.395 cv
67.4385 35.3174 67.5547 34.9248 67.4736 34.6572 cv
67.6846 34.0752 68.0918 33.5938 68.4287 33.0801 cv
68.4746 33.0459 68.5215 33.0234 68.5684 33.0459 cv
68.6621 33.1797 li
cp
60.875 55.3564 mo
60.6465 55.5918 60.5176 55.4814 60.2871 55.5039 cv
59.6279 55.3252 59.2402 55.04 59.0537 54.2939 cv
58.8115 53.2549 58.8203 52.1123 59.0537 51.0498 cv
59.1592 50.9678 li
59.6221 50.915 60.3223 50.8213 60.5127 50.9258 cv
60.7031 51.0303 60.3086 52.8994 60.3086 52.8994 cv
60.2959 53.2705 60.4775 54.2197 60.6465 54.7109 cv
60.6816 54.7842 61.0605 55.165 60.875 55.3564 cv
cp
65.6504 54.2021 mo
65.5801 54.8701 64.7422 55.458 64.332 55.5752 cv
63.9209 55.6934 62.6943 55.6357 62.3408 55.5127 cv
61.9883 55.3916 61.127 53.708 61.2275 52.835 cv
61.2275 52.1143 61.4209 50.9697 61.7109 50.8779 cv
62 50.7881 62.7656 50.835 62.7656 50.835 cv
63.0859 50.8135 63.3281 50.8896 63.6104 50.9229 cv
63.8096 50.999 63.6689 51.251 63.7393 51.3926 cv
63.8301 51.7646 63.8516 52.1689 64.082 52.54 cv
64.4043 53.1631 64.9961 53.5361 65.5801 53.7549 cv
65.7109 53.875 65.6387 54.0381 65.6504 54.2021 cv
cp
64.709 51.3779 mo
64.709 51.2451 64.7168 51.1895 64.8184 51.1455 cv
65.3711 51.1455 li
65.8623 51.1631 66.4941 51.3252 66.9541 50.8486 cv
67.2178 50.8584 67.2412 51.1719 67.3115 51.415 cv
67.374 51.7549 67.3584 51.9697 67.3584 52.2744 cv
67.249 52.5156 67.125 52.8828 66.876 53.0361 cv
66.4785 53.2236 66.0791 53.1875 65.6982 53.0361 cv
65.1211 52.6943 64.7012 52.1494 64.709 51.3779 cv
cp
76.0352 48.7383 mo
75.2949 51.2998 74.9434 52.6221 76.0957 55.2607 cv
76.1074 55.3623 76.2188 55.6885 76.0957 55.7324 cv
74.8223 55.4756 74.4824 55.3662 73.2842 55.2773 cv
72.1777 55.0869 70.3398 55.3945 69.1094 55.3828 cv
68.1494 55.416 67.1738 55.4482 66.167 55.5723 cv
65.8662 55.416 66.0996 55.0801 66.123 54.8564 cv
66.2344 54.5098 66.2451 54.3311 66.2793 53.9287 cv
66.4365 53.7617 66.627 53.8506 66.8164 53.7715 cv
67.4648 53.6719 68.0137 53.1006 68.1699 52.4961 cv
68.3711 51.8604 68.1494 51.1553 67.8584 50.5508 cv
67.7998 50.3721 67.5547 50.2373 67.6563 50.0596 cv
68.4502 48.5703 67.8906 47.0615 67.6221 45.6074 cv
67.3428 44.5771 66.918 43.4375 66.749 42.3516 cv
66.7832 42.2402 66.6377 41.9814 66.8828 41.96 cv
66.9736 41.9814 li
67.8232 43.0127 70.2559 45.1904 71.168 45.8984 cv
72.0801 46.6064 74.4336 47.9785 75.9658 48.3486 cv
76.1113 48.4697 76.0898 48.5703 76.0352 48.7383 cv
1 /0 get_csd
sepcs
1 sep
f
82.498 26.4688 mo
82.6533 26.6709 82.7559 26.8491 82.6318 27.04 cv
82.3418 27.0625 82.2969 26.6938 82.0508 26.5698 cv
81.6475 26.3696 81.2891 26.583 80.8867 26.6826 cv
79.8711 27.1187 79.0195 27.9907 78.0352 28.4487 cv
77.9121 28.4487 77.8008 28.4375 77.7227 28.3481 cv
77.8906 28.1807 78.1582 28.147 78.3721 28.0122 cv
79.3887 27.3418 80.374 26.292 81.6475 26.1006 cv
81.9844 26.0791 82.2852 26.2007 82.498 26.4688 cv
1 /0 get_csd
sepcs
1 sep
f
82.4199 28.1929 mo
82.3418 27.9453 82.3516 27.543 82.0508 27.4873 cv
81.9844 27.6431 82.0508 27.8125 81.9844 27.9575 cv
81.8945 28.0684 81.7383 28.2026 81.5586 28.1582 cv
80.3281 28.2358 79.4102 29.3223 78.3594 29.8799 cv
78.002 30.082 77.5996 30.1948 77.2188 30.2949 cv
77.1855 30.3511 77.1973 30.4292 77.252 30.4619 cv
78.416 30.585 79.5674 30.6987 80.7207 30.8203 cv
82.0059 30.6738 li
82.04 30.5073 81.8379 30.3618 81.8711 30.1704 cv
82.0176 29.646 82.0625 29.0752 81.917 28.583 cv
82.0176 28.3159 82.3984 28.5161 82.4199 28.1929 cv
cp
81.5205 30.1787 mo
81.3633 30.4121 81.1133 30.209 80.8926 30.2368 cv
80.3887 30.1787 79.5391 30.2964 78.9844 30.2275 cv
78.9004 30.1787 78.8379 30.0913 78.8887 30.0132 cv
78.9727 29.875 79.2051 29.8662 79.3516 29.7588 cv
79.96 29.3789 80.5996 29.0176 81.291 28.8521 cv
81.416 28.833 81.5205 28.9399 81.543 29.0269 cv
81.626 29.3486 81.5742 29.8662 81.5205 30.1787 cv
1 /0 get_csd
sepcs
1 sep
f
83.0713 33.9585 mo
83.1113 33.9004 83.1582 33.8335 83.2129 33.8281 cv
83.2861 33.8545 83.3242 33.8896 83.335 34.0244 cv
83.3262 34.2402 83.2715 34.4673 83.2129 34.7075 cv
83.1465 34.98 83.0781 35.2607 83.0781 35.5352 cv
83.0781 35.6563 83.0918 35.7769 83.123 35.8955 cv
83.2861 36.0972 83.5352 36.1426 83.834 36.0396 cv
83.8408 36.0371 84.3457 35.748 84.3457 35.748 cv
84.7832 35.4858 85.1973 35.2388 85.9648 35.0435 cv
85.9824 35.0381 85.9873 35.0444 85.9902 35.0479 cv
86.002 35.0615 86.0068 35.0908 86.0068 35.127 cv
86.0068 35.1914 85.9883 35.2817 85.9561 35.355 cv
85.9277 35.3682 85.2188 35.6841 85.2188 35.6841 cv
84.6602 35.9292 84.083 36.1802 83.541 36.4912 cv
83.3809 36.5234 83.2334 36.438 83.0908 36.353 cv
83.0547 36.333 li
82.8496 36.0513 82.7832 35.7783 82.7832 35.5054 cv
82.7832 35.2617 82.8369 35.0161 82.8906 34.7646 cv
82.9414 34.5313 82.9951 34.2891 83.0078 34.0347 cv
83.0244 34.0137 83.0713 33.9585 83.0713 33.9585 cv
1 /0 get_csd
sepcs
1 sep
f
65.6416 33.729 mo
66.0459 34.5562 65.6201 35.3389 65.6416 36.2012 cv
65.709 36.4458 66.1904 36.4795 66.0459 36.771 cv
65.9326 36.8491 65.7764 36.8706 65.6533 36.7813 cv
65.4297 36.6367 65.3516 36.5259 65.2949 36.2676 cv
65.2383 35.5083 65.8438 34.6226 65.3057 33.9077 cv
65.1504 33.7505 64.9258 33.5938 64.7021 33.584 cv
64.2207 33.6729 63.9756 34.1875 63.8086 34.5659 cv
63.5508 35.5737 63.4834 36.6367 64.3672 37.4414 cv
64.8828 37.7432 65.5078 38.0684 65.543 38.7173 cv
65.6201 38.8296 65.7764 38.9399 65.9004 38.873 cv
66.0566 38.8623 66.0781 38.415 66.3018 38.6279 cv
66.3691 38.7842 li
66.3125 38.9624 66.2578 39.2769 65.9678 39.2871 cv
65.8213 39.3203 65.6641 39.2427 65.543 39.1533 cv
65.2275 38.8296 65.4746 38.3369 64.9482 38.124 cv
64.0762 37.8555 63.5049 36.938 63.416 36.0771 cv
63.3594 35.25 63.3945 34.3433 64.1104 33.6162 cv
64.3896 33.4038 64.7588 33.269 65.1172 33.3818 cv
65.3184 33.415 65.5537 33.5601 65.6416 33.729 cv
1 /0 get_csd
sepcs
1 sep
f
54.707 39.7778 mo
53.1143 40.5166 52.6289 42.4141 52.6074 42.4941 cv
52.5654 42.6621 li
52.7305 42.7178 li
52.792 42.7393 54.2705 43.2227 56.0752 42.3369 cv
57.8945 41.4443 58.2686 39.6431 58.2842 39.5664 cv
58.3213 39.376 li
58.1289 39.3457 li
58.0537 39.3325 56.2705 39.0527 54.707 39.7778 cv
cp
54.8652 40.1201 mo
56.0283 39.5811 57.3574 39.6431 57.8574 39.6924 cv
57.7148 40.1528 57.2314 41.3506 55.9092 41.999 cv
54.583 42.6494 53.4463 42.4941 53.0303 42.4053 cv
53.1836 41.9443 53.6973 40.6631 54.8652 40.1201 cv
1 /0 get_csd
sepcs
1 sep
ef
56.2949 36.2031 mo
54.6992 36.9224 54.1094 38.8022 54.0859 38.8818 cv
54.0322 39.061 li
54.209 39.1167 li
54.2715 39.1362 55.7461 39.5757 57.5566 38.7095 cv
59.3828 37.8359 59.7715 36.0962 59.7871 36.0225 cv
59.8262 35.832 li
59.6348 35.7979 li
59.5635 35.7847 57.8643 35.4941 56.2949 36.2031 cv
cp
56.4492 36.5459 mo
57.6074 36.0225 58.873 36.0898 59.3574 36.1416 cv
59.208 36.5918 58.7139 37.7383 57.3936 38.3706 cv
56.0781 38.999 54.9492 38.8799 54.5176 38.7988 cv
54.7002 38.3301 55.2832 37.0732 56.4492 36.5459 cv
1 /0 get_csd
sepcs
1 sep
ef
58.3672 32.7593 mo
56.7695 33.4609 56.0771 35.3223 56.0488 35.4019 cv
55.9785 35.5918 li
56.1748 35.647 li
56.2373 35.6646 57.708 36.0586 59.5205 35.2129 cv
61.3564 34.3599 61.7578 32.6812 61.7754 32.6099 cv
61.8164 32.4199 li
61.627 32.3823 li
61.5596 32.3691 59.9443 32.0649 58.3672 32.7593 cv
cp
58.5186 33.105 mo
59.6729 32.5972 60.874 32.6685 61.3438 32.7236 cv
61.1875 33.1626 60.6816 34.2583 59.3633 34.8726 cv
58.0605 35.478 56.9414 35.395 56.4912 35.3247 cv
56.707 34.8477 57.3545 33.6162 58.5186 33.105 cv
1 /0 get_csd
sepcs
1 sep
ef
60.4258 29.3589 mo
58.8262 30.043 58.0322 31.8857 58 31.9624 cv
57.9141 32.1655 li
58.1279 32.2192 li
58.1895 32.2349 59.6553 32.5859 61.4746 31.7612 cv
63.3164 30.9263 63.7314 29.3081 63.75 29.2397 cv
63.7959 29.0508 li
63.6055 29.0093 li
63.542 28.9961 62.0127 28.6816 60.4258 29.3589 cv
cp
60.5742 29.7056 mo
61.7246 29.2148 62.8613 29.2896 63.3145 29.3462 cv
63.1514 29.7739 62.6357 30.8218 61.3184 31.418 cv
60.0303 32.002 58.9189 31.9517 58.4531 31.8921 cv
58.7021 31.4063 59.4141 30.2012 60.5742 29.7056 cv
1 /0 get_csd
sepcs
1 sep
ef
63.2754 25.9556 mo
61.6719 26.6216 60.7773 28.4468 60.7402 28.5234 cv
60.6348 28.7383 li
60.8682 28.7896 li
60.9297 28.8032 62.3926 29.1094 64.2168 28.3062 cv
66.0654 27.4907 66.4951 25.9326 66.5127 25.8672 cv
66.5625 25.6797 li
66.373 25.6343 li
66.3145 25.6206 64.8682 25.2939 63.2754 25.9556 cv
cp
63.4189 26.3037 mo
64.5635 25.8286 65.6387 25.9067 66.0762 25.9678 cv
65.9063 26.3843 65.3799 27.3809 64.0645 27.9609 cv
62.7813 28.5269 61.6826 28.5034 61.2061 28.4561 cv
61.4922 27.9624 62.2646 26.7847 63.4189 26.3037 cv
1 /0 get_csd
sepcs
1 sep
ef
66.416 22.6729 mo
64.8105 23.3203 63.8125 25.1284 63.7715 25.2051 cv
63.6494 25.4312 li
63.9023 25.4805 li
63.9629 25.4917 65.4219 25.7554 67.249 24.9697 cv
69.1074 24.1729 69.5518 22.6777 69.5693 22.6147 cv
69.6221 22.4287 li
69.4346 22.3809 li
69.3779 22.3657 68.0166 22.0269 66.416 22.6729 cv
cp
66.5566 23.0215 mo
67.6924 22.5635 68.707 22.6436 69.1289 22.707 cv
68.9521 23.1118 68.4141 24.062 67.1006 24.623 cv
65.8291 25.1689 64.7422 25.1733 64.2529 25.1387 cv
64.5732 24.6372 65.4063 23.4863 66.5566 23.0215 cv
1 /0 get_csd
sepcs
1 sep
ef
69.7695 19.5684 mo
68.1602 20.1982 67.0625 21.9897 67.0176 22.0654 cv
66.873 22.3057 li
67.1494 22.3491 li
67.21 22.3574 68.6641 22.5791 70.4961 21.8145 cv
72.3613 21.0376 72.8184 19.6045 72.8369 19.5435 cv
72.8945 19.3579 li
72.709 19.3066 li
72.6563 19.292 71.3789 18.9385 69.7695 19.5684 cv
cp
69.9072 19.9194 mo
71.0332 19.4795 71.9902 19.5601 72.3965 19.6255 cv
72.209 20.0186 71.6621 20.9214 70.3516 21.4673 cv
69.0977 21.9897 68.0186 22.0239 67.5137 22.002 cv
67.873 21.4922 68.7656 20.3667 69.9072 19.9194 cv
1 /0 get_csd
sepcs
1 sep
ef
73.2578 16.7046 mo
71.6445 17.3169 70.4473 19.0918 70.3975 19.166 cv
70.2285 19.4199 li
70.5303 19.458 li
70.5918 19.4663 72.041 19.6416 73.877 18.8975 cv
75.75 18.1396 76.2217 16.7686 76.2402 16.7095 cv
76.3008 16.5293 li
76.1191 16.4712 li
76.0693 16.4561 74.876 16.0903 73.2578 16.7046 cv
cp
73.3926 17.0557 mo
74.5078 16.6323 75.4072 16.7153 75.7949 16.7842 cv
75.6016 17.1641 75.0391 18.021 73.7363 18.5483 cv
72.4941 19.0508 71.4277 19.1104 70.9121 19.1011 cv
71.3086 18.5874 72.2539 17.4883 73.3926 17.0557 cv
1 /0 get_csd
sepcs
1 sep
ef
76.8018 14.1382 mo
75.1855 14.7334 73.8887 16.4922 73.834 16.5674 cv
73.6387 16.8325 li
73.9668 16.8652 li
74.0273 16.8726 75.4727 17.0034 77.3145 16.2793 cv
79.1934 15.5415 79.6797 14.2314 79.6992 14.1758 cv
79.7627 13.9971 li
79.584 13.9351 li
79.5391 13.9175 78.4287 13.5386 76.8018 14.1382 cv
cp
76.9316 14.4912 mo
78.0371 14.0845 78.8809 14.168 79.25 14.2393 cv
79.0488 14.6055 78.4775 15.418 77.1758 15.9292 cv
75.9492 16.4111 74.8984 16.4937 74.3691 16.498 cv
74.8027 15.979 75.8018 14.9077 76.9316 14.4912 cv
1 /0 get_csd
sepcs
1 sep
ef
52.1602 36.1763 mo
52.1123 36.2383 51.0059 37.6748 50.8916 39.4033 cv
50.7783 41.1631 52.2178 42.5088 52.2803 42.5635 cv
52.4063 42.6816 li
52.5352 42.5635 li
52.583 42.5205 53.7236 41.4512 53.8105 39.4312 cv
53.8994 37.3975 52.4883 36.1987 52.4287 36.1484 cv
52.2783 36.0234 li
52.1602 36.1763 li
cp
51.2637 39.6001 mo
51.2637 39.5425 51.2656 39.4858 51.2695 39.4287 cv
51.3535 38.1343 52.0527 36.9932 52.335 36.5806 cv
52.6621 36.9185 53.4385 37.8618 53.4385 39.2529 cv
53.4385 39.3066 53.4365 39.3613 53.4346 39.416 cv
53.3691 40.8994 52.6846 41.8291 52.4033 42.1514 cv
52.085 41.8115 51.2637 40.8164 51.2637 39.6001 cv
1 /0 get_csd
sepcs
1 sep
ef
54.4053 32.3032 mo
54.3682 32.3452 53.4688 33.3384 53.084 34.7651 cv
53.0332 34.959 52.9912 35.166 52.9668 35.3809 cv
52.7588 37.0874 53.9912 38.4868 54.0449 38.5469 cv
54.167 38.6821 li
54.3076 38.564 li
54.3564 38.5215 55.5195 37.5122 55.7568 35.5513 cv
55.9941 33.5693 54.7275 32.3452 54.6748 32.2944 cv
54.5352 32.1626 li
54.4053 32.3032 li
cp
53.3193 35.7656 mo
53.3193 35.6548 53.3262 35.5415 53.3398 35.4268 cv
53.3633 35.23 53.3994 35.0405 53.4482 34.8643 cv
53.7236 33.8413 54.2939 33.043 54.5498 32.7192 cv
54.8203 33.0405 55.4092 33.877 55.4092 35.0703 cv
55.4092 35.2109 55.4004 35.356 55.3828 35.5073 cv
55.2109 36.9351 54.5 37.8213 54.2012 38.1392 cv
53.9355 37.7871 53.3193 36.8599 53.3193 35.7656 cv
1 /0 get_csd
sepcs
1 sep
ef
56.9238 28.6699 mo
56.8838 28.708 55.9395 29.5884 55.459 31.0059 cv
55.3984 31.1855 55.3486 31.3809 55.3096 31.6016 cv
55.0088 33.2515 56.0371 34.7046 56.0801 34.7676 cv
56.1943 34.9268 li
56.3496 34.8047 li
56.3994 34.7651 57.5889 33.8149 57.9717 31.9121 cv
58.3594 29.9854 57.2383 28.7344 57.1904 28.6836 cv
57.0635 28.543 li
56.9238 28.6699 li
cp
55.6338 32.2095 mo
55.6338 32.0337 55.6475 31.8491 55.6816 31.667 cv
55.7168 31.4658 55.7617 31.2891 55.8164 31.126 cv
56.1572 30.1196 56.7627 29.3911 57.0361 29.0962 cv
57.251 29.4004 57.6748 30.126 57.6748 31.123 cv
57.6748 31.3486 57.6523 31.5869 57.6006 31.8394 cv
57.3262 33.209 56.5898 34.0522 56.2715 34.3647 cv
56.0615 34.0107 55.6338 33.1724 55.6338 32.2095 cv
1 /0 get_csd
sepcs
1 sep
ef
59.6924 25.2754 mo
59.6504 25.3081 58.6631 26.0762 58.084 27.4824 cv
58.0146 27.6484 57.957 27.8354 57.9033 28.0566 cv
57.5146 29.6523 58.3291 31.1558 58.3643 31.2202 cv
58.4668 31.4063 li
58.6396 31.2808 li
58.6904 31.2446 59.9043 30.354 60.4336 28.5107 cv
60.9717 26.6396 59.9971 25.3618 59.9551 25.3101 cv
59.8418 25.1631 li
59.6924 25.2754 li
cp
58.1777 28.9443 mo
58.1777 28.6846 58.2051 28.4136 58.2705 28.1455 cv
58.3184 27.9438 58.3721 27.7729 58.4326 27.625 cv
58.8398 26.6372 59.4756 25.9775 59.7666 25.71 cv
59.9268 25.9854 60.2148 26.5884 60.2148 27.4038 cv
60.2148 27.7109 60.1748 28.0488 60.0713 28.4063 cv
59.6943 29.7183 58.9365 30.5181 58.5957 30.8281 cv
58.4453 30.4878 58.1777 29.7681 58.1777 28.9443 cv
1 /0 get_csd
sepcs
1 sep
ef
62.6904 22.1152 mo
62.6475 22.1411 61.6201 22.7964 60.9385 24.1914 cv
60.8623 24.3501 60.793 24.5249 60.7256 24.7441 cv
60.2471 26.2852 60.8525 27.8389 60.8799 27.9048 cv
60.9658 28.1191 li
61.1582 27.9927 li
61.2109 27.9565 62.4473 27.1245 63.1221 25.3428 cv
63.8096 23.5273 62.9844 22.2256 62.9492 22.1709 cv
62.8477 22.0156 li
62.6904 22.1152 li
cp
60.9209 26.0049 mo
60.9209 25.6377 60.9658 25.2441 61.085 24.8564 cv
61.1475 24.6563 61.209 24.4966 61.2764 24.3579 cv
61.7529 23.3843 62.4199 22.79 62.7246 22.5522 cv
62.8408 22.792 63.0176 23.2617 63.0176 23.8975 cv
63.0176 24.2832 62.9531 24.7241 62.7695 25.208 cv
62.2969 26.4565 61.5156 27.2183 61.1504 27.5234 cv
61.0596 27.2183 60.9209 26.6567 60.9209 26.0049 cv
1 /0 get_csd
sepcs
1 sep
ef
65.9004 19.1836 mo
65.8555 19.2056 64.79 19.748 64.002 21.1328 cv
63.918 21.2822 63.8398 21.4502 63.7588 21.6606 cv
63.1895 23.1465 63.5898 24.749 63.6074 24.8164 cv
63.6689 25.0615 li
63.8867 24.9297 li
63.9395 24.8984 65.1992 24.124 66.0195 22.4019 cv
66.8564 20.645 66.1797 19.3193 66.1504 19.2646 cv
66.0645 19.1011 li
65.9004 19.1836 li
cp
63.834 23.437 mo
63.834 22.9385 63.8975 22.3525 64.1104 21.7954 cv
64.1855 21.6035 64.2539 21.4521 64.3301 21.3188 cv
64.875 20.3623 65.5703 19.8345 65.8916 19.6255 cv
65.9629 19.8228 66.0596 20.1636 66.0596 20.6333 cv
66.0596 21.0806 65.9707 21.6299 65.6797 22.2397 cv
65.1104 23.4351 64.3037 24.1499 63.918 24.4468 cv
63.8789 24.2158 63.834 23.8584 63.834 23.437 cv
1 /0 get_csd
sepcs
1 sep
ef
69.3066 16.479 mo
69.2598 16.498 68.1621 16.9297 67.2627 18.2969 cv
67.1699 18.4409 67.0801 18.6074 66.9873 18.8037 cv
66.3301 20.2324 66.5234 21.8838 66.5322 21.9517 cv
66.5664 22.2271 li
66.8096 22.0942 li
66.8643 22.0645 68.1465 21.3496 69.1123 19.687 cv
70.0957 17.9897 69.5703 16.6426 69.5488 16.5854 cv
69.4775 16.4136 li
69.3066 16.479 li
cp
66.8779 21.3037 mo
66.8779 20.7144 66.9502 19.7856 67.3301 18.9614 cv
67.415 18.7803 67.4951 18.6323 67.5791 18.5059 cv
68.1953 17.5654 68.9189 17.1001 69.2529 16.9219 cv
69.2891 17.0718 69.3262 17.2949 69.3262 17.5908 cv
69.3262 18.0859 69.2148 18.7568 68.7861 19.498 cv
68.124 20.6387 67.2959 21.3096 66.8857 21.5972 cv
66.8818 21.5122 66.8779 21.4155 66.8779 21.3037 cv
1 /0 get_csd
sepcs
1 sep
ef
72.8945 13.999 mo
72.8477 14.0122 71.7168 14.3345 70.707 15.6875 cv
70.6006 15.8276 70.5 15.9868 70.4004 16.168 cv
69.6504 17.541 69.6426 19.2397 69.6426 19.3125 cv
69.6445 19.6143 li
69.9141 19.481 li
69.9707 19.4521 71.2764 18.7959 72.3848 17.1924 cv
73.5156 15.5552 73.1416 14.1855 73.125 14.1299 cv
73.0732 13.9497 li
72.8945 13.999 li
cp
70.7314 16.3496 mo
70.8223 16.1826 70.9141 16.04 71.0078 15.9121 cv
71.6963 14.9912 72.4492 14.5864 72.7969 14.4385 cv
72.8066 14.5259 72.8174 14.6318 72.8174 14.7676 cv
72.8174 15.2734 72.6934 16.082 72.0752 16.9775 cv
71.3232 18.0645 70.4707 18.6943 70.0361 18.9717 cv
70.0771 18.4189 70.2168 17.2871 70.7314 16.3496 cv
1 /0 get_csd
sepcs
1 sep
ef
76.6309 11.7393 mo
76.583 11.7471 75.4248 11.9629 74.2988 13.2935 cv
73.1797 14.6147 72.917 16.7983 72.9063 16.8901 cv
72.8691 17.2178 li
73.168 17.084 li
73.2256 17.0586 74.5566 16.4604 75.8076 14.915 cv
77.083 13.3394 76.8594 11.9497 76.8496 11.894 cv
76.8164 11.7075 li
76.6309 11.7393 li
cp
74.5859 13.5376 mo
75.3496 12.6357 76.1309 12.29 76.4912 12.1699 cv
76.4922 12.1787 76.4922 12.1836 76.4922 12.1948 cv
76.4922 12.6294 76.3799 13.6094 75.5137 14.6787 cv
74.6758 15.7134 73.7959 16.3027 73.3389 16.5674 cv
73.4619 15.8965 73.8037 14.4609 74.5859 13.5376 cv
1 /0 get_csd
sepcs
1 sep
ef
40.8428 30.4331 mo
40.8428 39.5483 45.7764 48.3184 53.7178 53.3223 cv
54.0469 53.5283 li
54.2822 53.2197 li
54.3496 53.1328 54.376 53.0498 54.376 52.9736 cv
54.376 52.7783 54.209 52.624 54.1152 52.5381 cv
53.6553 52.0967 li
52.0186 50.2373 51.5801 48.4736 51.5801 47.1201 cv
51.5801 45.6201 52.1162 44.6201 52.1602 44.543 cv
52.3066 44.2783 li
52.1045 44.0518 li
48.749 40.3086 46.9766 35.6006 46.9766 30.4331 cv
46.9766 19.0659 56.2236 9.81934 67.5918 9.81934 cv
70.7529 9.81934 73.7842 10.5142 76.6055 11.8867 cv
76.8975 12.0293 li
81.041 7.30176 li
80.582 7.04541 li
76.6309 4.8457 72.1387 3.68457 67.5918 3.68457 cv
52.8418 3.68457 40.8428 15.6855 40.8428 30.4331 cv
cp
41.6924 30.4331 mo
41.6924 16.1538 53.3096 4.53516 67.5918 4.53516 cv
71.8164 4.53516 75.9883 5.58203 79.6953 7.5459 cv
79.1523 8.16504 77.0078 10.6108 76.6777 10.9863 cv
73.8262 9.65088 70.7734 8.96875 67.5918 8.96875 cv
55.7559 8.96875 46.125 18.5977 46.125 30.4331 cv
46.125 35.7144 47.915 40.5322 51.291 44.3984 cv
51.0967 44.8477 50.752 45.8311 50.752 47.1328 cv
50.752 48.21 51.001 49.5029 51.7598 50.876 cv
45.4922 45.8838 41.6924 38.293 41.6924 30.4331 cv
1 /0 get_csd
sepcs
1 sep
ef
76.9746 11.1226 mo
74.0381 9.69287 70.8828 8.96875 67.5918 8.96875 cv
55.7559 8.96875 46.125 18.5977 46.125 30.4331 cv
46.125 35.812 47.9736 40.7178 51.4717 44.6201 cv
51.8398 45.0283 li
53.4707 42.5625 li
53.3848 42.4619 li
53.2383 42.4443 53.1172 42.4229 53.0303 42.4053 cv
53.0527 42.3359 53.084 42.249 53.124 42.1504 cv
52.9961 41.9971 52.8672 41.8447 52.7441 41.6875 cv
52.6123 41.8975 52.4893 42.0527 52.4033 42.1514 cv
52.085 41.8115 51.2637 40.8164 51.2637 39.6001 cv
51.2637 39.561 51.2656 39.522 51.2676 39.4824 cv
49.7402 36.7954 48.9658 33.7656 48.9658 30.4331 cv
48.9658 20.1636 57.3213 11.8086 67.5918 11.8086 cv
70.1133 11.8086 72.543 12.3003 74.8301 13.2686 cv
75.0762 13.0146 75.3184 12.8149 75.542 12.6592 cv
73.0391 11.5356 70.3691 10.958 67.5918 10.958 cv
56.8525 10.958 48.1143 19.6948 48.1143 30.4331 cv
48.1143 35.0908 49.5674 39.1836 52.4141 42.6182 cv
52.249 42.8682 52.0176 43.2197 51.752 43.6201 cv
48.6348 39.9473 46.9766 35.4082 46.9766 30.4331 cv
46.9766 19.0659 56.2236 9.81934 67.5918 9.81934 cv
70.6113 9.81934 73.5117 10.4619 76.2236 11.7148 cv
76.1094 11.9609 76 12.2021 75.8867 12.4419 cv
76.1367 12.3022 76.3467 12.2173 76.4912 12.1699 cv
76.4922 12.1787 76.4922 12.1836 76.4922 12.1948 cv
76.4922 12.5117 76.4307 13.1187 76.0625 13.8389 cv
76.1592 13.8867 li
77.3496 11.3032 li
76.9746 11.1226 li
1 /0 get_csd
sepcs
1 sep
ef
76.7842 6.91504 mo
74.7324 9.50977 li
74.9199 9.57471 75.1074 9.6416 75.2939 9.71094 cv
77.3301 7.13428 li
77.1504 7.05859 76.9688 6.98584 76.7842 6.91504 cv
1 /0 get_csd
sepcs
1 sep
f
72.7676 5.71973 mo
71.5713 8.68262 li
71.7607 8.71631 71.9473 8.75391 72.1348 8.79395 cv
73.3281 5.84131 li
73.1406 5.79736 72.9551 5.75879 72.7676 5.71973 cv
1 /0 get_csd
sepcs
1 sep
f
67.9893 5.18506 mo
67.6953 8.32617 li
67.8848 8.32617 68.0742 8.32959 68.2617 8.33545 cv
68.5566 5.19971 li
68.3672 5.19336 68.1787 5.18848 67.9893 5.18506 cv
1 /0 get_csd
sepcs
1 sep
f
63.334 5.53955 mo
63.9307 8.62891 li
64.1172 8.59814 64.3027 8.56982 64.4902 8.54297 cv
63.8926 5.45117 li
63.7061 5.47803 63.5195 5.50781 63.334 5.53955 cv
1 /0 get_csd
sepcs
1 sep
f
58.8164 6.75195 mo
60.2295 9.58643 li
60.4092 9.52295 60.5889 9.46191 60.7695 9.40234 cv
59.3535 6.56055 li
59.1729 6.62256 58.9951 6.68652 58.8164 6.75195 cv
1 /0 get_csd
sepcs
1 sep
f
54.5322 8.82568 mo
56.6406 11.2329 li
56.8066 11.1367 56.9756 11.043 57.1455 10.9521 cv
55.0264 8.53125 li
54.8604 8.62793 54.6963 8.72607 54.5322 8.82568 cv
1 /0 get_csd
sepcs
1 sep
f
50.6387 11.7305 mo
53.2998 13.5786 li
53.4492 13.4521 53.6006 13.3271 53.7529 13.2041 cv
51.0742 11.3433 li
50.9277 11.4707 50.7822 11.5996 50.6387 11.7305 cv
1 /0 get_csd
sepcs
1 sep
f
47.3271 15.3784 mo
50.3848 16.5684 li
50.5088 16.4131 50.6357 16.2603 50.7646 16.1099 cv
47.6836 14.9102 li
47.5625 15.0645 47.4443 15.2212 47.3271 15.3784 cv
1 /0 get_csd
sepcs
1 sep
f
44.7686 19.625 mo
48.0596 20.0845 li
48.1533 19.9058 48.251 19.729 48.3496 19.5537 cv
45.0303 19.0918 li
44.9414 19.2686 44.8535 19.4463 44.7686 19.625 cv
1 /0 get_csd
sepcs
1 sep
f
43.0938 24.2856 mo
46.4482 23.9644 li
46.5088 23.7686 46.5713 23.5718 46.6367 23.3789 cv
43.248 23.7021 li
43.1943 23.896 43.1426 24.0903 43.0938 24.2856 cv
1 /0 get_csd
sepcs
1 sep
f
42.3672 29.1665 mo
45.6123 28.0381 li
45.6348 27.8301 45.6602 27.6211 45.6885 27.4131 cv
42.4043 28.5552 li
42.3896 28.7583 42.377 28.9624 42.3672 29.1665 cv
1 /0 get_csd
sepcs
1 sep
f
42.6182 34.0962 mo
45.5498 32.1704 li
45.5332 31.9551 45.5195 31.7393 45.5088 31.522 cv
42.5313 33.4775 li
42.5576 33.6846 42.5859 33.8896 42.6182 34.0962 cv
1 /0 get_csd
sepcs
1 sep
f
43.8682 38.9194 mo
46.248 36.2988 li
46.1885 36.0801 46.1367 35.8594 46.084 35.6392 cv
43.6543 38.3149 li
43.7236 38.5171 43.7939 38.7188 43.8682 38.9194 cv
1 /0 get_csd
sepcs
1 sep
f
46.1074 43.5283 mo
47.79 40.3271 li
47.6855 40.1182 47.5801 39.9102 47.4824 39.6978 cv
45.7676 42.96 li
45.8779 43.1504 45.9912 43.3408 46.1074 43.5283 cv
1 /0 get_csd
sepcs
1 sep
f
48.9746 47.3701 mo
49.874 43.6592 li
49.7256 43.4639 49.5791 43.2656 49.4375 43.0654 cv
48.5195 46.8516 li
48.6689 47.0264 48.8213 47.1982 48.9746 47.3701 cv
1 /0 get_csd
sepcs
1 sep
f
76.3643 14.0728 mo
76.4414 14.124 76.5186 14.1758 76.5938 14.2266 cv
76.6641 14.1963 76.7314 14.1641 76.8018 14.1382 cv
76.8848 14.1069 76.9658 14.0811 77.0469 14.0542 cv
76.873 13.9404 76.709 13.8115 76.5547 13.6753 cv
76.5 13.8047 76.4355 13.9365 76.3643 14.0728 cv
1 /0 get_csd
sepcs
1 sep
f
.0244141 68.0967 mo
.0244141 67.9141 li
1.64551 67.9141 li
2.79102 71.9092 li
2.80762 71.9092 li
4.00195 67.9141 li
5.62012 67.9141 li
5.62012 68.0967 li
5.00195 68.0967 li
5.00195 73.1572 li
5.62012 73.1572 li
5.62012 73.3408 li
3.58789 73.3408 li
3.58789 73.1572 li
4.21387 73.1572 li
4.21387 68.1963 li
4.19727 68.1963 li
2.62012 73.3408 li
2.40918 73.3408 li
.889648 68.1963 li
.873047 68.1963 li
.873047 73.1572 li
1.48242 73.1572 li
1.48242 73.3408 li
.0244141 73.3408 li
.0244141 73.1572 li
.633789 73.1572 li
.633789 68.0967 li
.0244141 68.0967 li
1 /0 get_csd
sepcs
1 sep
f
8.8457 71.1416 mo
9.55957 68.9404 li
9.57617 68.9404 li
10.2422 71.1416 li
8.8457 71.1416 li
cp
8.89453 73.3408 mo
8.89453 73.1572 li
8.19629 73.1572 li
8.77246 71.3672 li
10.3232 71.3672 li
10.8838 73.1572 li
10.2256 73.1572 li
10.2256 73.3408 li
12.2725 73.3408 li
12.2725 73.1572 li
11.7031 73.1572 li
10.0303 67.8438 li
9.71484 67.8438 li
7.95215 73.1572 li
7.31055 73.1572 li
7.31055 73.3408 li
8.89453 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
15.5244 73.3408 mo
13.8486 73.3408 li
13.8486 73.1572 li
14.5322 73.1572 li
15.9629 70.7734 li
14.418 68.0967 li
13.8486 68.0967 li
13.8486 67.9141 li
15.9473 67.9141 li
15.9473 68.0967 li
15.3447 68.0967 li
16.4922 70.0088 li
17.6475 68.0967 li
16.9795 68.0967 li
16.9795 67.9141 li
18.5908 67.9141 li
18.5908 68.0967 li
17.9404 68.0967 li
16.6465 70.2451 li
18.3467 73.1572 li
18.8916 73.1572 li
18.8916 73.3408 li
16.7852 73.3408 li
16.7852 73.1572 li
17.4355 73.1572 li
16.1182 70.9678 li
14.8164 73.1572 li
15.5244 73.1572 li
15.5244 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
20.5947 71.8594 mo
20.5947 71.3115 li
22.582 71.3115 li
22.582 71.8594 li
20.5947 71.8594 li
1 /0 get_csd
sepcs
1 sep
f
25.7559 68.0967 mo
25.9834 68.0967 li
27.082 68.0967 27.6025 68.1865 27.6025 69.3232 cv
27.6025 70.2246 27.3584 70.7041 26.0322 70.7041 cv
25.7559 70.7041 li
25.7559 68.0967 li
cp
24.3252 68.0967 mo
24.9668 68.0967 li
24.9668 73.1572 li
24.2686 73.1572 li
24.2686 73.3408 li
26.4795 73.3408 li
26.4795 73.1572 li
25.7559 73.1572 li
25.7559 70.8877 li
26.1455 70.8877 li
27.8535 70.8877 28.4619 70.0225 28.4619 69.3564 cv
28.4619 68.6406 27.9912 67.9141 26.4873 67.9141 cv
24.3252 67.9141 li
24.3252 68.0967 li
1 /0 get_csd
sepcs
1 sep
f
30.0049 73.3408 mo
30.0049 73.1572 li
30.6719 73.1572 li
30.6719 68.0967 li
30.0049 68.0967 li
30.0049 67.9141 li
32.208 67.9141 li
32.208 68.0967 li
31.46 68.0967 li
31.46 73.1572 li
32.915 73.1572 li
33.5811 73.1572 33.8984 72.3438 33.9961 71.8223 cv
34.1504 71.8223 li
34.0605 73.3408 li
30.0049 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
37.0791 71.1416 mo
37.7939 68.9404 li
37.8096 68.9404 li
38.4756 71.1416 li
37.0791 71.1416 li
cp
37.1279 73.3408 mo
37.1279 73.1572 li
36.4297 73.1572 li
37.0059 71.3672 li
38.5566 71.3672 li
39.1172 73.1572 li
38.459 73.1572 li
38.459 73.3408 li
40.5059 73.3408 li
40.5059 73.1572 li
39.9375 73.1572 li
38.2646 67.8438 li
37.9482 67.8438 li
36.1865 73.1572 li
35.5449 73.1572 li
35.5449 73.3408 li
37.1279 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
42.8564 68.0967 mo
42.2217 68.0967 li
42.2217 67.9141 li
43.8027 67.9141 li
46.1094 71.8438 li
46.126 71.8438 li
46.126 68.0967 li
45.4922 68.0967 li
45.4922 67.9141 li
46.9912 67.9141 li
46.9912 68.0967 li
46.3652 68.0967 li
46.3652 73.4531 li
46.1582 73.4531 li
43.1123 68.2656 li
43.0957 68.2656 li
43.0957 73.1572 li
43.7217 73.1572 li
43.7217 73.3408 li
42.2217 73.3408 li
42.2217 73.1572 li
42.8564 73.1572 li
42.8564 68.0967 li
1 /0 get_csd
sepcs
1 sep
f
52.8027 69.3516 mo
52.6201 69.3623 li
52.4492 68.5928 52.0264 67.9844 51.1729 67.9844 cv
50.6523 67.9844 50.2539 68.3408 50.0908 68.6406 cv
49.7734 69.2334 49.7578 70.3838 49.7578 70.8291 cv
49.7578 72.2217 49.9287 73.2275 51.2129 73.2275 cv
52.002 73.2275 52.498 72.5713 52.7197 71.8604 cv
52.915 71.8604 li
52.915 73.3389 li
52.6953 73.3389 li
52.4668 73 li
52.083 73.3232 51.6426 73.4531 51.1855 73.4531 cv
49.6768 73.4531 48.8301 72.1504 48.8301 70.5938 cv
48.8301 68.9971 50.0684 67.8018 51.2188 67.8018 cv
51.708 67.8018 52.0264 67.9521 52.418 68.2275 cv
52.6836 67.9697 li
52.8027 67.9844 li
52.8027 69.3516 li
1 /0 get_csd
sepcs
1 sep
f
57.8711 68.0967 mo
57.8711 67.9141 li
59.4893 67.9141 li
59.4893 68.0967 li
58.8877 68.0967 li
57.0068 70.127 li
59.4814 73.1572 li
59.8633 73.1572 li
59.8633 73.3408 li
57.7979 73.3408 li
57.7979 73.1572 li
58.4482 73.1572 li
56.3867 70.5146 li
56.3623 70.4746 56.3945 70.4346 56.4521 70.3779 cv
58.6025 68.0967 li
57.8711 68.0967 li
cp
56.9326 73.3408 mo
54.8906 73.3408 li
54.8906 73.1572 li
55.5166 73.1572 li
55.5166 68.0967 li
54.8906 68.0967 li
54.8906 67.9141 li
56.9326 67.9141 li
56.9326 68.0967 li
56.3047 68.0967 li
56.3047 73.1572 li
56.9326 73.1572 li
56.9326 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
63.4619 71.8594 mo
63.4619 71.3115 li
61.4746 71.3115 li
61.4746 71.8594 li
63.4619 71.8594 li
1 /0 get_csd
sepcs
1 sep
f
69.3691 67.9717 mo
69.4961 67.9766 li
69.4961 69.3643 li
69.3125 69.3662 li
69.1494 68.5615 68.5654 67.9844 67.6572 67.9844 cv
67.1357 67.9844 66.7363 68.333 66.5742 68.6318 cv
66.2559 69.2236 66.2393 70.3818 66.2393 70.8271 cv
66.2393 72.2217 66.4102 73.2695 67.6982 73.2695 cv
68.8145 73.2695 68.8721 72.5225 68.8477 71.6064 cv
68.0576 71.6064 li
68.0576 71.4102 li
70.2598 71.4102 li
70.2598 71.6064 li
69.7646 71.6064 li
69.707 72.5059 69.3184 73.4531 67.666 73.4531 cv
66.1582 73.4531 65.3115 72.1494 65.3115 70.5928 cv
65.3115 68.9893 66.5498 67.8018 67.6982 67.8018 cv
68.2686 67.8018 68.7344 67.9688 69.084 68.2842 cv
69.3691 67.9717 li
1 /0 get_csd
sepcs
1 sep
f
71.7383 73.3408 mo
71.7383 73.1572 li
72.4531 73.1572 li
72.4531 68.0967 li
71.7383 68.0967 li
71.7383 67.9141 li
75.8613 67.9141 li
75.8613 69.2344 li
75.6816 69.2344 li
75.5449 68.2666 75.043 68.0967 74.3027 68.0967 cv
73.2422 68.0967 li
73.2422 70.4365 li
74.0664 70.4365 74.3271 70.4287 74.4414 69.5674 cv
74.6211 69.5674 li
74.6211 71.6221 li
74.4414 71.6221 li
74.3926 70.748 74.0488 70.6416 73.2422 70.6338 cv
73.2422 73.1572 li
74.2285 73.1572 li
75.3018 73.1572 75.6582 73.0264 75.8711 71.8174 cv
76.082 71.8174 li
75.9766 73.3408 li
71.7383 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
78.0273 73.3682 mo
77.9141 73.3682 li
77.9141 71.9619 li
78.0674 71.9619 li
78.2871 72.7002 78.8477 73.2695 79.6309 73.2695 cv
80.332 73.2695 81.001 72.8076 81.001 72.0938 cv
81.001 71.6162 80.8867 71.3975 80.2598 71.1455 cv
79.957 71.0322 78.6934 70.6191 78.5713 70.5381 cv
78.0996 70.2451 77.9141 69.751 77.9141 69.2979 cv
77.9141 68.9648 78.0117 68.6807 78.2461 68.373 cv
78.4902 68.0576 78.8887 67.8018 79.5088 67.8018 cv
79.8838 67.8018 80.4141 68.0332 80.5723 68.1533 cv
80.8828 67.915 li
80.999 67.9268 li
80.999 69.1865 li
80.832 69.1865 li
80.6543 68.5127 80.1748 67.9844 79.4521 67.9844 cv
78.8975 67.9844 78.2949 68.3662 78.2949 68.9756 cv
78.2949 70.3252 81.3809 69.4561 81.3809 71.6572 cv
81.3809 72.7666 80.6836 73.4531 79.6191 73.4531 cv
79.1641 73.4531 78.709 73.333 78.376 73.002 cv
78.0273 73.3682 li
1 /0 get_csd
sepcs
1 sep
f
83.0273 73.3408 mo
83.0273 73.1572 li
83.7422 73.1572 li
83.7422 68.0967 li
83.0273 68.0967 li
83.0273 67.9141 li
87.1504 67.9141 li
87.1504 69.2344 li
86.9707 69.2344 li
86.832 68.2666 86.332 68.0967 85.5918 68.0967 cv
84.5293 68.0967 li
84.5293 70.4365 li
85.3535 70.4365 85.6152 70.4287 85.7305 69.5674 cv
85.9102 69.5674 li
85.9102 71.6221 li
85.7305 71.6221 li
85.6816 70.748 85.3379 70.6416 84.5293 70.6338 cv
84.5293 73.1572 li
85.5176 73.1572 li
86.5898 73.1572 86.9453 73.0264 87.1592 71.8174 cv
87.3711 71.8174 li
87.2646 73.3408 li
83.0273 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
89.1719 73.3408 mo
89.1719 73.1572 li
89.8379 73.1572 li
89.8379 68.0967 li
89.1719 68.0967 li
89.1719 67.9141 li
91.373 67.9141 li
91.373 68.0967 li
90.625 68.0967 li
90.625 73.1572 li
92.0801 73.1572 li
92.7461 73.1572 93.0645 72.3438 93.1621 71.8223 cv
93.3145 71.8223 li
93.2266 73.3408 li
89.1719 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
94.8184 73.3408 mo
94.8184 73.1572 li
95.4863 73.1572 li
95.4863 68.0967 li
94.8184 68.0967 li
94.8184 67.9141 li
97.0215 67.9141 li
97.0215 68.0967 li
96.2734 68.0967 li
96.2734 73.1572 li
97.7285 73.1572 li
98.3945 73.1572 98.7109 72.3438 98.8105 71.8223 cv
98.9629 71.8223 li
98.875 73.3408 li
94.8184 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
100.613 73.3682 mo
100.5 73.3682 li
100.5 71.9619 li
100.652 71.9619 li
100.873 72.7002 101.434 73.2695 102.217 73.2695 cv
102.918 73.2695 103.586 72.8076 103.586 72.0938 cv
103.586 71.6162 103.473 71.3975 102.844 71.1455 cv
102.543 71.0322 101.279 70.6191 101.156 70.5381 cv
100.686 70.2451 100.5 69.751 100.5 69.2979 cv
100.5 68.9648 100.598 68.6807 100.83 68.373 cv
101.076 68.0576 101.475 67.8018 102.094 67.8018 cv
102.469 67.8018 103 68.0332 103.158 68.1533 cv
103.469 67.915 li
103.584 67.9268 li
103.584 69.1865 li
103.418 69.1865 li
103.24 68.5127 102.76 67.9844 102.037 67.9844 cv
101.482 67.9844 100.881 68.3662 100.881 68.9756 cv
100.881 70.3252 103.967 69.4561 103.967 71.6572 cv
103.967 72.7666 103.27 73.4531 102.205 73.4531 cv
101.75 73.4531 101.295 73.333 100.961 73.002 cv
100.613 73.3682 li
1 /0 get_csd
sepcs
1 sep
f
109.709 69.3516 mo
109.525 69.3623 li
109.355 68.5928 108.932 67.9844 108.078 67.9844 cv
107.559 67.9844 107.16 68.3408 106.998 68.6406 cv
106.68 69.2334 106.664 70.3838 106.664 70.8291 cv
106.664 72.2217 106.836 73.2275 108.119 73.2275 cv
108.908 73.2275 109.404 72.5713 109.625 71.8604 cv
109.82 71.8604 li
109.82 73.3389 li
109.602 73.3389 li
109.373 73 li
108.99 73.3232 108.549 73.4531 108.092 73.4531 cv
106.584 73.4531 105.736 72.1504 105.736 70.5938 cv
105.736 68.9971 106.975 67.8018 108.125 67.8018 cv
108.615 67.8018 108.932 67.9521 109.324 68.2275 cv
109.59 67.9697 li
109.709 67.9844 li
109.709 69.3516 li
1 /0 get_csd
sepcs
1 sep
f
115.566 70.4238 mo
115.566 68.0967 li
114.932 68.0967 li
114.932 67.9141 li
116.988 67.9141 li
116.988 68.0967 li
116.354 68.0967 li
116.354 73.1572 li
116.988 73.1572 li
116.988 73.3408 li
114.932 73.3408 li
114.932 73.1572 li
115.566 73.1572 li
115.566 70.6611 li
113.225 70.6611 li
113.225 73.1572 li
113.859 73.1572 li
113.859 73.3408 li
111.803 73.3408 li
111.803 73.1572 li
112.438 73.1572 li
112.438 68.0967 li
111.803 68.0967 li
111.803 67.9141 li
113.859 67.9141 li
113.859 68.0967 li
113.225 68.0967 li
113.225 70.4238 li
115.566 70.4238 li
1 /0 get_csd
sepcs
1 sep
f
120.178 71.1416 mo
120.895 68.9404 li
120.91 68.9404 li
121.576 71.1416 li
120.178 71.1416 li
cp
120.229 73.3408 mo
120.229 73.1572 li
119.529 73.1572 li
120.105 71.3672 li
121.656 71.3672 li
122.217 73.1572 li
121.561 73.1572 li
121.561 73.3408 li
123.605 73.3408 li
123.605 73.1572 li
123.037 73.1572 li
121.363 67.8438 li
121.049 67.8438 li
119.287 73.1572 li
118.645 73.1572 li
118.645 73.3408 li
120.229 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
125.313 73.3408 mo
125.313 73.1572 li
125.971 73.1572 li
125.971 68.0967 li
125.313 68.0967 li
125.313 67.9141 li
129.277 67.9141 li
129.344 69.3506 li
129.197 69.3506 li
128.945 68.3662 128.807 68.0967 127.789 68.0967 cv
126.758 68.0967 li
126.758 70.4648 li
127.48 70.457 127.807 70.4326 127.887 69.6182 cv
128.07 69.6182 li
128.07 71.6162 li
127.895 71.6162 li
127.838 70.7842 127.514 70.6631 126.758 70.6631 cv
126.758 73.1572 li
127.457 73.1572 li
127.457 73.3408 li
125.313 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
131.846 73.3408 mo
131.846 73.1572 li
132.521 73.1572 li
132.521 68.0967 li
131.969 68.0967 li
131.197 68.0967 131.115 68.6748 130.961 69.4805 cv
130.748 69.4805 li
130.838 67.9141 li
135.029 67.9141 li
135.086 69.4805 li
134.875 69.4805 li
134.785 68.708 134.516 68.0967 133.668 68.0967 cv
133.311 68.0967 li
133.311 73.1572 li
133.986 73.1572 li
133.986 73.3408 li
131.846 73.3408 li
1 /0 get_csd
sepcs
1 sep
f
.3 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
0 65.0146 mo
135.184 65.0146 li
1 /0 get_csd
sepcs
1 sep
s
%ADOBeginClientInjection: EndPageContent "AI10"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI10"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI10"
%ADOEndClientInjection: PageTrailer Start "AI10"
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%ADOBeginClientInjection: PageTrailer End "AI10"
%ADOEndClientInjection: PageTrailer End "AI10"
%%Trailer
%ADOBeginClientInjection: DocumentTrailer Start "AI10"
%ADOEndClientInjection: DocumentTrailer Start "AI10"
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%ADOBeginClientInjection: DocumentTrailer End "AI10"
%ADOEndClientInjection: DocumentTrailer End "AI10"
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 10.0
%%For: (Max-Planck-Institut fuer Informatik) (MPI)
%%Title: (minerva-MPG-small.eps)
%%CreationDate: 7/14/2005 9:36 AM
%AI9_DataStream
%Gb"-6>E9dpOs]rVJH$d"$L"'%-Go6>KuF+=@J9=G];ncnd^6Gq:f(*W)XWVc6+>R>?bc<fbrm7G-:s'%1Co`oMEI2R4T&Z+G;K9L
%YAV,Rn_MgS]_gaV\,Yp#Y@?j"WRn1Mo2VsPfk8(reURGXGH\bG2S/>2`\"Au8;!A/ld7N&ZX&@?n@e^;?iBcnot);pqq\`b?@W"R
%h7%=:rU0Pidr0.'^AQsKRl@Mm^A[Ke=$Ks?l]$J[&)?7?hgb=>f>#&ZIk1Hchn=@-j4CJaqrXq\YJ:)6\+KRdq)@[Or8I8!5Q!c6
%qu52K@=@V#O5L!,m9>#+e_g;ujraWf2ui[4.`MCrB_K'Q]3SV<qJ*XrY4L4*rKSkWmEug%WUMk1q3um0m8r1ps-fhUh1'qQm_<ek
%S%l-^REo7?l)X9eqVdo^hpEQ\I.[=GrUT7QotPqJj-q-$Q<1C-rUYfZ]g<P8gXU6A"N^?8X\(5Rr$O%FLT>l0[]BS!cgu\elr,nB
%?D-g<?"J<3Dh!+pf0j=V\#Wctf29;/mNBpK2`siOcTf*lqklA[rU=!0A$kQBQ/b@6?iFn:C"oIe-s+_ng9)>;>OGL@5B5iY:Z&ha
%o<5@se*F3OIf5f]c-:GsI/_Cj+QNgA?#RF-X&-t3fLjNq^\dQGlgK<&m[G:4(N05$a?KO>[pQn!@kd?7iQYH>R!"8\s4ZJ)^A@8Y
%YC@\5s7X]ufS3a?&]3l&rpe%<0>IAXfAA/5q9>O<^\apI^Yg8jgonj9$*R:<$F06(6'Da`hEf?>oPM7+g*\qsf<&OH6,+`,rloZE
%r:-8#^UEeJlq2d&m8nd`rS?pK^\Zp@cU5A1EEnd#B\/G*p]m5fI?/hK^ah8$hr2r[h07b(4jQfsYKQrjrmuSo1[L/tP8<P@+'u_2
%KD+<\f6?,d`HL3"rp'27]oZ"1RrA>*^RZJAGP'0&s.o6t^`WRG>Pc2qmkBo;TD^#5Y$Bes>?h$]G@,ds%D@;;n(iKjmb>3m](@)[
%e#V6,T7-DdcT_6`T7%JmrOI4"1Cd2F4Y>%Oj8],._c,F`jO6JS+4BS6LZeH=*M;_-s#g0pHh!]jrk6Y6qG<5sg[3t13BZ?oo\J!g
%iD7s55<Qu)*5B8W7@m+IOb\8$hjL(3:ZP"^$-2]<@%?/WYchp>"[Db)F%=P.5<&KKIQBWOT1Vo&L&WcnhON[TnIt^/*nb!?dK;Wc
%ppoSNNh9O*DYP+Id-@Eu)F&@i$9dqmq2,"LBk4dcrk.1PStA),cT[8rqV:9jq!%E-IO[R9*t2MfQQJL^/ER%!0>\+6gDB_AdrWRU
%HI@g$BqC]tS/"0j^jG@o0jJ^Dii6DG*qNDpS+pA.6-E"_OV`sYn_o!30CJYH>Fo&JDWhu1FF"igogN;B8[Q:#r-&**?bF.g]>)%o
%\KCSE^>7Cf_?iQ)8.2c[4l"lNh;-oDh;""%Ib3upTi[s?#rJ1XHH"_-mHr0c\F$cm[M%"7g8$utI%XQuhq[)Dgl._O6^6c2h@r;s
%8;k*>#9)+j\/Vp;ArP,,*JKS3d?Xu?O9Z]lID>+?`SN]HdU!3-'5_ocV0\ekgc**,G2$ogBYCfS>9VKkKF!-pnY*[qp[t]Gese^8
%YH?AZ#i-/f8>$-8-ni_k\LY/NVMrqr/+i-olO=Pne!2$M<8I'n)LQ^I>3)4C\_n-@c_j$I^GES?`pY<X9mHQNR!crAC\V'N8!@EE
%`Ya!Ipa;H\*RccBeA)p?fVGlJn>A(f#du"t%`aF.4Sn-2o/JY23;N?%d2Y@m*pW7soV8%4R8ArW#4mbEO7)PO5Le^@rcs!S:+%A%
%%>Q;PSof5Jl(LI44dP3/LSl/aIX&ls\Y1'_G0fR7\N;qJVs!P:4[/5)LSMp&%So2MBmlS$7fUeiV];:SHJ7?Bo:[5qpGb8oLZeC'
%g`;u5H`0I1f4jgL@lV<k<#@U5Ku-XIVssjE4SY&2>CMAO&:MSD)^PS3de)l^'j66!6Tbp"V!q=Y+js()"4,mq3lTDc5PP)sQIAB=
%U;B6N;2\6N&VPiYi^nAE5E28[cesQ`b+6]$4e?;Y.JdGoKLN3a^`nPi3$M$2IYaC'?c:Fh)>mn51/R8!39K&1qu@%7l.;+Wc]k%C
%4Yc9Ucr0qW-bQ#F4u%E'i/+LdR1g68N9c4&KG,jW9oO)9E8Ii3,m4+k`%<H3]n8;i/T&<e:$I37>p-kGLd+0DC;d@]ENWO"S9p^k
%"-M\1gas,)/&^h2q\.j+KP7j%EVHgS&&](^EQLW(Z4PW(`'"@!i%8g24Y>(aZ'`>4BP'iD&I0A1T!u)_pU#<);IX0fKY9btCa&6&
%LlW'5h-34"HWo,.&u>["qa>hH&H?Yo#7Nra>=+L">4r16\,sb[M<'CXncOl6,`+emInM23:L!BTJls4NSOiH&,_Iq:70Xce>=,K>
%g8kMlh?$8"M'SES&kj78A=4B'k;u"k(PB^uCc_(Mb'^')T;3Di4ZGA[07hG?k*+3f4P]ET!;8W2`^e$ii&?XXnbS!Fq&]=SQl?oM
%$Y*m`be.M'I).cZ)"TLm>@SYb@CuY*d23a^,%FDWSEW^mDAbB>-r/j(?iAsW42q_pMJcG'0YN'\$'gQFHe;:iHD*C;m34'KZp[#E
%2$2A5<+ZcBkpSJ*Q0k>>oHqE3)YVTSbL:^n.nb@\-,AjSM5UgoZo7oi!G>LmI,Mnfc[Y.%>e='_nZF8XA'#=4+?t%8+e-W:GR@q,
%Q6buB;+uS$nAK\9.A"2JlKL0$J2;PiJ+*mC%=VZ`--9ck/USMN8<4<!j^?9XjGue@]&TVF_I`+il<)*W2p(`Hl;+ml2t]Uk'c@d1
%!j`)I0$V+T6oURGoN<gs2T!L0h9S-'FQ/,">Wd'LJ)VFYDj_n+[;gM&'SgB4r<UY&Wag-@.$)asV*<3hEsa0LaJb3J+eqH2.^gt<
%1:B*J3]t8rGH@4n#8Pr]`%Og^lXKW#L%U1'_(E!G45N<W9)S^?RDT4b%a2c\':DuK<L87LJf9oB7oL.L0G>>(JDW+D\RUqW5PM=d
%5Ob9MQ2a,S"<A_nS>>G"@HLLU!EDTs+X2PA&XX.:S'7%5'\VrB3Sc4U!QPsc_um?H9aqhg)-9c>#6$::$\f*6AunERL6'@@c(:Vi
%aB[2IElY9-*g=3M*DPs,ZnGS'W))t31V:"a$pF<+HYD.=1K/X<rOHG3HG:*qK&VK`F":kP'4r(^go771(]cI$'1l0>+Xo#X2*No5
%,7G*#e/U8!_"V10ST^NH0^,[ocEDTOFk;D++0sY0e$e#D^UD1ihU-O,gV3N52AK6'mbuMU]^m.kTtC%!k(gpMoaWIs6oD3j5%WQH
%VY^Kc3gco'W2O2fJj1q[cl\W%<;;%>,9fr^7O+X(@7Jb6/Ih\(K$fR`YWHE5bj'l[&[C&W)+J2#+uBW'"=*:=S1m!$>X7XN)2on)
%/:sUQMH*HaM2OcF7:]YV7Md"hpMa/OVr5&u*EV4I`CJXu(C(Om'dAEB3fB-3Np174P#`t"p</mi["*T.dXKN<>mNMMYrYH@Mig?I
%R=l5&?cC+"&F%DTa3'@')&j59Ah8meA?jN!R'84t04A-o>[UdQ[#AQZ-6dV5`G\aQ1o:&A6n^OiQSE/9D/+@=.!..5;3,EG?L?!G
%Fn_sAqJHN;SQVS!*VF*Yn4)sIAoTKZ/QC(<Zb8KBfhf7n4>NjkA@s\.P@Zd_l9[#UJTHhlk@D_,4UUkhkJ`I&)AN_/IO5fc;poDC
%PSLa3`cpO=9Mo_fK=Zks+!:n)9MmZc(ZBM@;VG*'XX`o(7?!4Q0p]%`MQpdO^=aC6c,<mf\J@PV;M,aS]3.sU@&*H(;VC0pNm6Ij
%@a/<2?I\nm`pfut!&-lNcB1i]5qVu$)?qI!KmP^5L_\s)NTNUQ&MQn7M5%3d4c9i)9c;S1Ob+\-W/_*MJl$c;.mGt/Afki(mqb6$
%;[Tmob_Gl1`qQFd^TeCM6-V3Q)?rT%'&-T-fJ#PB38`E5,:9&"7X@0.:El:onSE$KIo&5_4WEkYfRQa\E_#[&Z*Wt!fr,FfIU6u&
%`JE7P(KNY#<>jP@g&#pLC!R)5VH[QdDr#3^k@K_+rLJ;)kH5FmK`.M-DVh;oAFAL56f1,a4l/3T2pgZsBD_Y5]pegD]<q"Pgm_cb
%U*dKp:M`75eY+bm_=rJN/!7rlVCn/NN92rCk!hT=HjpRP`qjaR[nC11,d9K+_!W"^^sI/G/f8TFFB3$(X#@?Fm#D[59OJn/JSi9u
%m$P>a[l^+i=)8FAW/:\is1J+#]^NMrm_k9:4uoi\#MFgM]4rt"(C)<g4h7ic&!!_H?!4Pkilo!'mO[1TFO?Z0+*D8QneslXHc2oV
%F'Vrp&RKKm'fA1.-QH<HNAZ',Q8ijpm];U&C[]?u]<TS:[CEGs@m7,g-k<?C^(TUo\ZSURh3S(mrO42VMhuqkCTLjgE?GeVi:m.+
%M":o+gq`o57[joVRNor\_@Y]H;<A\k5RDF\0KAA?O"QGD/#j0?KO9TdHUQ7pM\TB<Sk^?m$PqtMf\c&T*EKeJ=XH]p&G8_ZrnaCf
%=J;K-$rug9Wu!R<+h=^1Bu%n=WhZ!imbMnDXd?M3BX!;HC!CH4ZV]1S@=hQi;(R%cK%`9)hC5KqVr;'@@(>eFL)IsL]>QFG\&ufr
%gE2>dTIm&_f8'Y.':5(-Mf/k:\[2:_L^3fE&+/-M/m;nIauMrMm%\IPcLU-Q&aY.Arabc6\fu0R%_@#ZSWChd/FR[6H=$SXrVq50
%@9"'I^L=,Hr_SZQ*phD[)r^Yna5WA-A*;<\>VERP*rP\$`Fp_hH-V7mgme8>JS.0epo3$0s#+MF:lc\>Dfq##WnTOS5npmXU84B<
%')9FPqsYZW1qlI?4[q[6dO9fBA,IT:g>ah,hstGC`MXg<"h;UhHiai@oNr4_s!/Z0l+\Jbr(0#<e*ocbpF#K=:'23P17uL;3P?lC
%/:R^3k4E#D1@_jZP;'iO08WDG=>TQb9J=UA.lQ[LEF4[+@Uf5Fq-t??@lc,7k*'egN;I1`B-sr7[X)Qj/'bW*\j;#pNiB(^IMt*C
%AWOs#d24gR$[3YEnY!K+QFI=^?lF+6FDo/3Bji_3&%YPF(KXIWnJ&n#-tqN+e/(%'-YDF-epXV@0/4[tmPIDmKh"XPA-C$F()Khi
%O./X,gisNdQm"'X+m?),?-Iph4!;tfI&:\<K4=the74`cj,khg=HtaI7H7D#GIU&BBRn(`R$E*Lar7ap7'=ldYH]U5plu`1Een(b
%ICL-36Meq]Nb+2\=^kNWOXuP`Ze3!g2'U8>^b/-bb_WE3>g!L4ni],#),Ik8X*QeG`M9;P$O@EsaJaN_MeSCT6F-(1G#buO&HVb+
%fk8(r_h?fo:L)sAC^!B4.C=ufJN,F`[=s0-6k/Vl=os+&id92-HMTYZQ$8C91\5f[%erF[XO(=N,=U`UF!pglD0b55IhcnO3TkBe
%KfjOn&#\:i*Ut8,Lm`,_n(gUU]Jg^^:7*lCJ-h8gb0/CFs1Ig\h7*-I@e&I6f9Th78CGK7]mfRVs7,A5hgP1cO0>2UNkf#85mkUX
%0P;*EKT&E#PB/_MoJ0\B/,2Ip?4?crKZkK#o'c&;-o`<@-[Ib0hl70V<Jr6F@ADKZ,Hi0KkqBD'K'>"[?K+sE>Jr<1_H$]^]Y"g&
%Nl'Js8,.mr7b"*2s7Lu"`WFl7M.jiOT+]PC(=50OGD=*YK4iNV&k73TSlLe:4jK/Bj3OPEfuHEg`BnLZYkrCleUq@TJSE"dS*K]2
%SCOW(T5k3$:5`c*]K>b5&s),6C<OYr/g$qrI>BBLJL]S1?K3:-g3N'LiQin=OcbHG4GG]m_WR9XGk,[=+(OtSS:)9A]bu_mK>WOi
%.6/J\R!uoM5n*<lSj"$i5LQSulH_mDonRcL/tCBH<kcVP^[pY>IlsO?eAH@g:R@7>%OS?Ll0=X(\2W7bP7[I[Medq)lM\2)s)Ul/
%<,;)&CaGd2\E&m67S$7[E*9K)=(.@]5G59;EEd61.HU\/X7s\BgCgF/NXDHWC29>=?'#0$b&KYPK9$`-IeW]"YM]<E\+Do+Dp,%G
%*j'/]I>sXp2Ka0tc6G@*Mt8@f0r3i$#B;bYFpRa@*]ug5_:p!B`KA5:h67m0rIN]b&PkoVQ([fCd4nQ9m.:I`StP<Q3][`E5+pF.
%7"X@B"13+cY-,X*pLj$plodS/;8=:DW9;474tI1:eESp95+5;nc;T'sd->pV%sc._aZMb5(#D^hArdH=O8R4MhFBrZr4]0p0;%!.
%S"CsA01Oj&n%:nj%]!YB4*i)DqiNGtMa*d>)\2J0F1g'%*SUuRHs4>]ke+]`&)]g.W6=Y_#EaGeo440H.X&L<Fs#T@j]R(ba*W2p
%paJG9Rm4s!rfg^efk3OiZMp(oS^b!<@9J(PD*%lCI\:9N.D%Vq_k1@?J'+ohSEhCNl[SF)cc:N!oXl5@dO0D@i]Vb5Zh]0SeIQ]p
%aW<>eZa]1_5/4VJ;sH+1G_5n"k@aI48ci<@lLE!R+'\4*niQpGnY`#Gn`Eubn?\%WH9qknAYQ%0AfrlQD3FY%b=[,dlfFXnIG+,N
%"t0->R4l>WLtA0`]shCAH%!cBG0VC]bIA>X/EU'm=-\%G30it^iDST2e+7A1$+u*T'5\@A'DN3M;WdV1cH-ptb_r2B('kF[%]'"-
%gntbI!T//g4@bP?i--0bBjPK<!&tD^bH:=NE#)(aOG!Z('1j"uA-([6_F)+)LjqPa9_l^\nI?fO,Y\r^+^X\jpd?AK;$h;](gA&+
%?a-tSIc??4>a/klW-i)([N5>edtdccm9X@>Q)6^5kl$[Tad4ViC2D2n_dbYC[bEF*BiXr+Cd7s77dPAIN[=qR-l./:4ZNq2<A^Sc
%kE8#E44'CVo'uUR`63JSc89PslX)F.5A_N'_u[EJjCpEl,u_p2=*LO)bM#lSlQ8X'M&T3AS")Z)9_ZHK=fQ-7r5pgnW(Wj%*uq0T
%@6qKN55VmqQ]D:6dQ0#>n&GG'(WRYC9jQtpe:fc"+gS0g:PfIF[VuY4^Qc%.-7ghhdU$/#_EL6ajqK(*_rNUDC[=FM+-^cnc:G`5
%:Lj[RpJ]H:%%E:t4gGThkMZ.Ls*d'`HXG=f=QAXD7?eV0j>R#6-uV75Q^fq)0s1gklZ9/XZ?JFe>\q$"nnKi@8h_&$>`3L1Y;LO,
%4Emko\'g%qD.6:P%TI+[^>7IBAn%h84DcQh7/PA<Y*6>m?Y<Td[&LuLbC-SId`1'jpqXKhY(eDa9t+dGFtCG.+I:55Fs`"[1\+\g
%$,0jF,u1G86G26_37Mu:e7O!hFhBK#S;k#DNiRB_7*nM5qrB=L[RN"]W9$L5nughg[0G"!6q$6iBd5#Nm#[ls)b6TS(3ZF)63Y@!
%GcT6FRHP]jhE=fMc7*L^BUr!]coFo_6ok^8>:H(8I33=PH2Mq[H[P[ZQQgN9`;9,BU\Z8Tmf,[Z^sbOJs(h$E\5M.3`pUCj4h&&d
%DYMrT*n&,QjDZ[nol(Jcp;K;WiUIfh`$$]jEB[t.eD8Ssc[K@$6Ts/Lc0i-u4^+At<pH#>cX*pI+W]k28'bMInSu_&c]4U1AE-$\
%fnW)D*i4Pu[XXL8BA3;k.l9E'6bGXj#Of"9^41@(rUiXTA+(6"lS5:4`Q@[3,@79Jk-:#=McG."'d)bXokg/bdfEfGD/a6GC];;Q
%]<6W95A0`g"\nX:nUA9["OQPDlsm9RH2L22q_:9]e=b.Ao#1Y2o22R(W\]]'#0b?VchahTpqbdL7C5;P,)n5/mKL`/*%&+'gndVa
%9<:!PROW2L44c%=HeL,!pF!H3Z-GWu]&rPD':,$DVs<+N::QR-BI:O/DAJo41qp9%>TPCZ*bmrHW;LnAo6?3bSlHed7]6h<NNAHE
%R3QM$gUWX2q4Y,Ps6YlFd7\TSs.U.]VsX"`G1HmhE:V8ge/1E\Pki8h56&u)X8$HKra4.D03e36k].I*\D<Eg3L9&WX9PBPP17Ko
%0&3auD:o0gc9`TL;BB#GKs5AFk]*S,b>PF\bBd9!O1S>YQH#MXFt1s]\Oami)s93731kW-=ui4ZES`loj#e#eO]\kU;3q*CNUpiB
%>YBVf/=[^&\LRu,Zu@(2a,/5,+YR+n=`AY#-QAVo/0?O>F=F)%NBTDVs-Hq?NocMjTq'P7;Mhb-l>^05l.0qCmrkOmX?<25.CM4b
%d&0+(D5COc]!^JEU#_A#C.pgV?IJC;H:,Q?5FMkdPk:P"<84F`3-.(QPIZodp@<G)U5#1+H.#8+pHCb&KfY"Q?ID%j5OYdgIsM@o
%ppBJ\Gfn6!9QpBp@sWHN!meTAa.jUr:VU%Y=RM=(T@\-5a7o:MaM,.^55+".io$(t3t="@_nF5/Hg0N<?ed-Mmk.nIZ@tjcT1Z9]
%=],G#kC8LknV#5M.hEfkX+4/h=f-FKU2Z_JSaN4rZ)gjBPUSdqU+i45gtQn/?gWk<e"_o,F0"Ttf373aXYkROeDH9(%[t;h4*"FL
%Kjj,Nl>Q:X(XipZqR`39g1jd)-i"CD^;(ToI'6k[8\Wi$.BFWi?%&X5]LkBW`qdFL4o),_>e"qdr/r_bh2?bh#Q"-rM@]1p^,6tE
%>juoB,V:s0dc>b#pYq85Y%F(aR>sW6gHIT@Kc=g21<4t3%[Vp>2;E?NhR4MoOn/=Ks7YWZ^AB#Pn`i?RroUu6glRkCJoU6PG0407
%n%\/EX7!YQjA5@4G>rF2QCRm?R$.KsW;HI9n%O,FqWk1H.d/>^GqVG_MS=R/huEN999AhDc0*EF^4VWQ&!b=#ESKZ#mg.rlhu":Z
%2Eh/jQVVX1C^)C!=085I"n$F0_iN+tI_.W6TDr3Zo7,3'ruZjlq'obM_puO"fBqj=DYMJlZh_>#IqVVZ0CeSZr>rJja3FVRN][/u
%1+c7k%$F%>8mM/gi-H88$@K(&o?UcLHJ.&N?M5NErO6FlWI#LZQV:.8/'LZ`,4K9f&X>EZ"stRPj-ku5F'TLNhuP-eMc-]ZJL3n2
%Sj'U(*soj^eJJ'>&iRa07W"61Q-qP3elVf2,m'rk9a\\dT^gTXFiRdRl\JNi:4q?e'n&cd2;DX[84p`8l9K9_DoKIg+:".s5U+]X
%C@m5pY38<Z:^?q[f54b])JQTtoP4SQ;j0J1br#/ln;=@-\nQsj@F.La<;?Tan5[%_j1=IuUSgZd]T@GT3RTGsBfl0GEK-V>K$gQ7
%ga@8pa;/D,9WajH+@SoC7'P'Q%;F.sS??nH:..b=)k@`h(YTFPL@%$];"YcqAjHM/6+37H6Z9j):?pM4:=l.,=!:ki2Nkg%O%@&7
%2eH]eDP;X0B;05HF!E`5nX5K7qXfWCU8(RA&&4o0T4n9f*I7``7slY+/*M0ia_J15JMo2i=fK;rd57<hB_W2`>TbJWQJE@.0W4S`
%(&Bf8b(.l]g&l^MdW]B$""Am#\bG0SaVtt:s(MFhb40-hBrC`r'E(Y#8,Y.?&oAq3)G_O'VBtRe$2>?SlF9AiDAK-/n`UG0&ubm3
%b-g:*)STF7Q4<q<6>Hp*3fNC9A]$A-&m@13-@HB60tJ"G`,q7G/SuMQE?tPFh^M!k^f-poe'l;U^`DHV/5\=M7n3j7>*5AP>sZeB
%[\&k+nDPWDfPOMq*Iuo&<(<=tTL24TUd:n1<h`:?BRI5p`CB=4+V050fK_Kspa+m26.I7W9^Fat:2o3,rZ5NP3$NrbnX>h&UN:,$
%<tMIM^[=\u5W20J^VZ.$%2j2bBcoC@#?l64"HF7paRApCGU?;k9Z6H%/0Qbm&8N:f9UUQ)dHXfeN!NC>'eN>&e,lare&+G+&N>O/
%Umjcf)!DOO9otJadl10I,+SpAGlGoScU<ShiZ4"?&G`4^6ce1ThaN`g\G)74+am%dl"_1XUFs6')H%kJcltqKWrngBJY'K)&aFsI
%7]m\a]@d97-6X\-^N#e`7Rt)AD0u,%-/o3_L@(tg.=I/Jk!X!o/apG_YXV8Xo2(0/b:#>F]8`;ol#:'7q@,f++sGT?hG5II&]D,>
%=Fu5Jaf%t0f,+DjaC$Qp.q>2<'#`aEf*.dW5JXBF[h"*.)bk&d]QXC+dmuR&.:I(gcSk4ll3[T]6(Hs>MTms*2pgiNh#%=LreQA#
%)/C@8J<mEK$.@2O">I`V-BdjDU*)"Z,`IUUEWi'\3(^$88H>XD.DhB%j;"R3ItL^.@L:PF&1Zic"0ea94^g6=^`8_01&o)eJ1%`$
%)bqUeDK7Vgd@.WdLoi@+<1Zs!C-WjG-j@3=W_KF+gIeg'/]]3TTMZXs#\r<!OBeK++7p7GO1[=AbGm4S-l>F'bEn(>`gD-qIB/<l
%Bp1!Q%9PJu#O)MIh"X]XE(p)U&4/hf9Z7VV+!G>"D-I0",0C@\9rEgP*LA2eeVfPL;I[$#7'NX$-3DiO(77sqi5eADC@e7Ta!O4P
%8;<Wu&V#Gh'82Y8mTX7K[*5)?m1tP>dpTF1oGO3JTtEQ':oH_AJ<!LHhK1*sKR?jh%X1MB65F.n`6ha"3FcM)!gIELl%FR!oEl2*
%a<?S\AE>luB<d7[M]925OVMIf)]`*#7Ee/<_>'bH#":p7cu@'*1c"t=]TQ5@I,slo$oJ%DjZBiW[$PG/D2#>%&e6,oLRi,B<?^Xn
%BNZ!ZL8N]n^tN?NS[]?I6mmgQ_,?LlBFqFq-7/@+jqe>gNIZ^X7jJM@cXR)W:dLqA%OoIeO@%]]mZS"(-&XIH\r`RO,R?d?n(EZ\
%(5QFQ!3(i$9:_.g)),+N:C3S.r-K0)j@_HIK=Q?'UL.]Hj2Reu1P8$$#;huXKP5W/%NVSmnjs<J+&I#0*0F1hS4Y2'U)?.-aKWMl
%#]YD8#r<_C5[S!'8ZS='ih7$Un"bQ=]Em!RN!QBqda73d5592Z,`gF4"(@uMPKaBE21R6(ctJh7&csgA+2mT:0QW=Zq2PJ!gD(c8
%brC\Fr@8dK9,CI;T&66(!gn,0R[aj'RV<`FgH`fC\Vi+"MZH5VkigK]A=QA?%pVA$[dQ$_B!`3h\;a1N#kJ%S0-[lM+"B_5G:KTC
%bi=Q2!lpZ]6jRS\k<N7-8r/Q>7Wh+Y*J99]$:NAfQAu4c:)BH<k&ffD3YTL6+$@_9kIZ9'1Mu)l;&H4+W]tZ-_[s,m63%/a(jL%7
%$e!Rf4?;5l"^q$mLS1=Adk,YNjc<1EiDJs9rK5G:@e#-ZMk^.^9nSg+kQC[OnH'!)OnHK5&r-e.8JFDkZLi\-!=]V*:$M3h<WSuB
%G5Dp<JC$'eBp-UToNm^)4.d<?6\`P4m7UI/^q>M;"=aH;8ZE)<*_ZtI!lVQ\di:ELJl'0H9:Ml3Qk6=-<HQ'i;MV'l(^.A-KQkfJ
%kt<UP<^9e.bWogugeIE,C/f9:]jfc/.c,E3X:g-A&mi1na!r5<C`'7QYtCB,Ggf-7eNbE+FCQ3.hS^leE3>#:bUR$ueIW'F<'oNp
%Pit30KE_6EhoV@dKS8]SV\DNFUsB(kfsEhA$0d+ZO9KLWl"!8&FSm30Ys?&r;j1gYO9e\NfZD.g$M4QK!.4r"+o20B[#JWGV^0fb
%MYp2D_;9`(66i;BQd'%TU5l;e@Ks'`ct=-61"Z[[SOMe<(\-Dmm8tS9_9%fS)qG:_=uOd=+;iIa=@4oV8:[pKi4OlE#t>Sq)m_ke
%pEifXW!Q,C1q8^&.^MGIrl1C>&;?4TXN`E'6AU&lgi&O]O45nVerfYF6ngh!"]?Pl2kgDU%oNo]JaR*s#Pk]_)+6Sh+3\sqi%Hh(
%-6+:G:mi@j+,"<iMSFu?5sf0LYtYp!qCF`_MF*-V8&GJV'!MsM%Q^^g<'sI<jQmnDe>a6!RcIIIlcE@rbaD/U+g3^oS3C$&'O3:*
%XfDc'$.oq1(\fPi%LP2;pY\rE(^#<e"[WC!Y/6'(#(<Xr@Ykc&U'tp:M^T.:(a_d;2%-kA<!*#U53=SmOTh[H($f5,WHjbn;XS[L
%=Kc23XfE!S$%3-!ED1NX_[.do_b%^2,18n%EQK]02'h"`83uUIR"CP(`$WRg(pS0dTI8*SbKA2_D]$^Z'X?]FH!hMEepQf-HO$FE
%hdA%bc;bIU)lKAAl;_6s@)S."9u.j4&'WZ1P\>Aik;*?T#&0B;b%Sd8L2^>m!ibdqgI7uP[!@b0_4l`bj!4b;%CA$IE7bXeB8qEq
%S0oV$fTGrZHI*dC6S)6Q!N$V8#FT&>OcqXs6YOCO+oSGWegT4'"_eQ=+1`F+:*UIM*!0D#H+(T:ntj/8Aq<>Uo+%Q(9TB6p<t8[6
%J@$7OCI&Qd:l0cSd#qM<%AL:uqB]B33@fT>.emTS%$O6`lcrE8D(m%FOH>"#g'Da))F;Ap"q)0:&;\g_f;(<p"s=Z)[hp+Z6(_q'
%ooJ6AJ5Im%+'WW>qdFOQBmkpsKZ^r]&?VV*i<0@W&/\!T!?kUNo6`SB7?,/TfVZ1KGp5GV9F,Hn)WcnonLC;@ieY1H9g60;JdJ-1
%SlPXn@[5WR[%g&;eIY6bRttXU+\2e3MQ)?<LfD+;%;FlKV+/oC.uc\X\l%:f1;93KVn-;joMD=KL.(uboh@BH8uQsV+Z1`#<N()n
%Jd;pb*]DrJM3"MU2Ak@d+]L[B6lC`XMl\#//-<ab5GUcEb6?K.WK0$H6[C>HL:l+Jd=`:VPXF`%:/Z3$YSENOP(/7p_Zo(=7+VoQ
%'-iKNLTQ1TQl;uN!ZGWIm8uTK:24XK*o]VqAUF*SWP2d*@=pR]$a(O[+UPFJl6-14O4!VfXHY5joU7Nnqh>_hC=+8>TPB5kL8,Mi
%4)E9:D/?'i2@tM*>ruj.3XO3A_[<<^AeS)0YRXMM9KT<uNA\=kB]uhP%LK&u8D1@;THFT[Rj*[7`6.f-+X(p#D)::8n37^-S8!`n
%<6uFV[6jqF$E>(Hf`-X]Y]<j>G/m#fkHVkq[8$%m6<S-X[6sdqLVHBe6Q1nW>.$`_Qir4-qhS&nZ@@Y;_[:C4.Yls(XTV]8_,JO/
%VlUlh9bp$;_[8E!8(S3tAP1/A*^%IqkRZ2TbI47CWZfW`=4;7c26=T=&.qnO.nFgi=%DiBFR/\I?9Am.m>H0qX/G[E7Ha(<p$KA@
%Hi:hmhnXC#s1X*;I0EoRi<XQi3V3@.Mt9tSQ65A/?$^qbT;?1?LT^)L+__#KiUc'W%9J&W9>0HEpatcer]C,F3aM^[RE-4IJ!edC
%RZPB*7Y!DtI/XP[%SZjc,^s%T2^*JoVpH>>*X%/O>r2ItWQP\.Pa')![\H43JrOtU-Xc>$^'e9/c"P\0o,bmuqH@/dKB_YT1cDS^
%<XHI[H5IMH)WIn;Hlm&e1g5dTP1*[D3kr2=Pa/YfRt(QPB9?8tcZuf)?MTBj8+MC+)NNJmN34XmoVE`$B%B8(8WYA!erMag-`Cg%
%KFr588_FYMCl!_2'?l)=)'`C2ON'kNf.f2?=U<MM1WY2FX*fS.%Ya)9f;X;kD/@$6rh:us0#MRH+E8#S,*(5rJDd[d"[J_aVHg:W
%&9&(:,r6mQ0Z/eNf?RX=#3YMV@`_BrONq$=od;>p/J,-hKr;n7X1T's'qE0OR7W'q['0X*Xn/d<7Dot#V8E:g*Sau>``8QT0lM\7
%J'a+>_[%t31gO9N^F$Jt5+uO#JbKss8J_p&mtMC0d[%/ShnsJESaWX>a+s8INEiCbT?b/8)!oU[X+C#a7lqdHO[./L/oMO$'Sh)m
%p]DY:KE[Q*:_(+0pmeJRW$@nMmVl[FG-)+$O(=+'9+.M2/PE^mOK`)Ratoffifg=R7`WoaY`R>Ah-mT$VnR#S)$>o;1GZ4AkZG(J
%mcGFAnqK.a[UGdd%$p=elRra=enu,IYd"#=-GbN5EW6^L4oJn)Ul'N,*AEKoa*T@oLIm#"Nl-I)4*66&m"1ZcK$Nsr4Xu2K(VD<G
%?=<?WG8>j)q!]O"_Gh&jlG=:sV)!UL5YPSoH&'3%ptU)Fp@Et7MVYt$Z]Nfg3Lb^+1.`J:UXV_WLpD1#<^N,hr5a/7XM"eG>M"/+
%P/[s5c'V5RFMm\#1Cq[A*c[H]YTC'>V>r.s]/_/1%I[)#K0I.97?:r"^r.Fu/r][9@X&XfdXLAkM]fI)r@F0U#"K*Gef0o6*GC8!
%NYR\n=<QpD%RqG?\'FEmh;AX8oJ-SI!EeW$IFg)!2R(*#@kE%<m5V5\J^D.g<_%bHl7s%Sp='Z$%r?$7@pL!"fLmLnD.sguoRL5"
%otq[`$0U$rqJM7GrTsl/Z$4)%JRs`iInd4kP7hf>Fm6+kh9V[L1$hTg$W+LRA*FCGD)gI)d,q^%g$4Cqe0]e,CkXYaj+4ei2PhTm
%SDj[*GHU:60,E6O0NSd\-]3mm>s4ll$bZZ,O6lKfCHFhlQ,k/rJCf%,Jg-.*Ues*?N!EP;Y3V++$'.6n(p"SRrFe]a!.6%8INK?9
%`8)V][`7_n,@kAVPO1X+#,^fWPD\U#"lPi%(AGIP4"(cH1\+,j&LcojZS9lF!>.4/&pX!t+^te2I0@NBB@r3^N=]1M),l<=C.t<W
%g&-oD(b`oQY_L#d_`2H9A)sp1bQH=FFOu.#(,+o]q5B1iMji:,mICEDX<.#7HpPHG#IQ!cd[K_m)[[AuM(0dH2]ai>eh3sJeFK8r
%:rAi%U+-<4LBeioe\)Thb!@O*m@^kXHD!Sh2*=G.e8?Z-M`?b8m,[tCpB!KNbr_Yp6H<Df-2\-e7usc5B&Ze04^Z^&M:5s^Z#&D2
%m`WI$0hi$"_5>E',J3@#p_BmAb1NEglL*S'X)Ma:f/=^gq"aiCmp:M8DfXs#s-pA73!leSL)<@hSp:_`WiH!0\G`hQ[gpb[`ON4#
%cO.fFj9U">Qt5P9d(l&^SsL:XAdLfChlc"i5Mn0/d=T2V6[K6FP7EMtNBb+`V8NVcnMtVH1!$L8OF#[4Sd_o?#059BL-P)E5aC!:
%c60`2,UTVknAkL3a0?_=m$baJYdEAMqZ6HOoF8*A7X09I^-Q(S4C8$Ehn8sKCVE>=s2E(1i5#,u34S+2ka8kEs6#Sk,*C9/k\^N@
%Fh*WM)gjAVj8T?Uc.mh]P*YXcDd3^0@;fQ/^kXZR)fPD]p=TuT#$hsM#]Ck.?d8jpAg"+j>1i#7$0$@k-[O0)024_"&4L,(m.8pV
%ijRW%S*9%3$1VR0RTU$s\26Il1P42[Kmd9s+Ki?#:@.R5&fOt[`[W(D!EKe%rS?a"O;9P<,^HKCkkip@eCNJ8YKP#aedagN`WCgA
%>6Q$O@[;!3n(Khlf\.ZN&D%s51IRU/?R7:nbc\>SXn?C_]@I0K[?g(Dg'[&ndO);9CVWkaRg^\<eAD\4o>ZJ%mTM\K>G#N;C[JoI
%CRNJNXb)QbD)/`3%Qq2.ae5tbgd@TiFD280XUSsG:G^e62W1RB9P;sX5c9o+R9a#!Sm)#%2VHma*m,Cl-FdjX>:>J,o@l.r*BZ10
%\ZAMJ!tPih,&:-7^I)Lu.H/'8.t/saS'?K9*/M-^1YC+aZ,*YTYK[Ka1ddN-BOTN:?u']OlWn/omqnuso3cFiFu/&eRWZ2"k$;a-
%*a@CGGHDm1Ci(u\[<CK-Dje_]CP?KWdi@cEmH/(QI,:p3[/j(*I4s1&#!B<%/Qj#CbhAXXD+&A&C*P@/;=@]c<0"(t'6^Juqi7dq
%3kNs,nPe?9H/H$THQ8'X9ugAjDN5]uPqU@$f@kbQei'()CBL/3gN7V@%=%;Fk-=AY@+P$.7oD-uaZMb*%IlMSEGb'k4uTjkXGqYZ
%a2U$([BWO(e?dA1f<J(RS%^lm@ZStF4<8rBeV'QYW8?W[\)7/ZrI=FQroP;0s7o8OEG:0p$9.BXrUZYRIJ2^-E-:b"Hs63$bM%[6
%(=*;Bdkqc5&XDs2"Vd*%#r!D$i%$IAI1Y>mZQH/n)9?`XgAaZ\<3=QF0B02b!0RIo&ZB?!Z0la-P$G?+Iip*dE5^8D1P1rlLDqEM
%#=)Eili8"<1eHTN&l?&\M=`<Tp>R\Pgq'l'o1469r$ftdg\:U8q_0rP*XFo6%lgjLn9/(tR?/b?*>.SDoX5?af=V+OZCSQ8f/-sd
%LUnO0^<<eM[A"B:&O!UHQmEjHY\^Y`@`qgKn7@7GP`!795&\8rj/Ve47Wb,B7=(`SH6@W2RU+N3dpFfn3,+<`@Ggu87+:Bk#6G0V
%UbGBjBUc;Cqh;/"DbZ_<lE4oJTkQl'GcoJ\;ttH4(Y[;X0X]oKS<]es\BrgCQli6rlM9DSoI`eQ>X[/%6hFs7O@LXM88Se"JYSb(
%AAltWn2Wf&V)F'n]#s!Z`juf=i(N+Ap=s)Nr5+bEbKUs#'A8D`0VgFT8-BuAA<_p]T646P,HkmIo9PAZBYFmb>"2d"!"gk+ZE3Un
%i!CiG/cP,T>9,]%.1i0\7-M)FEqSVWkU^s-7gGfsUXM5K'/QENlt(s:oAG#qlk:&:cTaPnqtq6CYg5Ns!W2dn'<lU$('5i[!*ldW
%!!7:4Q,#D>/+pKd$_N.pIf@IRiTJO9s(ks=c/2k+o7)5_g$bQ<>X5U5?7P^mBd"OoKo_B1:jesoCPk;Ec>j`Bb8mD*8o]1B9E3]L
%OFBtnL#:hM+sarf3uX3oC=7aobU.)nZ*1/>V6g+n_m+cc</)d]h$Gc9,#Sj1T^lC7#(5OF#)VWW`c+*G'PU^^4cc!;PFQ:b-63pk
%IlHCt]I6KaT3qHB%geeK7%gG?i=Q\%"@kHV@LrT/M+Hk6$!0XLL2?Zeeq(ZR#GQEmaCH@E5^<.EdFp]4E^_ZtC;NsQPdZNde@WZ;
%OdVA\nH[57nJjQSh8"iV!c'4j$Qn>"aNN-9O"Nsie"t[l3(O><;1kdAZ@O5*9s1YOLcoI[/"9QC:,d,"$9)FOXTfp]TFT2n6=I&+
%Y@?0D%%P>4*G1_TEL\q<_F4ZamcIRIiAb8,8kUL4,GVR93``6HE!CAHUR+HZ3+n*BO#-V8M!QVZ3E@<)'=PfC'jM=2TeO<Sc:&Q:
%qhJ>L"qAU^<0O;$`KV?q^6^hWpbMa)p0,-qiQ1DC8XMn=_FBYG&k",r>`[n($[o",jMM<;,+`/lS&!"((h]0o&e@8W2FTYPU*q!Y
%2Ur?q#?_eOZ'i0'PP"pI?g'j+P"*<pj:m5X-qP2.O/$VH.@3)n'cWn.ht$\4f=f7g'Yu<=j1b<*AQ:^(MYjOprZcBBkpL_?.MmtT
%3=/9W[.K(a,#E*=F6'huJm_J=M7OlM;NVE^g'P4.]k0Zie&Vq>LZ($E,Sg%V<[HYaQ&VCl:/NY4)JRS#.pF%r$SgB_$+W?h=n^fE
%8K<m&ePj[b4+_93MCBsB6q65A(N9!@j+&$a)$g[J0e!HXU]i/-.j>:J;^TEd9O:H9Pah4_Ga+.B%0^c9eraGsE71UEb+UO:>kYj_
%Br2J;6U948<1[5lG--RkkW2sS=O?6RA.XYQHk?o+"UpX%&sU.S8G,iH2V"VD2@_eua`aAhDM>"q-!"E4\]BN3Jn45K)Q,ps[I^uR
%P6G#$!W`k\Q%]+$EI]'4jb0taXm\TQ(;Y6$'b!]:5.L8VErn_mI_<+sf&S#=E#T:n;Cst`S<NZh(aR^4'*?d=3E6iNja>gM&G6d*
%PCdTpq,'5(p<cn)%7T>OA.AnK'onP@$)-XQ2!+LBZlYY7+uM0o/'8)YU195-Ob$GCb2L^71O0_BFdJIFT)jmYNZ[f_bfG(:W*UT:
%M^oR"Hs_f&_huBA?3-oTYDc_e+ou^D>#TItMQ/?b4)I%j_H.kBT1[[0T>35FC4u*b;pISD1=p^MLt`__F&6("[Rb55moRDS,A2-4
%*7:UZ>V1AA#^L2o#MO8A>`V9&BJ\0ueugbn7NNt..+Z9uAg$WTRIgr!+0*'b`()t'Ko,C%=]Kg_drk-QZesncYWU2Rq&E5f6L5Op
%R/%l5as%u28Xn'M$rhgjV/8RdU>T=takbIB_fa4qZ[0["ZNs*D#Dm7\$!na+=%W@V)/ibG%D"?^T=h]5YMNdDfGOZo&g!MV_;TNp
%aQAWDECMng;$ei*b6reT+fM"!4dWu1HU*OneoQu8$rT7Ii`'/74tY5f1T@YN;3jf<p'<-E@$s"Ep\DW\PNIZs4(rAp12s[AeS]fr
%A4ean_b'<_JtDEMnehlH#a6@H0(8[eSMPKBqJ!J7R0VrhbP)ASLA-+b`S6)eP`Ht.#8>9.iW/cjRTlTY)&k*8=Dd:6Qrd\5E;7U>
%]V$g:7OYA:49f0i1&_0*N)pd\d)7OkLmpep2(^bG/_segQG>5O=527\eXMhKD+K^tqM!^?TdN)<oeHk:'c&Aj(Xil4/LX49Mj9TN
%JtGG=K8Fmfqm4FFE9Qi4TA4gG5X*1Q(;s2K9L;sF/aeTiHl<%JCs]mm<IQMH!5h,6qoDPkd)-"C4T"JPT:D@.GG6/O9e$f2#"MW9
%r5k>2/O>,o?mjXk0C!H!#pQX&1P&%2FG(L3I"b`;eAG'O`3j4j>7h)8gh]i`erW.4"),!!&=Mi2CGt(2_?M^Olhd`^1Q]pAogAor
%H5k<%81"&QI559SmP&F5ZANir;2BD=i1&"A*UF6I29`(qGgAs'A)t:5(R)g$;+d,*rFBB;_J>T']=(jd$]Ho'ko&-MNN#,pDSeOj
%a46baGsH(G<Q'Y:BT[FPZdVfAfImAB#RHMNeOP.X(0c)h@Ka<c6F8*4%Ae(02DWo$;6a8\"-_<Rk2gK%AiGXnc$,V1o/X:9dud(X
%i%_u$eQo8!")h$eJI2b-U8-p<25;!i^pnVgIX9lp8rB+=$.mp@>o0=#C+C]mm2,<UF1$#QRB\ViT;05T;ikH9KJPl)4cd;?O\u9`
%[^0:%QYq'Wn[Y"XI_E/6[8!8@F&G[nm/OdINi]"Mh?o9_1_N;An2YL25l4OtFLj^UbdjG>d&</R0UfDF(T@f:`7VRbfSE90O8/:4
%iQ1*o3^?LTE/70-luijg>XtdCeHKstSQm:Zk*acb4Z]A#k#h[^>TX(Hb$A<mCYFbH^J+Ji6)25MM5CI?Q0cMlUaa3gpn\SI-?KEs
%eRg.(@)*UoIh0\*iFiL"?W^17:&X%h*a;M1jL0ofhR3,#KN"$6C$=hq:Ehg'cRU;=(gnM<*HhM!0S6Q`/I=PJX\@=V;1ZHsANer`
%jqh&4"oH_=kK&#T"q#!4ZQ1%:mRns4fS5sXns)3OP%[Y"L$lngTf-=3).uQl>Y1-0m5h$4(Y2^,=MVD7MK0\A5:JaK+bMkkcCINT
%eW@1SP[&:Pd`"D(E?pY^\:P5aKBNK*9Z_Uf@MUS87+;C+*XX!&/nuUHWmf/Z%b;6,JuQo[=hMq*W>7C`-P=t2*e]]^7>=qY(X@-s
%c.J0tA_SWQkde2B'-n'nqU0&'.(nnsj-#7c5-n4bO.M';+Eo=@I3DrITK%jmOJrO6j#UV#p$*D5<NQ()(gRfE)Di#>0hZK:67io8
%386kN9B'6'BhV0Y9b*NOi.>e96KmoGg<iY7mi<)ZA<pM+42k@1.qp>#P2""Knr8Hba-BkVlUFh[*X2&)&D!JS*LLgXG0K*IL'1=2
%mi#;9TbOnfEj`)6;!Z`JZ47k'[<;gY75o(tgjmk^R@(RgNM/0%0frW(mp8-8b:('EFZu_6^G:WKjT68n5t_bjkc7%o\h7q^n=,f>
%Tea[U#c-qM3:3jQ`n#i`[I86ZgWD8S"o?s&>RkV/KFmKsS\X%e-?pE1GIgK6Zj+6*;4ND<hD(iu-)62[.9m?FEO?rT@X@&7bT]9d
%1?r9:,UG);h*s=GbTSCY(Iq_7]=(-T\*MOPqZ/[$)=6^2RFZ?aCi-[ic'F&qQ)Vs%,csJ6(gMTr2O45e-q>C703gNt#4i/YLlbm/
%]?O78GWuB9::HG!lE)YfBL[cbf+ke*@D\B$HEYN1:93==K4I@C4HI=MmC>>b-utZSK@3E6U4mQOA=[\q=KdJ$15ED"(0$NPcgR5c
%Cd@9G6CH2f<9)h]REbqT4cM!oGWb/&+UKY=.+"8Z@EO_G_1TYr`r,[H/Dn@0TlEJ.p$=`7WTFn2_tN]bL&(8,E$+[aJ9Hr4V<qU6
%?Q1hJ#\%%49'+3=KPdcrB>WWn;KZgLg>FQIBT+qS"26Ph,+9n2gHplRMXJ/=n1]M%T>S'3f4gf,^^u8o*>TCY=Jbbb2`$aJ>XTK/
%>`dd0O2)lh0X"0M1-!]61_S-Hm4\^&G-r9A!I]5QF^s#?-A3PbcKo]Tm`)KHQN;HBldS\qYcJD&/n^osFi%F!j9V@a(E'4g0t%iH
%7D&jl9D-cA^kjKKZ*Q(=_V*\meU@o6S-UB@\>AR>[?1-r:>gR,'>BFWHX.tA=p87TLuTK@L\1O^T!-.V(af#<S(_n=8t##/7j'9Y
%3nIKl=\ADVH:;O>M6L,PTYOW@=>M&ndWgKg/A4g:IL$V$N41FBF._-"'mtG@X*:L/f(rXD2E1nTFK%DP5go)3&OHdhC0b_\:l=MO
%@e;4'(8u#R:tI&Q5U1QX+;uF\6KZ&p?C;L7oH[tX:J64d9DUQtKEW2ceT#F3#1FVO>l(2'k1h4q"0+]HJ=82<XRkF,n,clR;ODt,
%Otm?q9[Jle>"Y6\@=b`p%&WV#OmiqNebXfbSqH.@Wlhn.8^o>Y!"Xl-e]a4];#;TsrplmY$W4aRR:&=fQ#0>'Y=QR"H4O;=!Xh\g
%$c<uF/_u;Tc/?I:48\1A$e_VT>]a#*?rcL#Mhi0+:'UB/];a497..I=.P:3=gB-&=f';`GJlHGs$_Zl4((-nJ$&If@C_AErZP_''
%&"RK<;q6d,A5kn*K-_J04H>ehq+>-)aKN,@W#OMY"&TGgX^"o\p.NjOo#=q;oP"cM'lL\#Yi1s?H*SgQ\K[;k2QjSn&#A6bdb`p?
%psR1%AR?fi,Zm+2giuA@$(5'?<L6!);\?6;I^rFAO<Q=2P@P/.Pk[6XPQjXm44$"@<_)%+B'RXn^a4[tg4uIJ?$*eai6FkVTidGs
%<D4\J(VWmT*!CKlMln;&$+i!EJFjegEE!XeH@E]MiC9h"Z*EM%M#Ik7hfZAF,N3tfJo5Mo[Q,m-nYQ>,8i=VcBb$(]So4XScA"<l
%>C[>&]U'\FF29%=U#Drr9lU;qLTes1$O8MscjU]_r+:f#\MIB]85L;1]2`DU,baOdD!'<J-8WMtDJ'J26_\2o*Q+h)D:&V[dI\CO
%R`>T14hr-akJ)?P,OEm":+NT)5#ZU(L)d6_IK06k!j(+$U=]G_^2905;qSD$<u`L?oT&h)K](fa\S<i37N@UsM/d98j@T`(R=qqM
%#@H-=R.\b0$0*aL?KCsH08q'6X_YH(VVt_%WhD]Dk*XUk&k'\geS>aV-R9IZ,1,Q^gLKW=6h@T$rc/_o5VK??F=J3tau9=VR5e)T
%/Kg'X*;Yb4()U`aUV=j=BIIIM4RI%SK]Oi0)1j<?"OeOpoW@.X9LY)"`Nu6rSfG?qQ+9Q\I#d7H/+`2Q/tL5VOB&iaIu;4R#:]2H
%n'YlnnZ"jb";'\J2[u90WJB.dMc.Te3t9/BB#3hb,EoNP29(I-R:(L!WWC9\Ap-[0_GG6f+D)jS\c?5?f5=a!p;KmLg/452`t1[0
%e`c4o0HqaC@5Ym24*t,u]c4VPBcW+4baE8m)*j<$qlm]mF>6dEK5"V#%ClSgcDq*Aq2)*;J/F)9h(3e!`29"$JDj\dG.D]_,)nFY
%%0"A?eB<Z%YnXem2GXWu+W1WHLWZHLq=S>chVVRPi\\$Fn%jVOlUU7Z7q7!!\1EDp^\'LU+,o+dkK>sk(jKnkbdSAM#)b&ODQ]'P
%<[o@,5`>CLIC[in%<U&Q)dpF8J&A<ldd/rHY5?*QZmk6T?*ifu$CZt)>FXEFd4Km(D(9_]2@F0\\HU"o8F&iALe0-?34krbBd_l*
%V([frBqbUbhQWD/(ns'd_D]=,--/$eX_r>82e[BU@XA2eB^3;LR]UiNXRFBP-&IfKJY\!q@S0<_*=g<<VoMA.Q)8T!#d%QN"@4l0
%*Ng.aZpc.J<)&C+,U).T(TC@)e<%lW+e><2MFcM\m?TD-E(RK="]ro=@''#VOFtKD9>!TUGQX03GAb\4S/S&<@cS`DU\&2?Kco^S
%csXN"CY4"8LFg<4fV.@UJT8Ba13.Au#Y^u>f<oU[.h<J7&g%AN([3(7bABu:5O1C<8joJOX]J(^($[M`r_T5)CSoR'&U&5^>8e@"
%=-i]PUEoiEY*U]OV'JN,pgq86h3ZbR3.2o&@'fKm_BL7<UeX?o1S1E:XN?.$(`j8H$)?dPY/%$-#k6iA9(TQfQ>*]g8\X\J.6h1n
%,.jeiD;^km`U;#N7cna8;TqLb.;Qpt&`(?;B>uo9]-/mU9d:8'5R4,TgENG#VQr4'j]^q8"76o$'9,EpKgZ1#Vllj%%cD0*c?7=*
%.K?A5/[d&g*0eA4*>Mr8oL`oQ7i8f\8N-rRa<gs&,(bF/2<>['Gu1t#C64Tm@0K_;=UnH%3Y_-K2NJ?qd!R7`i^\[\-#7>oA#,f5
%%Q30lA[DLbOIsXYle,.>(#9@t]R15o<7;qiPIgjV+Wd%)9LBNA$pg<#HpZBS:_!2R>8h;-YYIs+IVD]TA61cr(]u:;E4'WBO'bZ8
%2>KM;fkq#^]+^k-VT1Y(?X_Q_B9Q2D@AsQLjNU.:&gkJ(fj*X-&DrteKEHh1o#ECWP81hl-fX-W8WP;3=hs!J2iWFt2n^#Sigg58
%5X9!,I=YY"9s%QGRB@Sr`C>i,n:Sh68slqF-?,0HZ$2q_H.&WC"JlX+l@WV>PSXW9"bgT;Cq0j<lZ20Xi(XkQ*uZpmK-O8#\s(:'
%110Zf,S=qF0:gsSUcl18jqun(,l0]j!iA\/S?8Fck\V(j28`o`d&/OVM1hhOB^9pjmpD[71HnZ8;#Os&5uFe9e$9F*M%A<+?`m3B
%0fW2)jh?eri+ju=]F`->ZH!c!rX=(5,;='sP"4k*McB!eY!6lrAfu]^h'JS;/&>RbU7!,-Q0HNV"7`On?]U0VDTamhNm!i[AR,/R
%0SO;65BPSWnS@IbLIAHTM;Fu7*?9D9+?MpNkXu/b$H'[;[U:]m.=AB(ZfF^Y&I1'LnSLT)<bG^&N)00o8Fl)FEjM01$Q[(I6E#RA
%p;i+00G?H=95K7"6.ul0cI3\ENB`$0?X<P/1-OIBX_pg;M:aE3O+S"^H9R2i%dDY3Kf:)>).r=?J&q%n2`4;]9e'[sbFX</2!6!D
%5gWc\i@c?`U:2IT(/%S!]Gi[(:U#cEmE'sl_D(-,<LGr/i@>AQZ=p^A6<:P;e_Cl7EPl<^(*I6LNVJfW-jdmU*Mc#`@4/<>o&?*e
%Q(-hfiUi[d:G1T*`KP=V3\n(Bq4g;t'a1J)h\KG]O?=FVkHD!_jb;bV9@QH1W$g#oNkg@:/Yu980f!Ebp!8O@Bgo7rEJ7glO;94N
%X=r-,[R=R>k.!A[jfM)aqiUa][o([J;H(#3hjU;IC`El[">V.4_t(C6S]4CbEit;K/.dH;2Ig,\O]>\uCaB@5OD$7B39M5GH!i3N
%MkHU[eMJ3A4QBoWglHM"6U@Qd,m^YkI2:Rs\;AL_i49[NJQ[&W@+`Gffio?_/oKR5[clnf^5*Jijrfg]%b^30bp,Frd'@&6[2pA`
%U9XVr01*E1$cB$+j@JHb]R:^i.pk:ae7=Jt6,R5^bL=?<F2;nKa38MJI#GL"HSnU?-8ZWa[@iO,^-#88.[FJ>%%]ENF`B8HYJ%^p
%/`Q4kd:t=:J2d%]ZRN^8)3?H9Sq=-#$5h^d?:=;c?CkTEQqhF?))4dqndUEqX2u_o!X/>S2diWQ"A*#QpPR[V#ZR.#MX!/uY$;`M
%8t&`)Wi'qM1f:p\FbV(b7S0^P?3La;?8IU!EN,D$q>t1q:&.S(ArWjL6i4DnXS?>aC`13j(b,^]G`ofK7iSC3QB_F0^'%jqBPa0\
%:2m=gd^H`?+RuRrim'$uoMLljd=XpTSqhKeP6=If%a\cIs1Bk5iSa28>/j/&mCdSRpstA`HXnmSRpP3\\L=3E'Z\Q-2[laaJEpY8
%C)uWMQVr2VfrZ'91VDZj$"$@`9Du5F$hDJ2VY:_hoH/NMRb@W`'aM^".B1)@;J"M&3,bojE:UH1`hW<9h>C>;8d-$r,`SK'.MXZA
%8/<?:IYc-j2-U:'XQos1SePs*hH'"Zr-]0%keY5$FhVerD)T7I0k\m++IpA=2\^]BEH/<_?7@7[hc4S=XOpf]s2VG0Csh-jO)1X@
%psNcJhD+[6-M2^!qW`aJ/VH;*TjL0%<sDLA"g2eVpg.!`h4MQ@AmX$N01IAi_sa;<b1TUKac)Y/7SmjJ.VG8ZA([M9WQC8X^4#nn
%b+(>NR+!:s[(^Pe.lL!k,s&cY-trlkT-ZU?Q(*>Y7]8PAQDSAL$19G^X8$tRmd)2@(su!/X47BY,?j+2Rj$&[eo[)/*mER],mF:5
%R?mMf+t'UNT+H_=,VfY$:rC^WX*1sb=<o8?MT!+(6K>nrN%1C\pt"@>(?FK'4grY&2W`rl?0"[T&EjcjGC-c!Ddp+8Qo/&!bcDe_
%l2NIEkn.q#U>U/RH?UH\oM-T1&g]AcEqm$\HBa:8!(CeR-jU%)/UYc-`*So[1mM(gQY*!i^CZn3"NagY1SFf6iNub(Ue(SQpXC_i
%Eh;DI%lK--E<mlB/UB$,((e"!k$?QTmVKst6C+LFEmI97"nCB?kG:]jZ:HOhGXWA",YP'DDsfFtqeK=]WDU62V#bemVJdV\f-5u0
%FFuU2[RCR->N"<>MJ$?I_@N0d95B%OaAsm934BeV"_OE\m.oi#"B7ol3@'FA@B0H\%3oAAC3'=.Ot1\3RTW5Q[#Z#Ir)**BRM!li
%gepuoFXF,6K6V1?=bK_A"jIMngf,k@Lor%i>XYF'N4l[u14*jLB;oDP-8.qV$rmp^*WC'i07:lHnbNRCcXZIPT;Bcn0du[V/?DRG
%,gb;r;f-ICd8l*0K7#.((2V1Mg;]_c(iS\2CN)b5T3!@=jB`Q2RIH2e2+ikES+XU4V?!)dkQPR;J.@*>`7_DM!"tf5O>kHI`>P'U
%-!$!&X-j6r@8p2B7_s(n=ffV!Q_I)_@28V/\`Qe':gQ(n8$hds#C3:$/`ZIr5akq1A?_e*UTHsX-4rU!%(^-l;j5B;N6bD*\^`QT
%/kUG`^a(+Wj#K8d"KXUtdhjWW^3Vrj.-sKT>;P3g,\@*C;(h,`jhe>Q0pk<d=("=/s'[<!R<Fusd]?=Z#MN^fWrMTiBW52aKq.1d
%O[(Q6,"'LaM'FqsMskj&SM&O%Sg"_>6:h35"jkSZ$;jsNJSuNGa/k`f(p.$GMF;581Oq202O9fVWO=l$<k]3$MP`gVfeFg-X]c&S
%<ooU=FG]ts>h+b6&K?>IWLG8NdY'Rn)?;F>:p^3E?74_\J6TL&*R;(eE.G]k3FjjJZn-Pkgi+[k)"9^>dV8qW7*E$sFkF":;Kig?
%O@PG7od%WJ>`@RW;+d'f[*L$d/U*36AVJL+ab#D^h9DiZTPbc2W/@b4gc;lcM^0Tar33H0AA`7b!&VgK,D%t$">!'<g6o@SE=`@D
%>6M/U/-!DN$O1WS5OUm^%WI?16!-B0;D>JHSh`V5,.RBmj>O,sLrjck1^JGCdh(PQc>O/N"f9B0D.qpOP$IK/`YD68ig:.!q=PjS
%"@u4]>ijFueI\W/$2R24CV_J`k%XqM>b46c6Rs(\GKHm%!l]nG;]$:iYD!J6G/@4@Jn8qCKss];(W2Y_.Su*'<O6g#,.$C#e>@eK
%:pEn9e'5ZWAtnbDOF/@+Q*Jh:-V49'=LP*ifb:qdbmGge`3R/-g!*[V_ns8JTcO6s^_ZBi6dlmt^((0INR:l8Q;]6Eo`,tOLQHgH
%2lTA"'B[p^;*B$K!;+.N*&TQYCjYprLFZ8s#,k]`36Fs@7PGoX6NV1(@#RbCcE\a-O)E`g&qVIGdEF8Lh]_Gr&,'a/_.l;W6&/L-
%[-;D,=EiZ&(:-H*8l&Kj1=fjYL07fCF1O;i)Wt3W)2:V!U9'##BCd=eE7Ldf/i;4[D_;\[<d_<W.b:,2B6?pO'_;35o74bTCK`q:
%N`%F,H5>Zr&u#Qfb[@K-(Xu%r.42ft+]oI[1V]pQ!r:"q$iuFFi6!hVPerg#gt<%,2a9KR%(q@mF_lrbKb9ur\cQL&Q)@@K%M%u>
%gU4t4'e.8r_/gAXW(C\`!=$'T(te_i0cN^P;?kILd,l$8IeNgJNZ\fu&[IDL;b8L>1AHt*i&:jP3srl\Z&@NTVit0l7Ce:lY"9B8
%VYa]<-H)m[A@>R!:Zh0&BL['f6"6-@bGTMT>nlIB0S?Op"qW.>gLDJd\:lCaK`oU"<$bdDJQC?:afQ34CsL%W:f=,/hiH$eDjZBY
%-\q(IGPV4FG%B7$IPWW0k<$lrDrG75VUlV>>P#uZ`I(u9kVc/h501JCIUccF/jtN#dMCngMkC3I*5,+UUeu^BO'2@p>'V<&f'9K>
%V3nA2U/@iD,)00"g=1_k-"a5.GB_%^j@%2>W3<#Wl=J:94N$%n>VhcZn6_'HV!'@3hU2i(ba/keQZAh"b`+-$Hgq7k0*5PGFu.!D
%f=Zk@h"DWZ24YnBi)_9uPB4ZN2PN?GiosW6%I'e.N/b5\)GV\09j=Aj5QkmnCWZZ(!_h"9kVNX/4TK&MKcSucUDA5KLG)&r^D5Q8
%2jscX+O'2F=Q6$C=?+)SX%Cc<FJ3I2U8D)MHFFs]i<5(<&mbZWH#/pgh_aXDZSP$;EVU*%4'P-R:lo6dJq`%+jPQd+Thu7^<D<q&
%c$-=8NZeNT]+';9:6(cM'WfM?3pUtd"]S,*RcX;qBl#Zj&VHN/]\G8h=CeN\SL&K]E-SqDe&t%BhBKH\9[Ar(LjEBg4I/+=,35V+
%ZctQ@Z<39P/oB2<TjAkUF$6^2&[[:@;lZELc&GL!VuE/4]PU^Ig(d<`Acl4=feg%1`o7PmJKVsE<I21s\o4CUO9)iFDQ6*oEX1l&
%b?eEcn`;!nftjca@c<ToUME+U](nl,#LWbBiW^MX#OZ_`3UWL9AiHq!mK]`cNM(!Z3EX5F@@L(*(F?Ro,V8Y'bNA1(ZXr+,gXXk+
%M[9jOXJt:6K3Gl[n1&XlC.cY/X)g^;E[L>Ti/-Cu(tT@1p=%`pA8<S-k%qR9k,&nDs2l;rHghsVCDI.*<?b25D6pYjkpJ_hq25ks
%m2]Eer[7e;!\C%F+3%R"kKWN<%WJ>Y9kXtTE-\WL*Fb=3gbc2H1rEQ,RsMH2hS7DpMU-9Jc#0'Gk,1frj#FNhc_&c?"0*PQaH*r:
%R"jIT+e4W)\Ydho(7["d&o^!i(ql##&n8o#)lt)];i-hk_NnnCYc9fc2G9f4X$eH=Cj/gNQ@'$G?WrF)W6&K\d<SVr<)A_l=&`qb
%ZN[PE=MBM^@F)@.YV$A*@`,1MRDK?sU70S.ai1c7pCuS\XO6D[=_]jh(8Y>Ka)UWYdHbSX]t3J/eB6&<YG*+*#19q0-5.s.").?@
%2A9a`;qj\2WtjcPRl#qTASbtC"IILlM1ducj_@\5n!3]F3*T:VA$s_"==uDq?).>MiM1Db27Y\'?s`)(_El9'L`2Vq"i41iJ4h7\
%`F%89U29q2l8!t:Jqd_tJ>(gQ<[r,?#eMh.eD-`kl@ilqXTo,Hi*q"W4klEsZ^"7<4K_).KBOLj'RqV\-43c&3-^k*Q6HQ6'Fbhl
%*kfrjiMl$4[d9&H6LEQ7U]ks7-+Y$D@A;C:2@'UG<J(V#k(Y?sLg3f\(sZZOaX5CQ`h$7d?tu&oI?Dri]!ohtd;*N2mU)6KD=iVp
%.:'dZ5.hHI"EFj"]SQ5kl!`F5_r]ad%UeVIVD*R%lNsOa/t,T&LmDn3W[TfOqQ-@\Z3$pM1l_oYSR,ON7<+oqG&";*S^_c_a-r;g
%mW-@5;S$VPi,I2(;a=!0[`m[lq'H*AJX2RgAG$FFSJ/Fu=d6)"hV#CR<*fh[n2+)XBmFFW,G=GPT%iD8(:;!hZo:YU:TCUATnI;F
%;`@ZSW[U36;moBd[#2&!7:=C,lT":L9?^D>J=XXN,%ji47jC6G(3n<nQNhQ\WL@PqNDm&S6d2?,8Dget&6\)e%Q%<#\U%af<FY[=
%8RjQ!bXiL?%J1\ueUZSkH3geplO]+qKfb_>o[7WT!D\9SZ:c!,%h#Tc6rNUX;k?Dj:CDO^q!U[GJmB1*h7Rl6i8=%8_jfJLeap2C
%$F$CfdpfV'S1JI4Wbcg#[;fZKim1GtYj:*L:($W:UHVE:h(RqX#O:CN:jeNV=c=@#=%3\EFcKjqA9:1aB[<E7?X*]2#0!+0i)1+d
%r6A+rOs>BYjo"@\5uNT2"N7q@H8qKB`+a$oT*/DFBe1j2h?FUhVMY%D4UHMZa]Y6B1Rd*EKrV-srsateI:]_rB8:U\0GBUm^r%oY
%a&ronrJ%GCI[l]'+_e\#4,iGQ`dOF7oM5jU+Sm5,37VQU;(-Ia[$B*`]SBW5-q@.GJk->,pb,a#=:;<9]%+gK1AT`U9D'pY#2L'4
%lA8KTQ4</_QP5qAiRL%uH4YgWU7>FH&LJY/2,Dh*?8n>Mg['ILqifh2\Zp#U[Wtd2!b?/^HYIBd5eYjg09lU?N#cR="\9L>1Khn8
%!Mo`T93k'u#"gF[cLcAc?;4!\h2D0j`@f/F#ce:?N46\9;eqjI%TQAnI_-=ZqoSEEP$Cs7U8+$VL%q9lh+XPD0\]9f1Z]Ah.Gl*C
%;OhF^"C%qX_^9PcZ,rPV4p2>i*Pp2Yjr>)eAJ'_uo]9(*bc$b<.(*F?k_e#<)./s"Rf.h?SUA#ArYJO=B,/dOXg?bngQbmu*iZ=A
%j5\NG.YV[iSjcHX%rlH(09/k#U.8CDKfa2=/:HBNl5_\Aa>&9![<5EEio\X%6T+<L7<_XsS2(u_Hgp2QARR9)2if_4A4\E!X3;K/
%]!;=([,!_eQ,j&ZX*Ou;?pQ>a[L?gi[(\-T]EDAh-F^t8[.G-cfVN2:XGcq+@\5u0j4r]=d%FGfT]hJ.Lp=Oedo>#L.88P>F^o6"
%Ru<8HHTDq>7dF%*29W8=o<4'&J`*D5Trlt<A+E=U1D[XOZKj(@YqmPs9P&5o>g.D^2iG'+lVQ9?QoB#os('u7/ttja%*u<CZrgY@
%FM-!i%=&7)2<k[b%^<n4odAAGA8%8Sa-h(/9IYjlnWT)g+SSg3c0rUR%@#e:"Dht!LBo@sLnP]*2,9[-i?u68'UaHV&4*<.]g_<T
%q2P'BQY-,[)E&Of(F1LVY"m[R_daXlHC`R0"Lr[!"OL<ZkQ#/Z99UC-<..BK5<W,Q-S[,W:FgI;3cbq1S?dgThO."qDiC5Y$g58]
%"\>da8C2^iKkEfY<FjD1/[O"DgZE`HOqkebRPL.\fW;cXRGQVbj#de,iWjGGbI5nadsDr`3(Qf9VG>$Z$u+H$;&d,m:me"WX7*)e
%@a:]UIUS7U-N4,Qmhlo?;D]FEb+7m&6\-!'Y&JVXB549mIR5$=?F>V>CJk3GM.DE6s3f_*U.O;VF]GX?[N#TGe7'k5@$5:snNr_"
%G=J_gm@j`>Wm&@jPdnM3'tCSu/I%&_'qc=9$Y.`fNL";t+JCc)jcVYu&4;eg\*%QH8r7D6@<`ejpoGc&5&R+a^9Y^NP!'l(mX>YK
%>Ccg1C9\S$OCMNgGB$/9LGd%!K!GB!Zf<kdF7_q%@',?Y(aNjHfhJr[M'B)VYR2u3KUP/R0-;T"X)p.V7;?,J.QXK%:i$L"E%Y9`
%'e^cRFb[jX&NW#O!OnWH+A*]Bjm2saNED8*a\/jEBFi5N3].Z@(`9o3o`5qhYa95>W=]<Y6_0'S)GLZ5f:u^N0!Rkp98,sN@OR\H
%Q8H-EOBs\&6%`$NngC2CC.(c7ROT=GjcJg1nSYhP?%C%#S`jaD5[_W*;_8!%Xd^249&@?.OjNT]*P5%KP/?@Z@Nep1L%snsrBSU?
%I-c$qEgX>>-U`K.]D+u]lNA2sL"t>[n.KkdJauAEF@`Y67s.nejiNA>E7sRm?->gGQk2aIf&[%Xg8=T9Tr49.6Rq*cJ>349k=Ekg
%4Ns1^_Q>L1J3#A9Z_B^urO<-Y^TnodQ<8h760aiq3\Ca3!5%]h:!Kh/maj6M,ukD8CstD6nkqk#<J,#&1J/UrO!1VaJo,M6[[U5P
%L:+?^@#fE.ZBojUSk3'40&.k&+1j.ZT!9nPZ/%R9JfQ<pS$o<$Ops9pW&A_J_rmgG$1Hqoo03j^oieY7asc2:d1)`a6\HsGRq)VM
%WWfMfg^*maU6=&\*lJYbNK`1V"#I1P.-<c^rP>"!58t!F5Xd1TB8t=t^<18ar5i3LlJ[;uB?=S[eM*\RLnpJciB5!39k]DQYlNBZ
%:;:U5lB7Ac9HM4ViZN7QRqK=S5nQ$6X.;*s%_LYWYJhJ^[OKm0:$ccE_C+!nC:>U\(7hbe]Du@5&pnsbj935[ZGi[f2fi*J+_f'a
%hg7fB]NH:(X>?1&(p(gKd,8)E$q+/i%MqeP(^^&M&fdP6Kl,![EK+p%WpYpMp(m;;#hI#10YGjc(_gT0b8JaT(aG8Y`,uc$(r](o
%WfNY@$Ns3V1IXEcg)+dsG2_pI>p2Vi<UEt.%)dTO]+p.dODa<q4;,q<fb.\TQIflG6u(auQZf-mbpH)*67e=e0T9O2a>d`&XUd(p
%O&EhhdO#9[9Z!psBB6,cZp#Y&G$`jhK+qfbn6-X-+sOWACUZ]O]1ta&@u/3sDUZ\9_^_'OYA((mRrC5B3UZqT&R]m/R/\(D%E>JU
%iKehpPjZ7WYfX$o)fU01I*!BB!P=I<2H<CQ`NFC"N%GGe*r3qhR$XGO!<!U*U2>2W\c=<uXbjCVQ0j2F,eFCVJQh8=Y6\*8)r9)b
%e6m*g:d`kg<-r%]<5Mu.lN]g3Z5tqtK0[KoVPuJADQ+giF2='jlDB?,Kuos'.9.'lfD2YAj!+@o-+LsX2boih:Xi_kZX,/74-FSA
%IPQ#S$uDj]U>3b!M%MFs"hPF'=rC@C+[tdK/Z*;XWJ&H#ZmFME7=u7@'URg)+c`kVnkZfclhSqi[5V.R%9\$&f?TKNac(91Cm=h\
%]BNb#QccI:DTpM-jU$4s&6pqp4ep<;q?V?Ar]@k4;)?ZY;*"qWUQu;O\n'_kG-5!@?nc"6%t[AT."-Gm#G].`LA=U1$R#??b=?l,
%.7p+.$N3pQ>;[Z.QHMqrc"rn-m)*&2%-elIcNUJ,&qA33OMRkrZWraRL&)PH!UUd04e(#7"fKc2<ipUrBiac5H[bSnr6eP6lXG*(
%QG8@H,Tgmi`oY##i:m,l[4N`+*-BCkbK#=IPN2=/nGO/0ql.-f1PT13g2LV%RX>EPhg9Y6l#>>L-,VS#q</Qg&\[[W&*Io/k0cYV
%hHi>n8l@R&7o<-Em:"b%aRo&m?G!lG#k+4;iRuUV7ZmkKBE*c1OGM*m,j=IRL#kDB;NI%hNpHAuFr@;$YV!RBJJMP;"Y%%eN4sgV
%[t&OnlFMLMpPFse!da_bG73X'D.U2,F2?=C!B44J'_l#NYZgG/5")5,['*eXiB5YWO5Eb)Mb__S3_Z>+6K:uIGe42P)>5f9drGXQ
%k3Vt+?="`8T)'jH#IHVJ-=mFNeCgceSuYp;CPBqlB`<K.2*m!'\1i^]%U:"S,*:l;g*ie>A5lkN5V.gXfk<CqR,M6B*'d8fio1/n
%6V7C>"Cf1!2L[%2Dc6B>@'-3VTO(gEH>0HF>aWF"S0u"32+[fM.1#(d/#6EUOc!9FRF$"He0Krep+\-lP!$r?HJq's8Sm9h;`8if
%;R7R/__%ZHc`A/]C)=SQ3c.Ie^j:bMJ/Td@:NF^cGh&g8i<h'\Tl"U*g=-e]2,5dLj%HFR_6S_qX,)&#<`,Yp"]nU^^ZMO9B)hQ:
%"S,PQD:GBkI;JA1Q52p]@?ZqR#6.(B/rOOA0']8B\@>Q%RGD/IKG(fQ)C\7#ME/+W;W=S>Xk!2>(QGVXC`9Ft+`"AsE4l^?U?#iV
%=Yn?UO'3!]UFR?;^(Hro&a@<22C/qi=H-4'jW#INV%$=uKB7Ci2"+=`^2]H(117INHCF)_ge!_U/-%!$'jO.tRht43kEScL&.4a\
%og4L=Q;"MY(310:CYal7+I3a7YH/RW=.HApYhi=*@&)_M/_i0u"cpZijn>A+YY(_dT!_sGdT]V:=Si[ASNRlWi)MFGe\m>nj0_r/
%D3i?UmVEYd,6>T>ZYUJsnQZKdn3m='T+Sl,fhZRXQ%V#c=61eE_WC8:BaZCFaQYQk0D4lc=rLRRJ[3G'm&>8Gn5:OC2ooM5./%;V
%IH#Gq@.>OVM<@g=RLbKJ4?M=^>P5H5GiJ*D+OrpQ45m1j(9YF!`kfe/2`<H29VUu.bklY5:GmN1nJ#WJXL;.Plp0n2*V@Afj0?Qb
%/[iQdTip.HA^pUo\s>_di2P9pkG;\G&RX%Wg&$Fg90kG\1=2Iq!cNtoRM!Z7Si%ZWb5/9cB!.=_LSD?Aj>XWF;1X$0oj`YbK561A
%9hFSKQ"Q>;'IbV5"Od_m?t3$`F!`^j72]'kH5P:U%Pf.D@RN(hU<+ED:G7Laf1G#T'gXjVQ:]<Q$msH>&[h6c`c!d-#s8D:lFIQY
%*O-W&14a!4AG409:GE*:$(-/*;)p:a&r\)F@2.E<V*mD'L4\E"DVuK%-abp18Z*>j.-^uaHR.(S0OeYd"e,XgolsTnM*Xiefh_"f
%7;T_`/fp_DNtM9`YQa&1BB_^@3CZc>HE0mXfo,O,.<B4.*!h:glOTEP1f1TH$V\3\V#:sG`Wf9JN.&e#g5qZHfe*0lf5f;_ilKlP
%&N"iNhjC9l<g"1.*UFn'dYJ%9B"*-J8HL!'ggc6C\E(#:-mi.s!S#O\*jZ0?q5%'`\pIEA@\0W58+eF4o;lL5X!eeM?aaX([Lrq9
%f`Cp"W5*!p;KoelA!/\'WV`B8Tp?X=D[>&gd88-/!Fbueo%T2DrKab\U(qZj[\Y[Q9P_kPIMdU"U>a9]&@\If=JV<H^fjR.Tr="`
%[k1c\Xd4]JfutI9Mld.Fp7`7^,K^bBQ2h,DSdj>+jofZ000OE0X8^#?'C(,-r9X2hT]iB[PTG(bd=gZ)rW8Kj=l^#tL!=.afIR8,
%<i8!K@i$"b9F?p78VSr,o#,!B4/g_]7`e:.3W]U#\?HFG*nd,DilPl(HRkl,Oa#=bd8Nn%e)h@,934]Ji+<.;R['4K@'Q)=/=OLX
%!A)oS=Q!#>C/\:R#s+O1dD?c1eS9Xh]YkPf^aPPrCsK:'(j#nNUH<gAG`a7"l.0kneO:]mW-&,U%s-Pb$(]#Yi.p,>V+n7")LSLM
%=QLTeCYrBL2JLM8%`'0b4jE;c4=H]FNd3M-jX]3pAOBX-aL5rdB4,_P#N%>M#4#ESSJr)F*5/lP!]J7Dp2J'EBEpX,l72XHRahmN
%<?p^P27KN;-ag$VMm.&u%<\lKcoCfqWUcg\n/.O((g]k'JLV=E.2k'jLs=S]aroJ,=(/F.GlS%h;?fe@A+%%[fjQY8F<b]:f$Dh!
%;Ghb+Pfpu4\YXQQ,j9j=72\]SZ@P>O_)pj`9c%e#hp7cr1d^oE,ARNUHlD0BQikulIFE/OUtpC:=jTpGmEcBc;ZSRda;M'5>>cTm
%0a0<aelN&-@_m#?0P4_Bnu5e+I1HF"S_rUl.#'6U#A)n2#*K#i1'$WjM_JlN8L*s`"\immH)8dJV%O^_+[kF[@j,+%c,j8V)(DdJ
%eZguiJUu(U/f+_^4g\\A)iDD5asIY@F1A^lb8>ElAa=A7H'td>PKs:Jp^7uYJ@1Ko.NY3-Q2lQX(>"teZ4kEmX29#<2QHfcTN#N2
%@.BPUA$^q'Fl@Z<[^L!u+Xk5BKb`fU`u:2XNQG<hC0h3<rnp4A/qEHf3=!6c7cDJ?f_A+3kI>5_%L,[:@0\a5JpW<RFRY!gQSr;r
%YQHP;[V`TAS2!&`Xp^@/)Vkmp&_%XV//>d:S]@TU&[t1e8P7!hos$W"DB#VWe^"Y3fPUOg1$?g"LMYn;D!.f-<`9<9gQU`THZ9dT
%-gO%gk6.E_SkcDi,/)R;9YkFo7$'*o+h$Nm_mSE?\!S*=G&*RhA6)IUJ_m[+3p.G.`_Rs%ZL3C<.a=-pNcdp`a)Ebp=14<)J0(bU
%3334aK#fXB-"DcV5/>Wd;.0r-Kk16aW5+QlAC,+GH+52gE"u%%LYRdG6LVb1>&mi5HoO7#`Y&"6@"G&(a@k:H&\IFB[qh02UUmj'
%SN$",mamb]f/u!6;EM5U/PNEBS;\Kj<U.taoD5NqN_H`>eX,$mGWB4f+j9;#KP>(V=P9'2YsX2K.)XSM\8&9HEW]iE9+M\R-_m+F
%LX1A@*d2X5G-D'%"CGULR/PU\2!Smg);28AeXC_/Kt+I%7:i&6iB"h*]+lcFJAYqZPZJAI_om"e$fFBX:9`2,:rPj'UN'lmXg;Xj
%*M)e<lJE,h5e5?W,M8^umZr:CF+t\!Lsf8k)j4h`$Xn0Ur3e*K0K"WNKt!NS$FgGV9ku/]a<2?#!fW"6N,u=\?l7O#ZlUCr"Z+NF
%7DRWp!h>%Qfd3@fWhLh!1BL4o="K!bkOUH&9#EsE,qg53dc&/[XtpB2C!4Vr9)@dMN7+r,-u/!`I#M.pYgkLsbtDa>R))LF2>BcG
%J_/SbQSWFpN?@J$E^`hC=]"pGJI3osIt)qTjoG*o5;u`/M]o+,aSaVb$ko9GP:qAOXFr>ZP`;]_fH^iqHcR^I;_"7f)4G!(YfB"/
%2Ak)SKBW'J0O4F#Z<SXZ.\6;!B)iY7Y5nGFe&.ENP$C[^;`59,MXBNrU.*5H)K$u+dpnKaXMg+[fOl]TaR`$,=u/:pg(Yj9=j,MR
%:t;oD4tL3r_0tL(ldnQRS*sT],F9a;b>Qsr!*)"1+M:lIWl.js=cit?LAMiEMGUDt-(Bi]j0#FLQcs3cE)l*;_c=+&6Pub"Wrf2F
%1T^*n-.7'FRp(guE13+9DE:e3;9;60o7n&RH"3K['R\0DL2#c3S>4cRKWAFNXX4c9G]<(rfS*lB48?+"-C$D:EUN^iLPj$qRj%B7
%[I:F%,4s'CQnCgCVA7*c>A[ull*a$PT>-/X[#dr82U2-.5)[DlN"Mfq5Y/<b(X5FXZY=;-ccVaqNpFYARjQak/>?R6#$:1#P+<)5
%)4682>s0':+`f1Q)LR5+*E4%r<U,"dKA"'^m^n4bZ6i:i03\JljtM6a6F*`)<;U)^-'^_TmO+EqPl1egL2RQF@uXI0g[Vfp0MF3o
%\hZ1FU9X@U14UX9a:R^L%0l[[Do)44#t^LemOEs+AUIg=bnRXTR`Fo.3drU,/.uQb6=[K<BWqkp]nWA=DN4PEW].)<l7?7Hgkse&
%*q#N,\]#Jq:-Wc5=E1OH=SYB:7TLMe><bP/@tiN>[5n*G27L<rNCjUQ<dN'$*!<<I[^=@%-JV;]c)n/f;K$&Yh1.B-h94rF1V47F
%b[A>UUlgW\3kM"fjbRKJnseqJAS'^+YbgIYp+!f+e,%:shSm7Dhh:h(4l!ItC$Gim5!gnY#,J]s6rP68W9b[1obQIIhn:C&Y;jaF
%Y$<;m2fDl&3:tq2"02H$>L&bi##'%[XB0q6<0ck:s'L-Ag1/6E?&@Fa!r*iE)!F:+Qt42udf)YCA7+.AMhL;^0ul']MT$4Yj/VN:
%FgkoWf2&QWp5Y(ok7jEF_^:=nR]W_mR?@$"*W*+M>mD>hK-!_iLgkc%Ak<LJ4e>N!0V1sRfa$>/W&U#BfYWsURSF?#8GTn.>o*pW
%_:3C^XEW?NmCbIhHQA.AI)`Q?qGb_'riOhm?/PlHcIHUWb&uXq!Z5X"/sA7pK<m47.UZS!<hDUBC6;nJae4W(f>LC=?1nXS8r-M7
%2:i7cX2G;a8&Wi6c#'4`A%NQ^W^SVWF\"&,\+u7D"lP-5k+*W</V/>#CN_^M;IJ"Z$Q!GBd)49.ge@%s"0pJ:Leeh$AJW)#AqXho
%BMI1<EAg>%cipr$"l"=H%MOdbIRo0)[rL3=;B9$5.&$F"<%%&Zm'u:E=R>=GW6,*`8ZN?h(<Y/Z`Qa0`DcaAYRm"M8ZZ<H3?),Vj
%MKnlB=H$ges&t/<m3n9G`((+IT#W->H>OI"DOq?U<.c(&pN0h;?>CUJE_3KO@GQ!XObI1&US9#fJuiFGgW*Go_Jg*cc':sXZ-\N'
%Rqp(s[1<<nqREURh-:D,DDGOfJ$$4#H2r.n+E:8(%9DZZCZ`mg@ietfAHF5p:j3]\dE&:a:(gRI#_fj%s8"cZ-/oR'K[3#]qCh`]
%HfW+?F=u@^.9rRtS/S!T>mGTkK%nHnF75\IoU2pG[IQ%k7h^/k<V)lN*)2g%W-I&%it^YG20qKH.oPjVdHE^e(j6D&[EHEH2Lja9
%>.`s$-)c24!6=ub>8,3W+l!;7DBJ^#QF]-Q='tq(=cI@%:PiU^h<r0q?5(Eu&a?Q;4p4l'708f2mA&NAU'A0Kb2V12c7K8Yn2ff$
%-etmE<P!/BCYZ[S(kgWk#03(:]^@?OiACERJ(Nae_Ba[/P26uh4Xl,LJn8Z4N2h=W>""j2p#@E#EXp$14^;T_F)7rTrI?i=AmXM]
%/M40,%nW>K2p=-jYa5.V[9UcU9CffTds5XVcLLS!h$q/Eijm>/7d<s)('H</)L\,Fp%r!/Z<a;"O(u:6)BI0VLG`j$G3H3W:!W8V
%,B3Oua@u?NU^U"cgW7Gt49I-e'%u])DkiV@(eZ1a_7-VnQT+BNc1=C)Dr'k:1.i01Fpb]E#hR$sZ'QR[rO"`'Y<J;T_S-s:h=o/?
%/C+Z<Z/23pm_H)dVuj80pf0%[h^%pf<5b9HoZYH/jo:uXg+\!qNs<B6-W@W!#^[*g)4(2AD7@9P%)lP.,Q>A7j?E4l5t$rIOfm(8
%rQtH2Sm'p3ebHVX9Y*;B0b;B.A:6Ej\Te8(oQIikF9"tk\&1$bhS>Xhb#'Oj-YNhs<l(?4#`b`"c'p.11Q#AeHSbs8)D%s/lj=M=
%/06;ng6E+pr2[GKM=*tHRqBe5NleITn*c0qPjhl3heT5mD!gNI5hnOX5dM-Vd"sR,@)u$l'SG'P/''ERRS()E3p-Fg1mbdlES0>X
%/T!eU'QM\)VK%Nd^njc7BQk"C[XSBXY^:8j6\Ff86#"n;Z,4U8b=61le[RiVp;IJa(7(H`-t;kp%/ZjoHZH:F:Io\5:U;G(!KP&/
%l.0;`%bXK<)2G0q#CP+ZR?Ni2);#Zhk.%ZeV5VY_'X>I[(`@>&pnXFm/rQ3!*&k*T0n]?a5S"5obC1t1ET=,tZ,8fSr%hH/i<Qo?
%>uE36ZSe8!D*i`b\A5b#mt)3Wp>Z'nA+Bhb]fBQ!e7?5GXLP>1m-\"20[!48@1;l(O8-Bn5@k5Qf:H_3]k(tA[U!H3?PKcel`_a&
%2M2'ZDERVr7$J^<h/"?FTP>e;/+eN]Si@!K%^'d3AaYrn#fCAsE^qXSenns`i8m@]M!f"V3mjp[$*W']7p'X_lW5*KnYh0/#B_:U
%3OJ+?;/Dm;Mec9OK-*iQLX=K9@FPs^,skj`")Bf]_6o6Kfr/PZo!8`ukF_Zj3Y+`$DF>C!UNtGdQP:TX@AD!e(i`Hu3&25PBm:kf
%.Hh"]Z]h&"#Dgg-XD-lnl<m=-]nPkQRC?eseTDJ9fWkHfTf<o@/F9]/[-F)IqfeL.NS.&Cdj7_q=3/mg-r2ZjFKJ*1]eloj*fNE!
%DY),i^r%##+lDu)/TI$Q-`/l1@s#g68`^:hHM_#5;/6\r:ctsN^02mdhKt^u@1W4iB7SUk-KN&n5#5Qeb"dW&6[j%nOcZoDCkl*^
%i(iJsYFkUNoa&%63(kuGYg3,^?8\<)!a,1VNg#!Q4cn]\#UD@7n]5nrTdQR;T+(KFQD]8Z/+;U?b*.h.>F=_B-Vo$-!f^TpfLIJh
%llPb.2VP&1KJ(8o'i4`0;9qDAcMKpS4;khT3M,8/49gh,Zg`s*e#,f9Ve_FQMWQPJe/nuZM10aD`7TD.M?4`t(A+WO/SO_,rC4$8
%;9\W0Jl:soF>B>1FZ)V]IHG>ZfJt.9)b/YY:(Q7[ib?]3mh3g,>]U7!0f1Hm(N@uU,pS>4ES=^dgi5a7me1'1*dssk@,nQI;&df>
%#Y,/47])CK1RG(_'4fl[goZ=gO,'([C:ju,Om3O#PH2O.h78(UkKpQ_1qU-IL#1Qg**iBk`P-W[2Q]80iK\bW.W(FqjhpaM2l7EJ
%_8%'bkMXGu7pT0=DMD<3oE[hYTNm.4ACkf]:4B'dd5_[m<g*mSg!I'<n%ZBB8&)?H'6@Hp*\u7+kJ%g@T'5Q/=5kBm[eETr2Ca<\
%21KS.8U[P<B9$N/bUcs5Uh5$_/d$0,+PO9D8i%N4R.L#*<]AA?9><pCZAb/NN(*F@g1aY3Y:n`?5!j+2GuVsAH=:W-cW9N/iF?#>
%3/[Zhr&,MsB-8-!npY#(?B;S@Obn,Y5JP1(ai%Z#WX08WOre2h0Yqe]IPR,_C5e(T\W4<F?(%>91,4f>V:`--+J(<G\p,5UHL"sl
%CWkYb.?f)sE(eQ",XOguZaEp3*F@DENO>=A7s(0WS?4A;<O79C)IDadP3\%nj"2]brDN),Oehm$d0I\4X1Ju<bC-8T3R$7r^0(O'
%]`:Hf%Vi3K_mkD@#>:7l2@DV@0"C;[4&E((*:1YHqhD**:>bO5nE=VA`C$&/R_F3^:E$:q\@g0aH>_*@$uZ^P#\b-CkZ/ChM_pm3
%-Y%=eStNBl8dd_uV2b*`<f6CZ>-^_K;J/R6b\=58\ks^'gM(<hn?K<@[tG*0`tY?\QohOf\6[j'?R)VUK":SFOj:G=q,en?eL[ts
%Fngt=H6$hLm^R$A6gDi,@dZC0f;fQtZ.N\bbZR^*s866]qjB>D9l9ANMQr`*Ad0@:KHi$Fm1RqokqqAP+U2`oMCOO8K5)4tDNj5d
%pP74,/k=.1*(i.d;j1T1BjZ$'WLsg)FR:BDD%$0N(*g=oGnqI+m`DC9Z^Na+bo`Q02@QB:No")6.`sbO#)B4jmt*Bt=>nXAa,ob`
%/(N(AHV'b)m"oUECcHOgo(6X<U3\f8CQnG^#f=R$ZK,m<;]b'V"T_D<Q9183JOfuM-!fA1J[aBF()STP)LU>)ap2;pH.G9<>s-)I
%YV&Yd]8=(f`+gAq:D@'_AGtt_%V:FG9B,8-<[g$iOmI/Jd=R\7Od.1+UERUE,U7W5++Y($0eBDrJ6f/%XaksIAXt,@%S8Yk`5EX[
%n0K2]Z?)o2Ic/sDM7,0W>^$)1To$1.T]IC-gU(dmWb#YbOdbB^k;me#:^7S`A[)5kX/U+c289EI'i-jYW'&/hmb]19q3=70#+*sr
%F;=B4kt@IS7Ad?Cn\Kg7nuG.UZ8OVmn\FrbqA.^R&3.$$WHa0DnSiOIT*brpOT><)oPM!4b@(:K'\hD;NG:Co1W:gdFEB'7>::QM
%CQek5qN_epNs$5cSO&#ADBilO2`%qj)D4jcN[JZ#Z]52_Ga4E_qM5Z#?%LZL7U*9Cdg&Oh@;L+Wa3*-09sTe0)t0F6&X2A_P@eJX
%Z`k#GF+&8m_Ytr-[ao]Ol$KY8=('p#7M%+$Hp.2-io+2"]!7%8h6:g6O9F-spAKA_]QCM<jRFkQ.?EG>p2IrqV_A1'$)D2d[JIs2
%f$iCWh*-#;S#f^-/E^<W;#doZ>uV^_\M_3ZU(;Y^%^?q5_a@Il3ogZ!'BD?OPOJpX@QWum^3<:BP]N2O#'P2I[mUQb3'-H[-p]g0
%_TN5NTd&!M-54uIE<Dl7K#:K$=l'\skCd5BP42;URm6Kp%Pn7Sq#)Y%/Q2"qqgD!qj:>(Y?2JTAa@_kj7F<;"S8rr+O[os,Z%tR!
%6.N#'Q^d;ohtr?dkDH7#[JNs6s&u<W(@l1iB"YZ-5=*JY0q(1VF.[S7TO-igcG4eg]$3i1$uce;dQB]a;Q'tlK?m:.dW(5l(YH.!
%_]S.j>u*-%i@h+J`^WX)XmbB_C4-?ED1;U(ZtFFtf:p&]2*M2;pt(:Ff#;dufbb_0l0$QSnZobd`73grgL3La?/_fjMSu897-iYB
%,*Qoq&h0tYP)mhU@9dp+TVut(7%O^3NLmS+c-@W`R4D.Q79.1/IMMJX6u/"*GNt$-6m@Th>aG?-_+J4JB<Yqo2g&>HCL?,_1r"C!
%j)um)7LHll3Q/6LQD![<6!N,lZk%[daW_o-3t0O:^J0ag%AV>$TAH'oAXr*X1=WA$&J9_,na:PCE)TZ]M\Y-LnG/d=/9B2e=]rW&
%4d*Hg'-H-7R)7sY(^6N@ZPD<3UR5nc:%I_ko7TJ?1nsus57.W;"eX&T0n#6_S.@D3kB&Qnf+!C[^FKZZSMfhuUhplO0&VZZrN'a?
%p3Akcr('c[>r21bi4o$WIol)eT4L03n#R67hf[b'rr%*"l\2tVIj#@#@'/k"KHSNs.?g9DjXGT7o+.qQXs]KQW)KW4jehguNE`m5
%H<Kc"e!9>C7916"Tg,(*gMCMG]`$$?+Fj9q.2/k[C&;ha7p+O!pJu6u`$:37"j#Oaqqd?_:YPi;raQK5,&b3%mU,(X2Y<R\kpQ!M
%kJ]-3*$O3kq6cDV^DS+0cgt>4:FGMYK8klDUm2/$n`qD`a\Rh,bUGrB*%+dErN%&9iqq?An+=df_"8#IfUPXOfIp%:$b2OBI9,J@
%3>JfiUlf5p#BQ4Oq"54`<iUFOp1`7JWS4WSUaL>^$i'A5e(k@8:`,TciUX%=Vr?5tI'644.[]8%(m&pAo#*/($/`MkIAb\"*es-&
%>@HfBlLgfk7\omBCeWaLq"55kqSJ0#!6oG3pImd$'.T*h+1h)Y4ZIOG=f/<6HM].=01)6tIq^MWVVV\m<b*c"meIWojDD1Rlf#W5
%<9RWT1/&W*\Ykg%ISWC>7KSk;<1kpmV<jq(<<s9s4A3B",11T(`*_^&fLEIu8E442qNNonKYS5Ek_K">;>H_L*YiHs#:qi')FIV3
%,S%_j@<mUQqrX<c`Q7nFe^r($$@NhS(tc,k7#]#t="?Tj`7(k)GER6*H<8R*b#0aNXsWi"Srn3]CW*iPVr$:^9q5RgI@?*Rr??^W
%CGJJ=2g+S)hVI7OBjE;</<<KY]35n-ap9l9R\>c0rcm!QcRs/is.tnuVPH,o`d<cUrMmI'3:[5q-g'n>7k-N/90`&.Er_PIluD*P
%cKX!?84llc4mVTP/u#6aNr<V#L3\j32Z1H_O!E8#G('/8kK"=-e$7)c#Gk3ZIbm$@CN>Kq:A0gteaks[\pE4'7TU]+Of>8QI:Vg2
%I2b3=oX'StH@":77ShA-aQVl6*uS@4ZBKN7cPq^bot6?UpW_s`rdLbZqnFTM%MIFo9o8Td3[J*<^XqT.0J@(L0qXA_q*[(3H%#s'
%PSV$S,U-+NV+F'a\'mpu;`^C9I3c*]9HniU0Sq?.Eh4lXrqRNXH=7/K&*e-AOZ)ZM$IusPHC.%ulsU51J$.7<q>O<kp$_-hBJqrt
%l*SWR;I'g-IqZ1[iPN>srpKHu'$V*[l26Fc9I;-Oh#9#dCtQ0A80p^/$J[XGlP_ot1_lYNT1XTirMihTC$,T*n,q!PGO9;S;q0)R
%n6fFHAuH4U)U4';RqlqA32:T?JYfHGTX#YIgWQ1.,)EFqKAfE(;JF6OR*uec,Dtg."MP9S"*u^OSK3$'aW?k9'f5n2qr.b:+YKA4
%4bE7(gBW]@M(&gba)nP(X^nsA2NOrHE.g)OnolgsXj%plBo"h'nu?h%]R%"8,[\#._6)c%^p[hZ911QoUQH]CLZ+^b;I*Vqn4gLg
%@Z$Ac0dVt81+f:1F.`^:A4B0HqdqdB*osB#cBPg)SIba5RkShUJFb54!3Mmnm\>gbhu*'@m@38l?eddCq<G/m7Jj](JBKj9*oFa/
%kjp`ocX2'JonuU0q=s[WmDEjL^:D(dmpH#.T)9Q*jd@o19_H>S;Z?m1lXgI/j)8JZKYrr*[^bJ2?#KMQKV4@2FRFe)(/Bi^1nDh$
%XPRp#\]R8L_W<7;&%YP`*-soDf'$$-W@M@]2L00G^?%43qY_#GJfh(\/u9<eT<R4i-T*kgoW9T;<V\m7*D<kpKQN:Q_G?HNMJm$/
%6Pm?+M]]/XW]D#h\jEVk.W;+uYkS>TodfS9VQ+48=\7n=+1,h`ijndaI0FC,OaG1)BD'U/&@!0rZCLZF;^tNEfF_0R6e;9m\pj;?
%BrW#Af#7j"6;P<Hl\&W;i5dPV$BN;WrrP$jrSj<,;SPVt?0$Su_V)bbAu[ZcQRO^A9UG/s:8tmIQM7[47L6HD[7uVCrlcB+#*0\O
%F.g!,50'4h_A+\JrWIY]nh+)U<LeE79eg2-Ze9B59gtf>UaVVEn(i89;GWJ(.2$62PX#*/PK*&%:HdeMCBGTJ]%:EZIBW'YOPV8`
%(8/G>c-$oqD<p-)[M1q#^i3'2q)@d@lo2-1M>l3,g[4H*^\lu5[r8^3rpa&C^V%2<#Hn(*k/GTsGE5gt5(7YKq#7mSH)9C^]=G\+
%rq5<rX$8_][7C8UjidO^Y3OPMDm"P=IrkLBX,ij$pAM%ok.f7^@C^^Wk3CD[hV<Uu$he9+8#O4(ee;u?DdW:Jl$fM8hHW4XIIYiH
%eR*6ZAMhu1rVVuAKu[0DGkh<nMS+<7lL!WfM[L&Va$.&kYd4R6f(@VPh`O*;Hh#G^F.;L1^O,mU!^D$\rk5YtIeEKdQZmY7GMcBH
%kEq&(^p[0kqI5q`5*VZZlh8ZZ]B>7#&,hQupG[#?J%,*meb/MMch1k7p#J3,rVl6\rAPP)[J'86T2A`e5PYh6s"aH((>4D>Y$XA1
%*Fo'@m`0hQo$seQq_rSc:7kTja.>`+hS8p6(@8KNO3@2d=Sh1_N5a&`LOXuXO63c&jc?Qha]GQ,Zf?YB$-[YK3$XT/P==Cj(&2%l
%s*p]=g(0lq-WIQRlC/aiQWMu*n"mV)O2f9YXKpRi@h$7(48nXL*5q>RY\F'PFsc1B^U<`)WV<bK>c;rYVc@Ahm;MslK2qrV@t3_-
%*I!oESQdp*6Es/MQ/"Ip_oVBJE'*ddQZqkY3[M5*i)590c"*9nnLlSO*p]B+bB9jDCVdB@M_/-1oV9`Dm^!_0*^?rE&8[4ZpM;j\
%\3;Y(;6M'f6[@[QA37dKr4[(SgN"eAP8=-6^J1!.lfWJc6/QT^Tj;LS)>:A:+8=O[V!6X[q@f1V$Da/k_"V$Dht6^G!JSCLFZmKs
%O5mts]ChA8UsEu:Y52t[q"(V"l?E1$,`(0pY<(CPrE8sZ>IFBa?7)"L&_h"C1YK(K3\#8:](5mGVZGsTf^F7G]bd<@']lGi<QaFF
%.P3l*PpkNqWme4Fg^ZF?_[j5!^/]%GZ)\([nm]S(A'NS6H,J5bRn6__AJ!b;.p/d[g'0WYIcNP^9&Z-%hpW6k*WD5tpHpU0VdsbR
%i$a:dC/^*>5Gs^;ZaZ:LNL1;OCg#9]+)#3!W?&Qt4C2hh3E_KB%;HuU^9N-/jT7H<S>*ubrlnX<q%K5h:fea7[$.LgC-PbKa5TUW
%GcQ;&Xd[Snr;$?[om8q#keFcTq55&,$$s^#r6m=fIXgt_rltIhIhU7J*q#\Qr93b8&$PEi`^>r)DR%.^eXV>iS1:bX]loMAIC4Ll
%Z^\)R=+Bhuc`TIcWe5f*mTY%9R_QHB5.eA?gH&N'qWuDSb5L=l5.c+=qX3kS8(<I!_>)PFr[U%gj;4HE^A"s0[eJh400[/L_k1ff
%s7NRurqkOCru#m)J*Md%n5$d<a$0;%ZfCD+WO-;fG^T>Vc6DVSl+Q!2I=:kLbEpsjmsKD0e4];9qrA8=mI0K2^\k.5:EOL]I!tb*
%Df<@9^.EJ9.e_j`./t+`j8&C;.q$*</Q_s/Q1_np?;8c:`W,N"`UC;+HN*;<h4NiQTA8H^LLp/G?D!j&!M@,P]R0X)n'H9l^-@UD
%#M#;@GSMI]?Glr4FUF;pmMDLDr0r32oJaOr9!R-0q\L7P1Q!A@qdc>X@ikY]X8DbhlSjS6ID1[4aEQE5_P1Cdro]%i?f%QVs2XZ3
%YZ(2+SWhe#rpK=<gK2.=nb\[EI_9O8pY,`KqY_pGm./1I]s=?`ci<4eLH!Od^&RLE05pA^`s:s4j"j%*q)0>*.'HnC^\hDl5BU\M
%HM[Br6VkAlD*E=*[XWGi=6!fRDg_/#ciLn2^'SkA=.d6UroS*:dE@;H06%Btr!t`i!9;29SY#a;p#"?@bK#C;c\_Yd`?4R:?bX,+
%nU]J3+8kRdO0?8tkAV;$J,QVGab5V&J"*23pAX2oWXaONs52^`C7X&?nB70-D]eCR]_U[6RiBup5B9"iacB3APTTkahd?EGj]?Y<
%[/<^,g#J:Hnm<I+?YiMcJA5E,,(l:800esHS,9\o`-V+(YI>#aIfJQVYPcuoIJikbF1E2"GAhB5g03u5e09;'>5[pQnbLFrRp^@4
%k4MNI-9mKIr*/p9hs=.pro*\O=3s%`;l;EtH?@nq*hRrXp'n#P;nK_ad\sp0I00KeCZaM_XT*m\SQ$T4I>chYir=GsqKKDe?b^m^
%n2F-*4]afG3t.$+jjNYf=+C1hDqWEQL;*Y$[h;F2X)C!s^\cg=qI,l:^L?TDZfAdTNn!HIn5J_`\M9GJaSj<:J%kgF>;Yukb83tI
%a1lsG]b*L.h"XP9NM$2rqY!'qdLEC0s/1A(e+E>3o@s:I7k%[7q9-7.[s+H0E;p5'm\JupIWnL"GZMV=p<dgIDXN!`9B"2m*1lV:
%<eNt#P2lHSS+SG$S+W]B?bmuK>tk]`)8#31Z>%mE9?m@Oh=IiMn1@',QGbBR;f&&7iDTQeI/.@f7^)90s5qeNkIg5sF!RqQqW-b]
%T3<2[g[W`R]XJRB5K_[X_]E#H>Vd^d#pH)[.Ft+5s*DAiH$o5FbF?PUY&7V'^O3[$=-#_gHfq/25MhBG^%:29p[KdHWQ:]Z2GSC>
%kG*)=hYHZ-kD/d,F!m.]&%m2#H1Ca]br,p<J)7p7r2ZmMci;Ng>(#Spa]CF)mN/jp5.nS$IH].cpa1fp5(3=je_<#a^V+pkk3hd8
%^[fLIhql%qH2i&6.?q_CIt.4h&+=i+Cj'?)`RZe_=S%i,p$2@.VerrSJ,]9YHanA"cea\%<5#m=C:Xe#r9LDEhnF@rW],5AmC$m@
%$f"5.]X`Bop!=p*r8<W[[r8^;q=<\Ik/H_A%R%Jro'MqDk:c8+hS:;mgHGE0c/Zus*m5]hnau5Io2j]!6c\aNgYD[PlbKi%3-jW9
%j5'%5a$8Ed^&6pHj"%&hpGKGQd-]#sYO9-90IBjCrT<42j6slJIpTeC9>#TMK!fq#RQ>(7rN(Ok5'`l/rAb90GAl?\S7/:Tl^L,r
%4j)KhS(GLlZ37QMIhk"O03?b4_?';PXgqO'rN#6#[ags<P$n=iYJ:(uei#\i]C"jt;2>*fH[P_@qg1JUG7sdmaIVh6CfoTOc5T'0
%MAW006.%6D],a;.nm(`c"LA^R0]uoE;WCqLM`[$TpO8Dp<"ABu-86Pe`,ud%,Q:-E3'`R6K4SpRMQ(t!r'a,a(\`fHa%#1(W:Mq(
%%Nb7E79"MJ^1#*j<C4?UA7AZM\g%u2m<u1]5hPr*@6c[;!)ouAa#&\-O[JFT7%RcH#oH+m\hKW0hKT.LG-BJAa=H\tS@.e9\Pmpb
%r=[Y`@MI,8(kWn1,-Bg-$'K?T"`OiM50!G1`7SVIe15,PdFC6pm7b3l!Fa)<o(IJUAG==\%+"n['!,,C@GU2KUb&ne@5&U],nt]<
%WTl2bQGTlH73(,O&CnH'\QEZH=;\=MTJk16"!\Bk6"K3]&eN%nK^kX!&24=(;lfK&ZkepeKfGE*&1@ndhW]E^#A[ZX%l_>Q=A(!g
%jS(1J5r`g_aio2/9^=)M%gADgQ8NVA`*CjNN')ST3YJEt$VJP?+qb_)"6gSI0,6I@DMSD==%OO#2T>auc[68>RRE7t(C8\=JM7*=
%OODl?J6<rsnHd/U3<RWu[Dg.3C,N+aH<^;)14-#?WdV%LpR%PD8?cN1b#s(P'^7W"d1[-Y&0[.l1c*8O#lnDJ^+u$l;@mC,G1<PU
%a/WQN&VJ/c=iNs`8E`GqZHImk4ounZ16B(T&5XOGosR-l92b;jZ$?qQlDc.%`n;l07sq2C]pbJV!A#m$O-RWie3pc36k+$-:%'/l
%%]-fiAMT;9.HF7ITr8PgZ9FY@9A<e67Kj@q!!(O0,R-M/==!4lDOPqE<>7=BU[f+;F**o/.fls:,\6m@MEr?n:;_F7bXV<.N3:u+
%GC(kjZO)L"#o`kCPI@-1@SF#TXUWrf$QFo#@Vgh-XQl,nE'gZqOh$tf2U;Z;XRX/4LubV9R[u&BO/t;e0S<5DH]?-X3/P84hL_rc
%2('Thf>dJ*[JGD""K(a:+BFIEX9455k7FS6J5gEF_:%*.`?]>:mM"Mr+HgQSf+da@ckC@g77_Z+ojY0$&WnM^)kKT(TU`N3QVEJ_
%dP7/1AAV'AC/fZbCnZ!;?WQU`9m\V[_!Go'P&bLC6_[.;)7(_H?,R&RK'3FcpDU[<%.fng6kV7uk^nj1&MeC*\F"2,?9s:_f8t52
%W%g0;W;!fsD?uFgF%ASWOS<t/L#H]K[jcZXfb5f,Ce2J;#_\&Q;+`6#l5a+s3X<P8:imLh!FDk\&C&go`3-ll=(E5u@pr6a/3p'p
%^rRW`SMQ`A2\*o4ZV'!;XY"Z%g=k2rd]f$h(KD^n@bE<RYKZE>6k'50>78K4HhcTI@q84"/d09H+:rA<;O]nL&<Q'+,B42k[/o7[
%#%Wo:1-aF$;'b6O[dT?m!E]k54K!9raO?$q"sl^.2B.gE2[EMXfITp"k&JrPW=oeu(-I[nLH\%._:AdO,h`QM&Jl4:!t>&fA&GRe
%PKaqnZ.ScaJLspb(J./Ba-n/%-2'MV2"6StKkZ"?W?FoG:3E&=fda`d)]$5k[oYc$K&d\<8ZO+f9q"^C.`.BdcX\L<Jnsf.>2c$C
%O\fq2Z&U!3AHAKl@XBr@A7/fHi,4U3@N[*P6:e<b,Yk(!_._h\,cKbn!X^M90Wu,2QtdXii41Lcn026HIC`&#fp3(,6@nVfdk`mE
%p*($$KV[@aoH>rlfHZN/,d=#r%a__KEo^8aB&jj1"`)*?MU!8<A?=3N6ENf7D!e:WE3LgZ+"8pobGn8_<(\mCU@#91q=Ehf[842p
%<u63FmOb@HG@XZu%GM_o&HNMAi`XC#09D:/ko0)/Au_Cpk!DU"54Jd;"*?Edk$8Eg)9t4;\"R3jF)I3"-29?nNTJg4(Asb(H+Km8
%F3Xp'"G5AsK,rT,j<cEde<;=l1U;!Eg0GL(L^n,&"1UNcJeK7Qmh/)cm"JFb4F@abD]/B;Mofr7@`IMO*DL'*#_9T>WbDVeh6q`L
%T.Uaja;bFqlbVN-(NX;'&>YP.Z;s4<BC$7qEf^m(@6R99UMQV5OGl`^-A\j-gIM_[JIMmkdH:pq[8_feo)V23-*%5'OT7=6Mj18[
%)qV2&UTP0AZ/J6bgPT'b-OVP:JKk46.:RVcU0STt%Kc<[KP'mI?@^!e>EH0/#S'7'Tp/.l;\T5[XJR*_JBYk(,.HU8j+tc'lX+)H
%>@E3C#KQ8br3h[7QH$s['X4_'PsFK"PTda4jr\-b@"9]VXBcR/g/PDc2+a(K!D`h)^^^XhaBO"0J-_-68PM>iF)aV*MfE[C`5N/o
%*B+OA!H"+NKGV3Qn//sn%*UhA)KJ5eqI0VVTp'0l=U>nU[X#X4mA@puDJB:V:[#b%"FD^7Y?sg%+;lk/(l1']4)e!9/s112P[-he
%S<]i5<*"SV;%lBum09@L&rd&+62ZKiZ5^1k^sEl(E80E!DlMO:Cks7KknF2N[*lE1e+*25LcjKYlro1hULhQB&P"[>d!)`p@YfS%
%9&>[`lnLl%A><\UG-oJ)6imOt+jXNn?o0#k,/l12btY?s<n!3[?jGH$2ImW.Z2Q%%D*>WsZmbB+Nf$QLc82c.rZn5\#t.+3]Lohs
%-=&s8"L.9KPu:mSSl5G*o@lT4`rZ=H/CJs.1_:u)VFE_hlF"RTg)a`^N,*tNH%p8O=L4/7!K8o3/NuT=BOW[Z\lSr,l+m1Bd;gDO
%#mV$2h6hl4=B,!^Lr:HEGGW"S"M$j^1]hr,F8FrqKeVVNI:4'l;dH2$r!T4P,qC,T\UdH0XA>cF6OKjKFtDqDP1LCjk:*rdkE5k'
%S[k;fI#LWULhuWBfWobh=c,@CP@b#[+<hs!k$3a;c]i/o7=Z:u>ctRVO<#S3`Nn=HL#@5!\U!A`@-+W=#UI#8r%T:>h%Cl'FHmr#
%39JRNe.>JsJcs.3!A+Ua-5VV4QfNrq0@*NqUGp:U!%H684M*A&5^'Q-/(e?OJR3>=6L!70(AM(gY.mA.W[]$5>oVYMFNZ#Qi3fbO
%<@T%:KBBQuFBs54$<7aVCoJ8U%P'!^b[Z9UFNpcOnnJ7EG9'W0D*09iNFo8O#;7Q)O0-ZbB:`mjcrLeDY!i`QS?VS=RVd)Jg*F-R
%AU"#>[D@T^eaDUt4Q5s83f$e2X:')LcVqH#5WnAr"<(i(&Frde^QCN$\7Iu5g[",X<R;OJ0@F>&]f\i0dSj@_,XPVtro+D?<"UBW
%Q'r&B8F&Up(]L.]gsfK-0!u5>337;'H=DFZjh9OG'\:[+koCP>3.o-[mZ5jDqi/WS>DB!f9JuoG]*8BQmABU[d]s"%c=P/s!*QQ9
%OjjT'&Lf2\0U4&Jd\=IcXV>fF&VNOVUfMmtl[qpr:4Y+\ZE5fq\HLW?+,o%#^>LN:/,)%IS8+']Ns_9hdh<"t5Del+l/8CEe.kWc
%o=`n(7^.#^%)4(iEkruP9n0fH&9QIWQD-$1\Z-Xf"Lp`bQ:3Fn>H]L+F^V#_YmEg.$Y?e^T^+94>m(1#`U'8+Uos/`(WH?/V\>7%
%(/7d;P4Y,Gm?*AB8:j7(NkifQcrqe"g]hZ`YUYahd*IuTH139dXfQpe5ps]4Zrpm>0O6h1->>4;YGI@lN^8l#8*;[b>2/_Z&kip>
%Z3`4phCP?AOl!*rBSPL"[5P#1C==A=$=k?L]=<$>iZFt8J^r(8E\5X]-!UkSD%'GA7b11%IOH\IOnKoW%Dh\jgC6+VD$V_5Si2(<
%+C2>(j[9=s*=l^(cA+dg(Qr=Yn\BS1<JHr!aEX$;]s[(CQF2k=g)ZPECMZ3mfk[GKWAWFU`-X;p#GuM*op=(J9/gF3Z!I^d:,^kJ
%Z?-RMjr2k!`L:OIpG@muaa0#ZF,jT^4ar!OahFZW4M.G**11i482Wu/S;us^Z@>a*kpF@_,_'E\V4(Uhemdd2%A>rP<YknpE4/WG
%;,>_["!8`[Pf8SY);.2TJ'Eol8Hc"lSSI3'NQ,e9"'JO.o4ieAGuKPjM&hgmN.k3qL0Y3SMVVga/"[W60WS6<V@X>$ZY13kP/iNT
%H-!4*PPU`]aVS3boR2Z3S_M$p[6r@0&:7D84MDYsm$AhS`<F8sa.e%rb)7qFPgn$\#Buf7'K&:gY;!XKVCl44_1lLn=l:3D+r)nq
%+9gNYa'e/*%iB+k"L'`bM%IU]F@pDS^ng>c8UfW!C*1n^*s2^%C-poj4.ebf<nTT-aA<ULj=Jl-DF_(b"^2:d?,RscbW19N[?6=1
%Ji93&P+;tPRjBEQJk[fiLa;\p[Nb-p)kot]A>:Eh4E@!.T5-Pl!SB/D9&`Nt,=Q.&rZ6-9&o>,Dp^MCB$;G!>JYa%uctFL(U)g7+
%(.?+saF;M\=s0n8;NrC^\B_L!f:q@B.h?e?FG1`t]B0VH:L\5=9@V<De"-aGf;f@cbq2I2j=aEc]F?cC4FC!6#kOnu+a=(b-GQ#A
%A-N-Hm=8=Tm9u^u+Oo!425iJi'LG1:8Xbl:dtEWiCJR8F_Z?Hq]%'8Ck>q8O*0D$_6->T'N,&^?&77um9Ea@i#p%5I7$*lqUbp;X
%-0t!sKd6iXEKJ]Q+r4\hmBB5AiH,[T/V$r._X%hX!2UCs7YiX@fnO@O)hO#*aFN%:fT2D4K^W>#H),-(B3i0Sf1Br>kA8/AHdu\)
%^bn#QSJlV2-ulD?R7UJ['UZ'?^(\S@^>KiY!=(\?'O&ut!5Z,=9M-oEPjFWOo@$X':,H:.nXA_)m<cEJJ:4tO<[qUB?j]a46j;Wb
%&TmV"Ws\M#^i7Sf;2#q+lullP4guXYg8h:H\:n*8S2tqtY0el7'P!n@h-*)HX(@bGOIB3X[BktQiX7V3Eu^pSG=0qpqIQ794D;QL
%DAmA(32Qisb)9PTNADL,I&b@MmM#Z$Ik]>l\Jt;1qBbqa$aG[+mK@.V#9A3=Q'e.#1`@W\3oHTLn9O57\4Wjn["4MIb1JD4J(Oh(
%X0`$qDcG`#j#!`kN:*+J&i=Pr(k9fPU;S<1*Se0k]hDiqo(jo0NgsgG2!5@:H6NCPDgeJeQ<'__=VL0^M4Q:R8RDgg98F.gC"eO.
%>#V,u.T3p%>#2.\'VLs@q`Boa_[b#!B:%sDf1O-]9C4p.?78X-YKSc;D2RV,W0(N>-:5*JeDdML>I'W**k.G_bOmHk_EJAnL14t`
%fQ2;mnS/722Gr3i>DC?3*Arj-,.q5[&&/b(cSjhM20j=1bE#%D7&VbhBcu`L9gI'P:7]U4d=l1`3[1P(edJP6D1K!9J'D/0gThWe
%c--69kYh<.=`;`ELAbA4n=i&/%jiuMTR^$I/KgS1I"e+=(r?\/ghkj?hM^aJ4B8[Y/?r'*C?C3TiJ0q\@[W/@74lPWrM'0PJA,!H
%d&=:f,@aQZm@mVRo"()>0u-[IYR>GlJ='HH%u(WA9_JZPR!5jlGH'A/\%7r(Po5Im=?/l&%D;tX8`]7-a^PpWfepmYle'o``PrcY
%AMh_7h?rbgfQF^8f+GcbWXd>*m)8";j8d".noVrj0p&^.@9'07X(@G;'O%"N$ffrX?^6NbON!cSkd:I;/]7BU2jRtWq=He4ImI/%
%73Y/B/;j^cKe;pNk`WpGl%IRf6l*B(5sq6ScRJRg%A_;M&X\[TR%0Uk=B),5,!&">_,)Y\=,!`%/bESpTk?4R=-n)=F(e]T+/Ii!
%&AXNo3b8H(5iM?+aD8oH(QuJbH^"?`_.eMu&o%e3ijI'43k`?B[9]/1P=tHYKl543<Z0@pPf*1?c&Pc<B*_m6DNJ$mH!=.&#7-Qp
%p<3k$L:u6k`Jf7=WGXVZjp3;2g<HQMC:'c09h(6!,O]BOX?r7_Kh;6+iPsC.'>Y&4O=Z0o7ET'^d7"n:L4#k3AV4EL#$>#&c&F0_
%+pQ,3RLG+aF<NZ3olIW7TF7I%j:%mm.)Yi-L<FV8IO?@?fcnI/apgVQR^.ba14HFE[50;7.DY;)@G)r?3%sh=[./n&W32`a.Y0jD
%nQp2cTt-F@>F;%6#jutDCG"(!-;)_qX&r2hek(beFQeON-.%OSW.]$+^:7:W'@ka@=#*W*V^D'?X*M@oX'okm*MR'g:FLa^go[HA
%qY=-tS_dCmM.VmneQoDbfb:.V/lOT^78@lI0tDWm]BcWMW2[4XM\l\PNasT[=3o**<OO<&O4u*V?PYd?Z-O*2f-68YIc$,BQ;9s\
%XchU0>?6)ePno(nC]H$qhn[4b)l%9P'e1"$CR4\W\32t'2@EOZP&6Fbo/@!D?.-5-F37;p:SrC!>3b8M;8_mCTPK1M6@r7%<[s21
%D0pffcTn(9nhp.Tg%n67:,55cS#FMs;a[!u_i$]oFU5h""L9"kT1&b1&':)!gb!"Tr_g$H@T-"G]J1084-Nf9fPJ*lF>teQ[[N@$
%&oi&4$rm@(ZaR`XCB7R:]K5LnofhsCG]gQD4QsYHc&jJ@HZ1Qqm\=S]RY0]^]W9u]btCei?^p!_f9NU2h3$J/,0T?^k9CJ$`Di6d
%:mubnetB3h1SGG>8KZS1_8`COf;;bKf4c?hHbq(FeQ0+['RhIm$UO.q&74mWaJ8k_KQ2"=n^tX3?(G'=<N]g'6flR4[:`UOh`/0%
%UL%p/69!At6eAeI(Y*$9gNY:?o;6;79L\"#k@;H8!Jq]9HTA!uGuOg,LH@Y`Rr;8kZcDMLEA[u<+O'#%B?]p`H(F;NDPgt>LFN6^
%2`Vp!!**4/4"T/`=/q"Eb`")iR(f'.)I-L.<J2[#]JsWSOPf<&Rn^7bUn"Yiq8UiCR;.AcaBsL%<?e,PDd)2hY\NU*OF9JpmCR8t
%n?A)c\l0m[J?F4bS(-P,ZFV.JC*Gh];%bIc@p_L(0`(1(c4LP8gT@pZfoi;1:XlFF5/s*B7/EVol/Tr'@Ffb%(JWVXi">#Z9>?h3
%"'b>Z/qU$Squ&+_]ae'\NVQ"g$$TH\Rs(2pKfsQs,?*m5%u^*SZX[bC\Y[TPnuoCO(:ge[l."7sHd2MtX]6H"9D18Q$QYMA*i8`H
%]GRt8JM-T%Y[M@tcnM<"Huup;JWsaY6CU5&)Vqs_UX>2V=\'a%jZ9bsVb\t?s*BS%U8BQY.Z\p\O$SpQ&6U#-4Gu$t!,7JQn<C'l
%1OUPl%D_iN^AIR&64M/LOq(D)f.d4ApTmt*4g]/ADrjr0?C;W9drUJQ`[ZM1kh8;6p[d<5F6'+s+73l.eAmP:QQ"qj>3'05OM:A'
%3`4nbG"/j9hCnGU`Mo!Lqbk>[Kt31<Uj`qabZ0k>;$R2)/st!GT=#6gSS3dj:qduY\jYM0nd.t#n?PqK)^ea!f'^4B"hDR]7Deh/
%^(Er)IH391UD761OtJK\gjmt)kk6:Yih/QsY>)h=aV3Ti$Q7H@g_(7,BLN9CPS]Umh>2_=r9P7M8cYrU]%jFP!tRdH)7[E3eN+mG
%V[[V0WdAIn;n"hdZWY.:#VFgm-6]Q,kWdoeXW)#2lKI#U:!@.C;n5ht%)-$%Retu0H;s<(Jdh!te="iO!-s:9]VE>uSpUA`G4O/b
%nk/#PJ96Fkjk`Po(/G+*3q0g8[c,CeVV6/$\u`jk^T-?43]O</!J[08I^(A&,GQ+8C/T/W6buGZ13XU=rgLCmEo0Hg]5@rSN1X+*
%cFB0<#I/<Zq_7p+;P_iGjh-fo;t0lsen44.iQN7+?er*]eL\Hh`mK&5V,;.@ZTn-1L!KG>A9;PoW0%p7#9%!:?AMFtVC!l:hHS#U
%V4g.t52SV)"#G["X1?B]_a$pfVBj'B^/^(+-\8R$eRS/[VNB?P$F+>$:c#FYFb:YZTUEnrFp[KI,&>[alVV2Q"_`(Se^itoU;GSS
%gq)nsb?S3b47ZdVC[*[RVQ],HPVloedEcj:?-Ldtei\(cn:A=24QJ8^@=0U0H/M82]pLt+lmTq[Wo@6Fo9^N^(3a.i>Xd1VC3c].
%%)XbgGn?FdBf2A-S:H27I^uB4L2dP;2-JSfL&ba7rX2kbHT,d^XXnQVU:qM![AG&r?Gn_T3Om+m6F'FGg<Bo18n1Ed(q?DR;]tK/
%<)o4uZT&UI0pt(*`@155rm\jG,Z7hMoc@D!kR:n^1V74ZiPb]5%"E@>$0pKOA9fPAk?:Q[IQf],hb3*5L$GF++5ZnJ!F-4O+rB$H
%9''Y>BJN(Cfbo!0PgI:YKBA$-78Ha^._6'f%4dWF1%iLpRtkj.oH,2(%qW\9a'C>K?NX6j[PBbp5iDs=cRj`?_H4E`1MIt+>H***
%S"cMRO*"X"[Kd2PB;l9I"YPJJ105:%&se]4]JilN&nSTc$?p_JWI"ZoVP]qDX$A?lRcF11"QPAbC;>.Z#a8Q1NmIg`e6lk/RSXb]
%Pq<+GL\"D6kbZR+r0G>LCc#QP[e^TB4hm@_Y-)oI;*,'dJf3"U$O'1,UkV4!H32nH@YQl*RS62m_-jB>,MG#1+fR`Roeo-PENht?
%,@Q;RUKo>cAlI5lk&,t-<;$5o2U?ePTNWlnjTKD2@<YRW?:9=O=G3@cEf2r+XKIN$dY!qJ'7qD:(?n^2&Xn+Y9^]Sm"7=*.IY'0t
%a@][Eg%)3Tfi7t$r+f>92.1K/``[41O-*=D/(Re&>Qsi2=CeHBF`]&AkF($Ge(RAETmt4b(O7rK3./mjFW66cOdO@fT^Z??NdORh
%#[(2&?_)3U.>gH`_Ip=c;d?/o/(o;2kjWM=>0K_lY8MFrl>i@$PV_OgPiQ#%5Uh&>g[]USg):u3(?8hKO"9ki[%J9ZEqBj#-*;Wi
%2<WU;M_leD't2U?gHoWB-JH@T7@102L@1@D4Y:gF_"0G^bR#/aPd1WslB;,aHZ,?>3MSmCL07=b9XKj+Mm]81C9/aM2eP_gfs)hR
%c=q9,4?(tS(8DL5PgeZc4NJk3\(-9H/A*cYS=nZ$irD]'Zc&uQ=-_5KZ@8[Thcs0;3;"aYOnp4ebL\<KW#EL&K9NSjB\H.K.Z6<p
%(H!e.L%/+1AJ(e=5[`\A]+C4^8&Q#,c8<j$!-GVI"h1Y3pbM.:$`(%V;$8YiDV\(F<(9Qm.H!1;gsSL!@BkU(_u+Hec+up&7Oh"[
%,#[d-;e)C(.NUQ$X?t<V"7p"Z`Z:Y-b;sH.PL@4h8jc*Dek7P-Mh4IpbgM8E=)q<8?aaFT@T[1>@L*SCSDak*%TqL1`gmHaKGo&o
%VZNb?koupKe?K]h7FaPj"*ahjp72K>J5B0%H+#9`[9-uNHtF9oH8%^'d\A6hHSkCt2uaSl!9TAVFPpUJ2,l)qf"1HFN4>ru$mSb<
%oW,qB"6&<2HU\G&U0U)_?FJ]qBsrg-@Smh'K4f$gfjBAu;D9[_"2PXUDAGs[j$\2OS02>f#c?d;U>WlSKCfF92\f9G>J*/LJ[,R2
%ePq@BXG\7j2CpCQ)K-RHhA4eL/2i!C"2>:2P9tIcfW<[Y$!OTY6S1_0LR<Pr>qhFf%0A1Mr=nV3-u<$3'2]Z8)APtnY-9+M_5JJY
%4ZX*(CpfgmZ183]q0<f/2-Bo+S,;Qf'GPjd6lHi*["P\]`[X\&#E4_O10*s_.)ruNfFnrf$CV/MNaX#M:eW>#R)i)^ZZ\!Znd!U@
%T^ccXKrE%DW@W<0,+q3'WdVqEP;]`1"D0sE'H^;&:Z%q^C@P4lOm<:dmb57Jer"`c&fF57Tar1d#>81c74CFYTseXc95]B*h]1XR
%#%D@+@MI2s!/\^W@t?ubXVu@e)JoU\'YICoOdY93`d!5KJOoDsM\a+1ZI[[ILLee$<501BnnQU](N#:$W6PPJas\C5!Q!%4feu<M
%OK=*l'i.&U,EhfQRMnOd^-60d)Omh&=S1u>DYT%UX!KP`PZMCq$JDmo=Sh(AKIf2QL9PHrF?Q&fV,n2a%RR1LT^B13&n`IYI4m%=
%G?A*eSF)Gq/kNK1@.O2,e2KbN0j_[UP^I/C7\507h+_h.etm'VaU8A;m!GX-**FDn]uRW,&X1l1'W_l11h0N%T,>3i@iBKN72CDj
%&+^)l0Bb':dE>)jf>S`+oY[P8R[d,;W(8"#?$:7q0d''?oNp6=B3'ou;?$jb#NUFM/TPYW4>G4-hQt!X'-^Ql,H@<!A<2A9]3f:O
%@T3>CnfYJZ]CF14ijVp6!3UU#B-`t?>O</<+la58U,hDY]bXmTehlAejQ/q=XV;HXKq"=&8]G3`ICpr]$bWr\"X>odJ!"nlQ)7)I
%GNee?Jco-'m8$\B;*'<.d>T3ZU9eA],G&(_P\?M"C32:B9[ZhG8Q(Z7G&&1JC1E5:W9&:Ylj2U$/`u@:f/,h/c(?293)&%_Y+hl#
%KeEQ,WYs@PMRDG`\NtP_HNQ_6_f.F9G?B6mg$88:(EdQ8[4mZc72&DC:&,@J411QuLee=,#3U0!?9;9YlQ@7+mSZ^V)HV$FIgH?r
%Z2#01+qIEI1C$X$9p-t!L7n$BL5Kr(a!=&j)43n]R?!tIbo^N/`Rnu?8R>C653HSjeIk:oCRm"#Z.`#bk@?B,in7AJlb_ENhX4I"
%+M,S\"DETkh9JUVkC\-faD&+3)F?VdA.:mr!)^rV'FGV*e.F9FEN%W=lNi2(6rGumI]=_8#6P;IhuS7n`B!R&rmYZ8_e_`:"kREd
%phq`b>WFGfMGBCc1URpoaU^S!g,b`[c*E.epQ-B]KAMWNrOl=PU:EU]pY"rp-u9C'E3=q2ZoJI4'@e9.5^\8",ZCP?I,5`3gs#-l
%mZkWJN>M.=14[G4Z-@D)8h=[+/3XkI0g&>g$<.<).%7%g=Qk7^Y@'WSiaK_PU(aIlU;_4bMc.!&es#6eMk02fhkSe<%%(=Z%1,(9
%<Ci!.XO!=eH:2;*`c0!+_-PK8IPEe6A;8<!'5AGYABKGlFa4gnB0'92K,e`lmq<Rsi`fQ,Jo@a_[K.Rj?S(\Y+n:8@-sDEi@]<9,
%:QZfc@2Y58I?o0&^f6;?CYK@OHH]ne)iE,DRV,Rpd/;^6Xtl&O/Ng3HNEONE=]1Tj=iHt8S4a?XZGiaibimWJ,9og+`-Eg3OruuB
%>FW@@o.(XrIY0OV:%%'thJkCLE)nX34OI)5c)"]d_;ZVKF5nlIV.O@K'1'Qh\tkF3!1Vk4DtY_:8k.5[IsP9k.?2n6!hJCk(<u&f
%/WaEo6%biGm1Lf1,Jn$%(m@HT)`XqHB]RaMF*ktk(VB[`UNNhd!&U>b`=SHt%ml^hE&3fe\o`46_'9Pgqut_o)q5n8QNQ=EJ@MH"
%i/0.M[^/_uVc,B$93?SBmIab^3nC74h$f"WJ?l;+Odh/Z'1fR!b+6l]L8QSlSW&Ym*0Er/;9AoCDg$p.l5Y1W/&4P`=hZmPen>.(
%LI8gn\j_V*-<eiHVOk3adZdoM@E?&<I)d>Q5\s&g&3[<mmQZZ)+@(8sOCd=?jes0(ZHR:,6cE>.5YsCepW^a"9i3E?ObDq@3Qs*.
%TYUJ,G0*',"4kF[JqX&Rgl7&EHq>Fn\`83]01)iB[JdKuYm^VcPD"K4(a:BWmNN,];Y,#e`Z@3YSl=rO:#rlkINC=?c'aZ]_o9qu
%CQp?s[TGu/+cZUHE>bi=I%H4U2)uUNF_t;:?5cC"$IH#*>fR^_6.MQ?IX'3a12=9IMN16N40a=3HdhMX,SA-bZ%BU7=T^<N.WCNk
%-Yei#_qk]WH%U-!>;r!8'su;!PEuV?kZ7#HI%DS)<;OV+@u`(tJnWh'o;KR@C\0FF;i/uNCk8<LJBk>Nj)/KtMpV=OACab\_Qmtk
%FH+j&a:k1BET]FlXh$F\T'$X^Lf/$k%&VP2:1A3k=;*GQ1X:>aRT5TY=*5QARq?-\@@D0#p,nbE;+.fR,=Qje%iKqfDE',Hor))J
%Lolif[nuY!6_.M8oC`l>A#jn&)U7*Lf,0%rIqL7F(>Q($LnoZ7AU-QmFR=WfV423!fY1"bWjqo0l'c=7TO=d!rCR3*K-Z5RmGKb_
%!m32GM\XieKM9i9-nA6\^A,gM5]TMBME8g<5Cfl7;iPl4$E`5Uoi9jR[#UW$cWmWG9@%'+<QH_[d'79eBoCc898OlG5Xn!53l<"R
%I]%3U"k[U0:m#d4:m+h(hpNTOUNG4.o=QP""i<VgQf=,c,)&Y63II;:2Q.pI6dR_t(<Dq)I!pq'H7?fqWe+)g"q)E4X!53JF..!S
%Wtp<B3m>'f5:9V+);iIXNG]gR0fk5M7Xa4=Nj\Ip3,RHI8_$O_6HBKJ#M&or%o-`PA3>P]3Z1mJ_Eu6E#T@-i4@o+_E7?T8!u[4%
%63D>sIMn%SgaXs4?00JS]pTrs*ESCuRp0rZeB%_1d412LH'+a+29P5_WjiM3bN:UoW2h+u+r>H&%&VPV#YE0(&OS1Vd_T_3=bKV1
%'S&r*D4XX5-;fWS--J>K1_ZsO(YPn4]V)T6%";^M:`*2=]QPQ#fI;9c$jb-FH9DsPgnar)<h9AUpYiupYfMRddOM/F'J,7seDWGr
%j4>UKETY^\$G;nPU(r#ghZZZjicJ[d`I_CCI.'Mr%>Mf1%NArs5X^n0(3%^=L69GepZt'7NaC6j].gm$0Ef1&GYBW=!O5'eht.=d
%T>i(@@JTG',cd=Ki8d1T.7^r!drU4R#%742g$_@IKkShP-n^t`$qs;,T4F`FSL4iPg/_pQk9cOZ:'E\lcij^9TWQ@$p"3pSPbJ7;
%O)`O.@^giKhi(N`%"ZSWrl:j>-%c2U_b8FlR2^\_9QH<"3(d'W"IN$1J%@<F4pS?4g;9&k<AkGPrq_MK$dLoLRY<orKNm82`u&"=
%.SeFS+>6B8O:fh%/\Ep@M@hcidg%)dX;>EW"^*<7%62AeND5kZ7$9tMP(r%cq4B$]N0K=aqQ%D,J4o)9>4RWJ9+*hmH#5&rC;Iq!
%>I;IQP+f$]e=dU+?PK`NLbP(pdc?)4O)#Tp7</Zqf+kkqMtBT:e]dLo$9P2+6^5eEqGk)qAiQ^@`'&:t4KZDh&J_fIbDM!).C&t-
%32`go<EMmKY0'rh5]"]IWOcSP$bp:bkc0MjcYOqNV.q`#O0--n;.ufYb+K'0_jBH,/KOC%!'9ne8]rSREGK7X(rXnc4hKV[1MK+:
%lG]K,@#A/^^OURYA8L^6MR:oNpX"X`9AcJJU.(dhp>?/>hXaB2=_:o.<4e8P$:m+`)k1>P2kK''l+1I&;;!#h5mL]#B;@<1BRufd
%%E/Tl-m,0ua_B*Ejt3<fDdm1_86772H4gk8?H65ReW^Jtb,/]!\C5>bGnQ51^so7j%XL)8\"+#$?^sW0OYp*PG8@Bk)-ZmrW<Zht
%UI&uUP*p"ZCe2=)9RXA:VqLBQcKNV7G4h)FdSltaB4R.>K([Un.3Ah0L+K/=;Jc!KGgGUA<dAbm$M;+=AJ^3&\rlNF7PbbEiFU=j
%5nCQ?[ue.rOHAY4;_RAmP3so4\#j9?lcqs)0Et5^L#FIJOQpN_^+`^p]2&Ziq%@[1$'QoIJ68=nm@+N*Zg/5aO&d-+QaTN2X4ICu
%<;!d]\:I%0nY$AgpE_Z&h5plQW\tIE%Q1F=fPhua,,A'%&[PIS+b^cMTNhh9=sQa02C%'neqOf3H"B.&N.DL1MhC-4>QD?W>h>=R
%HCk.VjGlKD8eWn2"f[Q98:A^7JcL4%d@o7h]:s)e^u&WX:[8jpJ(js4Q786l9_Oo5"h8<c@^_OZ9.;.j=45T]6I.UsHeJR_X`Rgl
%=\`5rT.FBh3]:1?MQ(&TPU*Y?i"2$&4j1gdh@^>6<[SA9ejoSEkYW&Y6f5.2oU"$`r&/dlr"Gi<;#kadVZUnk6:"cqC09%&>d)@Z
%14hs>[A[[#CqE6[6jXF`efP)LQ!C7s="HRu]NQ"\[r/J+<F%=CAu=NUL]K<JB!VXY(5[]4kW=[l*=Q+SNpI)R>)(U3l#H2<r2U8H
%o7^tL<fh2@9uUf2P`#QgZ'#>JkjYu9$F"87p1,eL,^Z:J!7ca:nC3;k$Q>1q]b\ZV54\!c0mlCW4WH_?GT3oJr$E$*8>h'2?.TL9
%ap(2k#3bb,)#6q7VU7^Q.N6d6/pRjJjE<SFjX)H?$"WQ"C/32I>$@lTRcu<L,:"CD+CnIoBa\?H@063a]Dh8,f8Z4)fq$J*]!g)/
%@j-le\QAaKi*6FSp6.m_?oWsqC]n\E>IEk-dAKX8_`drhWqE7c(OG=NYKhp^d]2Q7--:27EU*X2-id-c%4YT1\\XbXjl''";+]7M
%F!C[aqqtsV_FKd41d..f&_ndE+%%EB@6G1b+*2sCURJ#C-.6M`fP%>*I0Hg.WHr(Iku!f0e@ER)d:%K_"-fDc,$CYa4^s)<\#<c?
%N,g/!Ep2*(Z(BL!!R#k/D5Qlgd*X05WkY(\[Yn(Ol5iKVf9a'q?8^#@Q&L%_i<85i&<2c57@.OUZa:ou@I_=>!)'g.-SlpVHS_'G
%d!9`ufjdln1uXS9k,u"SM?4+,f1n%6qcsku9Cp^iVhL`%hQg=N16eT*Fs'YR&_=]!bW9XQ=mqMB*7GHa(F_0YUO;B5=_(Ob[LkM/
%1^S:1;n$Hk3Z6Qfbit87<fT:Sr0.)-"H[P'Z1[C0/1rC-K$>^J1gnXS0MoLA@(3?O2gO_>.AAEZ#I0aRB\'hIBF@Aj@+b<oPo4!N
%EOsPch5do:<3:HOjsIQX13g.(@PPkJ"!Za)nQ:2I=Y2`:djCPRYHPhi5.$ganNTfm]H)qi3LU3NOr:#.4M+Hk"M39s'JKbtVC9oG
%qj/7ePrSU4o4h-`YUX3cH^-:0?&tP)I5"\N5gbeX4Igr@W?87U7ZPT(8rDlT6@Gq"f51;$qO5PH?u#5c/.7-ZM.!QR4oA-`=fJu$
%@^o\o1E(*@dBqdgGXt^d=4:]mV/(%HCmA)]!HF+N";Z8eW\_1Y(IcmGK=l^\EBi3),I!pHCCVSO(kAccAF-k^h'X/-o$GUA=XPSn
%DE8kt9+/dge++\,"`nCZ8q_hTBJ:A#eT@$t\>;>YE<3,q6uA5=BIJ"o8=XnWfNt":C?cF!Q5Ip`(sIF:9n-El0haDYj[01r7WZbg
%"=_O8hk74"<2Mcqd:6E4i6,si&iPXlLZ5<g>g16*VoG]I\CsrfJRP[MJ#8H)d"=70\MQ5.WPo;12#`cMlg1c-FnG@C(2%GZi'l-,
%%&g^k4=VsP9)i-CQT&UL>Gs^gQ8m-r?F"_7Aj]t]h4bV&0]bJr*%6+n)7Lo_hO<\^R29Dsc(9%BE\'o4mVbV(qT4mGOT715#eDeY
%5(j#C]"+r+5Fn'8ju[:&k*g,T<`NopqTC'k)(EN*%F#k^2&2$C_)>S`Fo]-;)%,Q0[qO@Q?sL/0.!]34%T\Qj[gXF_;No3M9$,(U
%8.1FLO?qT9Rq.BqbX%*RPSS>&b*OVI)&0]ia0Z?2M`-Bl3"0Ml'#dgO]I+;t1!rHT/BlB4rNr_F;6o3_8Om53?o<#F&f!H@amQ`6
%Jr0e-RNgEYhq^UsF*(&HpN`!FD^H[Y-<*T$O1K*cPD#q$$[mGOYV]B`.f3bm*[&n#7dE00&='i[1Y$J!=Y/t@Cb-LkibjmB1>(cP
%;l8hX9I7F1:=1FK/ZF"s('4/gJ2ome4iShkWK;<6+bf(;Z*gO&7`)2A_Z?E+PBF'=9=Ohb'&&G)/Jr&]fUZFY_d)h[8krKbR,N.O
%#>=fM;,0a0]jpe-W'+n1Q3M$jpoS>TebN$H1,]PV@AWjcdCVr^!*6B;""=s%DM4O%X'(<GB\<6q?1%L.6tWL`I&,\nqKe:k9<+/F
%W+EHpdqoGe'u_mrIk,E[d:V]0qFG#Dh:-$nM)I;P7hIf53\]u0fglnQm'rEc=9c-+.\0mFSFiq",!,IdY:YPMLhV<O'Mo"@i&$3h
%]ZOj7A4coj/:nP<SFlKeC7Ou'Fqq)eZ_gbZ@*q2=AuBIY8b$NN1X<NDK*KD^9e2MG&1/u3%(9qp2=_`U#E-H#ghs2N>nhE(K/:c:
%7EKN[86VQ9D1K.$-'b+Y+Je5>74uj<EZJ=@Q/F:k5.2pjM+^;Mrn[2W0ZC/*OEJ\4&R0;l_:CC4e58APesi#.CeRO/h*pCDpgC`s
%Znu=R]V>ca(-P,=2JGXK4>hc.2@XI#l38oQG5tJ_,"ug\MkEU2$>;IPeL12g2BN3`:=eKOZa*,NbW**$@ZsMP9Y4uC4a=Rq'f-<l
%Co/@#$o5qk[>dnFQqE-f('QJr.l%Bdq6Ug2ap;:(kd9YKST[/!foe)@d3c>7Vcf+-/iS'nMj']#(fB=&:6-8/S2S5`AIEDtl8Skp
%*s%&,hB(Pe="5cQ][Z$mm5UN)kR<Q4)"^idcYfr@[M(G*EtcOrWoSt&OIr/)PAN2*JW^<VNQOolnlT$feT<fpb9cK0oZpg9WN2kS
%?tc]'PjdNSPBC[_ftp.L?02A<%>0WrgDu.u#U<>We>PHjGN[t!PI4g25nC.16jA]BBW&q?L15@WN$mANek)j'Y2oUhNQ9#'%AqYu
%O%48Ta'rp+K3+a"`oY'N1FdMO@S,h/FCq1k_TT1:`1\jbg@6`[M]'ecclg)!pYK%p\Q$ikF-CLdq%c4'$8lEG@`,(2K<,_J@O"B)
%WIrjIQk^QT9,]@=;6Ni_Tl5]2G,jiYm%=X.0Zg!-La!_#LFZCZo!A3#QBt/Z9Du98O6%libk'.G\kR")+2h4Q\CO<8dl46skXn[O
%C"i:W)IiCoWV+8@A(!F8nbLtsc1TgXnm$mt]H88VP`X+T7,bWiKu$Nl.=5Ihi_JVGdLo=pE67IdjS\N2'6hRU1VB#EM[Xf-S[B;q
%.R],Wo;[5Yp&o7>"X6m1pCCs[2[Mu\5>s]SEA]pO.)oaK]3GAs-Ko(HEgTo1bU-Q'.\eu`QkHNR*i=pe/(KU6Yj\bhK]erg0]ah<
%=-if'6IN#4fYKgR6$Wf>o!2G5!E^l\"mDYE_&*oHQ:aaCTREIZ/=hk"fIQ4I5WA3AAR;go`G*:!K85D7R<H&hK?e'Q7.dl8;cZ>4
%U$7^)E8PWYgb"3f&ke5?2k%NLB89_3PSf8`V8`9&UKO8j.RGR44t\[s(-NPg,e!foP(bTX]`X*f<KO-J>!a8/&!m'ebJ):k?1en7
%nS%U@QEuMd!;A\`a4-Hu(Q3;J6hZ-m"5%M+HWZ6)gqdHE>]f_M0Fuac59++Ad*Q0!Qf9fi!GXs`d<BPC:hZ>-NbR"UcWd+gG/4bJ
%KS)s+_skpp6l/Q-6+R%t3Aj!aBL92rguSFDZU/O8%@JE@N%1eXc5%GUeZE?5'5NYS(Tlb?S16#H<[LK(`VlK2'bQkue/rnmcn18\
%J3Eb\a?`M#`aKB9mC!sF+'pj#>sstp*W%*7Wm:J("S`ok<`<cTEjj&[r,;k(o(Ii'K1V,I3.mK\,o]R9]I@n[M:i2:Z:4]]r_PIY
%MQ)0j>-kb];)=Zq`!Dp!(KM3fGfE'.ABjG$,s!iQRtsaj"Eu(4b2sV5X)'+h93m6"Fr9[lnCrW.M4AMAf*]`-(laG\;kPRr(Dh.;
%/0H3+O&Oq_/[3W-JCAY#Egi3\I2Tc&fpk6F-l>b@T!#%<GuRqCUa@_S:0!6R)@5"G:29JrN,k6F(_Qs3.F%<?d0*O&31PqO=#jFa
%(3A&<OBJij;GpNB,KXtN/C(_,Z<UQ1=pU#t_.rtGZDsW?bQVueZY*`"X@u\oTICE;megEl?*`u[f2oGm&>VO51E`*'EM7FS&Q]T'
%]8IF[asAEbAN0`FO^]6DT9(\Uj]jI>Cc&HT!\Y_KKtmqJNJHAo#IbcD&1hY*WR0l]=b?FX8/&P6PqMB$AY2q)b"5VJF7essAkA,C
%<QS^%40P!N9:",*=TmiuRF[Tt\h$aiR,QD8OD7XFE_.^<2A!i!fitS)Zs>Ut^ljp(d7j5U>?$at4i"?r]dRUr9uL2JXL:^3B2#`R
%P.L^*:9;[P42JU39H@Y\;$NaE7,Cn^dYML.MtB]P^^besp38(ISk7J67aH,98P+VYO;IMBRVSes[aj3#])q!IZ&Cem\C^JHLGU=W
%?^Xi3YEUfJ>0]gsMl#o#,CiG':$%SEi*)Ko:I2'J29EAoIRV0RH+g;joMo%>9kiG#9\Sd#`M=mhqh?k+9<Z'5Od=[SN;WT'j/6k\
%nYk,A[Co,S,;gZ1"fQ!BVZ9&[2KR>Xps#>Zc)R9ZnB-'Qi7M'X;c1$Zo/Pk]2Ba7G#rHT2b7t<B!R.UHq;/k73/\MH-CK2X_mMbK
%^-\GbWqd*$neUG&Z,rWgbj$.3"AM?kS&2;K*t[#\-!CfqlX:Wm<kG>HMb`bsKQ=idP1tjsUq?:RXSlG5-ALfiZs_a'p]O8nc'Zdj
%ghIh3e!c7'3u\saW]]Jd+[J-A:4I,R+s<Z/JJ5"P^g6/p#GbRc?1[E=/Jo9Vgi>^u'c+t^,%ZJnB=U<uO6!Z_UV^.o&usa$XN&/#
%P([XP@r^?jPo*I`F%eFp+VD9^F\:^q?QSU^1=fTNPDFruCX>2Q\MJ)n=3Tsqm,j,JpJ@YdC_/n#;g\05Y2*RG`F[b.bef&D$rB45
%0c4d?k(;9\kOK!Q#BVQE*)<3t^b#kK*)=c#jh,J3jZKB":?&(g!g>W/=9=k*?g^pCfPD,N\ssu]D#di,,0O.X'lV]@M#rdAc0q]E
%ZNq^e.kZ06kc0S0ag'PgpeWcIE&.O?ZU-k>*i4[<#j7*LIH,?:9f4=k&S0#L5dTOYX);"pB_"G=l9TQpg"ZmJ:\*@)57#BM(>[M/
%Ne?t%4S@%c`[];&TFdZp"c'0>\usr=B$&eXb(&[r4\CFLC>)qT_D)'qnU&r*`0:jtQaD].UF4G;"Eb-gik,C-2lk4Y&mnPY6nN7&
%=`Y[B]Oj3P`hW-`MabSR_T]"q.m1#/q28j5X)a5c=C3AmPBH/lCJOcpm@_d^E#'_6-R4upmCY6rPVF"43h1c%mJmGGVC2/^'q6f-
%Ypao?5kAGF^2BH9:P(rZ$o]hhr>_VWTIm>:qIS%)KN1S`BpZ[3F[VfG]'LUHQ^VNe&PbY8gcJp&d`6?S5!nb__sVtuRI5C#562hj
%ZY7C(!h;L9j*MZ6?3eG^3c4WlkHR"98GBH=/g^tt8_l/A@%JZ?lU$pm4+HI'dnVTnMB+A-?Rh2i:RPAT44k<="!8$2gcnfjlm(0$
%R$Qt.lC]E`;bU=u%WAO+lTG8D>u'ACFDuDBH6(EHo@k>/1o?)IHVKA-P%X"b<eYai2P&fa:OlKBqb,aj4cc^%r0b%JGjKJ'rlHU8
%B]&mR#3r()`6@$D,FhemfRfrb6$)YY)aupoNm3:JI/QWQIlT%Gr!5oiP/rYniWo0h8-Pn%2X!o-"SZiP=#\X,_>X&,X?*7j;C.El
%@j6l`WDkp%As5U8'Atu:7Ef(6JFi*Wdcm<])RFFW8gDjlI#;l_4af)Vm5SbMkdZ]7<FkW%L6V'H:-`i1U7btsI8>HBrVBE[a%mI,
%/0'\k@]]M!Fr*fV/=[2>R*1T"Mn:pOn2g]t7a]oV+Pgu[-l5P'!/0<\pgU^&Z<q]DeJu6:<8VD"UbVAG.7jPZLP[n(H#0-e_r^7l
%E1/DU89st5357YGE"Q??=i*G(-3e^uT&U9$J=F=t"+G9fVZYr3@O<d"[RF%)S&\-#I='V/B?)&=G(62e05Q]G/)p-(4mq7`p/R\>
%QbgQVq<Lh-@md4]HtcB.j7NaB^s\eSk:5"):"p8=8e*^D+NeM]X@,%/J5E!'Ee>m[X^7g[G(<U3R5g55kd2^uX0l+pkC]F)X6sp3
%Tje,gM0T5ni][jH``\_YMQ0+=eVA_3_7=KAM<?6/"0rGH75`W].Cb,]mV[pAHNK^`Xfb9SnH:hdhA*DF=sdC%%T5`tMN'i.=W+Q+
%DeDL*4onEA``[4d=@t0dG];<R=qL)?@G];fR.e&'1DBH_1m8EIT=9N/iS'n(%j/q@(gP)Sc]mH*F+WfJiW<17A#*j4HaW7:hQ\1n
%@3.Fe"d2]A"_%3N3"HB3+Rr$BRQ[Ei08&l^5%5>Eb85mSI$b[<f,:!W>n%Tqc<gs<C)MFTBQ,4?4d>i7c4d6XlN8l&#=^0a*i&Tr
%MDE.B=1m6H,ktiXS=_=54>;?e!WNK"LF+s9$":cb^F0Z55")ofDQ,^bT7/ZPG"?I?bTq*#h!pcncp1I(8YPN8/hY)ll>A\l7iQ]$
%!3=1,$rl5N'/7!/&F+5-U@TNMUk6*0EoS1HOT!F',E>ml1\46,O#:(\;*363%:muubUiAf_$EQO"Ukc@8\+HB@[%7.BHN%Q>O_f5
%4>s'+PXQbjFWsNXD:UmGNR`I@_S0r-^0G$6V'hJ:.c\KVX.$l0$U@__,db212.b)tJjhfrW5Fe=X%59t=E"PjKHneVi3\;+'$?Fd
%QbiLj7NMF>/'?;2(m2:_D[-FA&R<T/'Qg<Z`H<@;e[X<gZM61CYY&5nRs`qnpG.C:n[0Ia@b@ZIS*SFg!R;F8,ADK34FH$nIgXs9
%dAumR3"MdI)dEMA3nTmH&\KM-Xle2\\2V[j\0<qYkEDQGOj;._5(:rXN07+q>P&DNd0)'HoYa#LkR8`cHL_2o"Io2=Y["5lCc1a)
%n(Th.FnOd,O4^((bPY=:g_2XDA0d;^cB72Sj@/-+h!24/[:Gc#--e`=cH'A8dj@j#5?Ilebn>Z2'6("<e_p1.4_4cJM:'GuODKeS
%]&Hl&$%5hZG^TWO2^lPB^=j0=&_p_PDML"Z"p*;Q>!NK:QhE!O/ZZ9$GQ.8'8eL;L<7cPoq&>-8<n_m%=#4lR'l^/$Np^15n,'05
%W)$2H$[1I0lU#7sip[o#f_LIhX<FFg?Gg2uRD=5*.QHHV?+5I8!oI@7$M7&F*^p>dI0,'Q'!$Yl[[i!_[j_>1$9$fC5!D]L.R2pK
%=L\c^YD3J)ToUL8X'nW3kTGe9EE\002Ptm,25A4*]B[G@mbmaH@Ktu-3iLY+5e=!p#8/R*2sIt7R@H@blUqJY\Qst68g<U`Jm%71
%!O@>P(In9:LS4mddX&O2BnID4_W\*[T17uWlX\k?8B(h?p;(mKW$_hR%q(asfK^?JO'o<lCui+AMI"6a@N,l,W8T<lmo.GQQ"$@-
%1J_En`H5c,d\Y-q(C+WQkq,7DpS5=".,0^3_<Jb*<JC=q.VBc$Q*Ek":W2`)Tbd^JMqBUpWnL-jjlkPcTI1$<#Z.>0SU1s+JVF)j
%@/-s!7TL/8VYC9:bqb9?29qL>=T_1^Y-AY&pC=(lH,F)l^n0liR!ISnW0Ge7n0I$L[+$5`^bh9Q)VA%>"(K9K1P(J6O9SaGj9\AP
%3"K,&;E&'BEHEt.>qsaV:KTMtm;[TV.2`,p=J[:4OKaK+0+.%]`kXEI4m:B1jlAZ\GF$e-@h#XkKc)C:\_U%":>rEPB9.I<:7D&i
%9uV-N-Oh'U?BW^>4M.s/O/nL*Nr$l^Y_1DZ&u'Er?c(r2G.d_e30&Pt?B7m4dkQA\!ViRbJi4;?CnOGuXN<pA/@s1Lc3@DDOj<#i
%6O2f'+_8-rmAE=m>(YdR#aSNgE&\sX='/3-LB5]`^j,e\e5818#?2uA2B<9KIE1TVKC^3s-&4I37U<AC&*W%Y_fS(M.-g>E5lB$g
%aLE!62;<L>S5$)KGt44YFu&Lj37kO\qr9GV(d``N.<%td\;7cd8T90-)hD+_!p;%%b;+DIK7(Z4DMHn@/X'ca#^l\cc#S\2c9H*1
%;foV+6V!dBjKYJTAc+`6oFB/hc,qAR)4]GG?@N=;q\8:]@X8sJ?\cgRN_b1\.TMVL*5Ue3o$PiZg"!!\DIV`jG'%eHmG-)`>Si0U
%53p=SNlG8I-h:$>W:PYSZ\+HT'4%ke!Y17taZK!N89pMFi%Z&%M7fU2]<f.;&!>QmH"TVoH"R=-msms-V*)j]AE1u`nkQJEP$QpQ
%6J,k8GF4Dt*Q9&+]@Y.?]Q]Ep4#8S/SK2fl#7.<(LU`!)Euj$IGF7-l:#\og/]!NYO:VNN<X3Ul)1hJQQqI]Pge#ZLGn>0tgu!0m
%LV93R`17p=,TG/kolH2qi'Z4L6PCcm+i^/]d,5t@S`*U**^^H\;\c>b1GYbs!=ifk75qumZnmeHg=\cYG*3rl6]@_^B/u)t^b&WR
%=k^]6>2Ab$q1s!YC(&gnS[1b0=JLb_:KG557h7;m)R!`nI3PXjeQ#quF/DH`H1'mrge>bKY-u@Da,333LR'!;noRW1H@YXU+'Nt7
%')P?qIm@735Co]I!E)jeeF0?dl=-T*NS1%;SY*4dB.3"qfQ"ANklEP+F]Qpdi3&.(lUsoa@.9`3Pk;&7n#tM=5dI4:nX'GZWFV'2
%V:`Z<+3UN.Euk44loOt`F<*LLj^^$CMR,G5"\h)-rmWbXF9Ou5mI%CVFZ6"0da1e=ES&R0cdCcU"*]s&[E(ppq>f[l'L)J%Z&@O"
%Q0ILRH@F2urd$;up`_\ib2`0<i,lJh.U<8Af14RKJma3[<r"/UpClK_H5%%3'B!,l`CqYG_>3aHcf3.+U$J$#7WT0sLVp1b'Y(pG
%c+F>YZoRM7K(iotl\'3sKLsGV#mi?d'Y,Pd"Ft[eR6ZET[^Nr!J#UNTiLPKc9VF>cX?/E9B>8EE6.*nP4ZO]3`o+6<Cktj8gSepO
%EA3ouC"S>To6LJ.?Oq;uT9Mofl.H^NXcsUj!;9^c[C<GuEp*gKQVl)@oD3if9/aE$guUUW=5,^e/q`b;)m;I0N[\3UJY&kH8s^oi
%p-?TdV:%P4a1f&n]"&:oVDO!cm>?FGpoJVLa'h1b`D#$A$C8db^*pbuY;6\0_8,(&!U9\.Nru(Z&6JjINqNXn5mTPs4bG@r)edNs
%-_TAnjT&C6KoEGs*-H=FM&[FW(o&Rqp*[Y$%\HLNj69JYpL0ZUapq1Cf:WuZbM_1AFg9-/@49\;f6PRGQu'o-&-*sXY)B7#DY4o0
%H[o/Jckq]j<g+0NSq4NUc*(2Y5<K,2?Fl$!)urRAp)7!D;"g)u=/3;V+*o'$4#R1WB6WneSAso3:r\kC_G?JuNutXhJ%PX_#r>j=
%b"N1g]<55V*##NAmJeuDB$>GOYC?#pa1qG*:Ohu::$D$6Dnc`_s7hX'+C4s1.P+YNruN3FFVcOe#C')FXR\n9E3%INmp0NE])Ld(
%TDe]J?^K[KlGZiV2h/Pgr8<2:q"\P]?f1h"j3@2m]<0do^V9O(h:9c.(GF\$]X`BsrT`\6a1KrA?9[4O^&Gpm568Snj+X-*r)]Ni
%m<_(p5Gmq2_Z~>
%AI9_PrivateDataEnd
